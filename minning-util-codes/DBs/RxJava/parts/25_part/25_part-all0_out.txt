Positive	Negative	Text	Explanation
1	-1	Feature/#5045 more generics in RxJavaPlugins (#5058)  * widen bounds  * widen bounds  * add test to ensure generics  * use wildcard import for io.reactivex	Feature /#5045 more generics in RxJavaPlugins (#5058 )*widen bounds *widen bounds *add test to ensure generics *use wildcard import for io .[sentence: 1,-1] reactivex [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: cancel upstream first, dispose worker last (#5075)	2 .[sentence: 1,-1] x[2]:cancel[-2]upstream first ,dispose[-2]worker last (#5075 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: compatibility fixes (JDK 9 & IntelliJ 2017.1 EAP) (#5069)	2 .[sentence: 1,-1] x[2]:compatibility fixes (JDK 9 &IntelliJ 2017 .[sentence: 2,-1] 1 EAP )(#5069 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Update README.md (#5068)  * Update README.md  Error:(13, 38) java: variable v is already defined in method main(java.lang.String[])  * Update README.md	Update README .[sentence: 1,-1] md (#5068 )*Update README .[sentence: 1,-1] md Error[-2]:(13 ,38 )java :variable v is already defined in method main (java .[sentence: 1,-2] lang .[sentence: 1,-1] String [])*Update README .[sentence: 1,-1] md [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update codecov.yml (#5066)	Update codecov .[sentence: 1,-1] yml (#5066 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: increase sleep time in XFlatMapTest	2 .[sentence: 1,-1] x[2]:increase sleep time in XFlatMapTest [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: fix replay() cancel/dispose NPE (#5064)	2 .[sentence: 1,-1] x[2]:fix replay ()cancel[-2]/dispose[-2]NPE (#5064 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: update readme parallel example (#5062)	2 .[sentence: 1,-1] x[2]:update readme parallel example (#5062 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	use bounded wildcards for errorHandler (fixes #5045) (#5049)  * use bounded wildcards for errorHandler (fixes #5045)  * add test to ensure signature	use bounded wildcards for errorHandler[-2](fixes #5045 )(#5049 )*use bounded wildcards for errorHandler[-2](fixes #5045 )*add test to ensure signature [sentence: 1,-2] [result: max + and - of any sentence]
3	-2	2.x: Feature/#4876 more null checks (#5055)  * add NotNull annotations add assertion to help static code analysis  * avoid false positive  * add annotations and assert statement to help static code analysis  * remove redundant check  * mark parameter as nullable  * add test to reproduce npe  * add null check for avoid npe  * parameter time unit marked as @NonNull  * add annotations and assert to help static code analysis  * remove assert statements  * add missing annotation  * add comment for test case	2 .[sentence: 1,-1] x[2]:Feature /#4876 more null checks (#5055 )*add NotNull annotations add assertion to help static[-2]code analysis *avoid[-2]false positive[3]*add annotations and assert statement to help static[-2]code analysis *remove redundant[-2]check *mark parameter as nullable *add test to reproduce npe *add null check for avoid[-2]npe *parameter time unit marked as @NonNull *add annotations and assert to help static[-2]code analysis *remove assert statements *add missing annotation *add comment for test case [sentence: 3,-2] [result: max + and - of any sentence]
2	-1	2.x: document (internal) SimpleQueue (#5056)	2 .[sentence: 1,-1] x[2]:document (internal )SimpleQueue (#5056 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Another adjustment to codecov.yml	Another adjustment to codecov .[sentence: 1,-1] yml [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: disable codecov-checks on PRs (#5057)  * 2.x: disable codecov-checks on PRs  * Try with different filename extension	2 .[sentence: 1,-1] x[2]:disable[-2]codecov -checks on PRs (#5057 )*2 .[sentence: 2,-2] x[2]:disable[-2]codecov -checks on PRs *Try with different filename extension [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	add nullable annotation to simple queue (fixes #5053) (#5054)	add nullable annotation to simple queue (fixes #5053 )(#5054 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Feature/#4876 nonnull annotations (#5051)  * add @Nullable annotations to RxJavaPlugins  * add @NonNull annotations to schedulers  * javadoc for NonNull/Nullable annotations	Feature /#4876 nonnull annotations (#5051 )*add @Nullable annotations to RxJavaPlugins *add @NonNull annotations to schedulers *javadoc for NonNull /Nullable annotations [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Document and test amb subscription ordering. (#5047)	Document and test amb subscription ordering .[sentence: 1,-1] (#5047 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add StackOverflow links (#5046)	Add StackOverflow links (#5046 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: add parallel hooks to RxJavaPlugins, add missing params validation (#5043)	2 .[sentence: 1,-1] x[2]:add parallel hooks to RxJavaPlugins ,add missing params validation (#5043 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: reintroduce OnErrorNotImplementedException for 0-1 arg subscribe() (#5036)	2 .[sentence: 1,-1] x[2]:reintroduce OnErrorNotImplementedException for 0 -1 arg subscribe ()(#5036 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Annotate function interfaces. (#5023)	Annotate function interfaces .[sentence: 1,-1] (#5023 )[sentence: 1,-1] [result: max + and - of any sentence]
3	-2	2.x: dedicated Single.zip implementation, no dispose on all-success (#5027)	2 .[sentence: 1,-1] x[2]:dedicated Single .[sentence: 2,-1] zip implementation ,no dispose[-2]on all -success[3](#5027 )[sentence: 3,-2] [result: max + and - of any sentence]
1	-1	Release 2.0.5	Release 2 .[sentence: 1,-1] 0 .5 [sentence: 1,-1] [result: max + and - of any sentence]
2	-3	2.x: option to fail for using blockingX on the computation scheduler (#5020)  * 2.x: option to fail for using blockingX on the computation scheduler  * Increase sleep time in XFlatMapTest  * Add a custom RxJavaPlugins callback onBeforeBlocking	2 .[sentence: 1,-1] x[2]:option to fail[-3]for using blockingX[-2]on the computation scheduler (#5020 )*2 .[sentence: 2,-3] x[2]:option to fail[-3]for using blockingX[-2]on the computation scheduler *Increase sleep time in XFlatMapTest *Add a custom RxJavaPlugins callback onBeforeBlocking [sentence: 2,-3] [result: max + and - of any sentence]
3	-3	2.x: Add scheduler creation factories (#5002)  * Add scheduler creation factories  Resolves #4993  This is a pretty vanilla copy from RxJava 1's implementation. Note that I had to tune NewThread scheduler to not be a singleton to support this.  We had talked about borrowing from project reactor's APIs for different overloads, let me know if you think we should add more fine-grained controls through these.  * Add `@since` info  * Change failure string to "is null"  * Move to RxJavaPlugins  * Remove no-arg overloads  * Rename to make it clearer about creation  Added scheduler because we're not in Scheduler anymore. Changed to "create" because "newNewThread" was weird  * Add tests (WIP)  * Remove unnecessary nullcheck  * Remove double try  * Fix tests, make them more robust with integration flow  * Shut down custom schedulers when done	2 .[sentence: 1,-1] x[2]:Add scheduler creation factories (#5002 )*Add scheduler creation factories Resolves[2]#4993 This is a pretty[3]vanilla copy from RxJava 1's implementation .[sentence: 3,-1] Note that I had to tune NewThread scheduler to not be a singleton to support[2]this .[sentence: 2,-1] We had talked about borrowing from project reactor's APIs for different overloads ,let me know if you think we should add more fine[3]-grained controls through these .[sentence: 3,-1] *Add `@since `info *Change failure[-3]string to 'is null '*Move to RxJavaPlugins *Remove no -arg overloads *Rename to make it clearer about creation Added scheduler because we're not in Scheduler anymore .[sentence: 1,-3] Changed to 'create 'because 'newNewThread 'was weird[-2]*Add tests (WIP )*Remove unnecessary[-2]nullcheck *Remove double try *Fix tests ,make them more robust with integration flow *Shut down custom schedulers when done [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Give more time to delay tck test	Give more time to delay[-2]tck test [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fix copyright instructions (#5017)	Fix copyright instructions (#5017 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Override RS dependency to compile, replace owner info (#5015)	Override RS dependency to compile ,replace owner info (#5015 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: improve the parallel() mode test coverage, improve its code (#5006)	2 .[sentence: 1,-1] x[2]:improve[2]the parallel ()mode test coverage ,improve[2]its code (#5006 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: add Flowable.parallel() and parallel operators (#4974)  * 2.x: add ParallelFlowable  * Fix groupBy benchmark	2 .[sentence: 1,-1] x[2]:add Flowable .[sentence: 2,-1] parallel ()and parallel operators (#4974 )*2 .[sentence: 1,-1] x[2]:add ParallelFlowable *Fix groupBy benchmark [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: ExecutorScheduler.scheduleDirect to report isDisposed on complete (#5005)	2 .[sentence: 1,-1] x[2]:ExecutorScheduler .[sentence: 2,-1] scheduleDirect to report isDisposed on complete (#5005 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: assertNever(T value) / assertNever(Predicate<T> valuePredicate) (#4994)  * 2.x: assertNever(T value) / assertNever(Predicate<T> valuePredicate)  * fixed Java compatibility issuesJ  * fixed Java type compatibility issues  * changes according to PR review  * changes according second PR review	2 .[sentence: 1,-1] x[2]:assertNever (T value[2])/assertNever (Predicate <T >valuePredicate )(#4994 )*2 .[sentence: 2,-1] x[2]:assertNever (T value[2])/assertNever (Predicate <T >valuePredicate )*fixed Java compatibility issuesJ *fixed Java type compatibility issues *changes according to PR review *changes according second PR review [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: A.flatMapB to eagerly check for cancellations before subscribing (#4992)	2 .[sentence: 1,-1] x[2]:A .[sentence: 2,-1] flatMapB to eagerly check for cancellations[-2]before subscribing (#4992 )[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x: Update marble diagrams for sample overloads (#4990)  * 2.x: Update marble diagrams for sample overloads  * Add Maybe and switchIfEmpty diagrams	2 .[sentence: 1,-1] x[2]:Update marble diagrams for sample overloads (#4990 )*2 .[sentence: 2,-1] x[2]:Update marble diagrams for sample overloads *Add Maybe and switchIfEmpty diagrams [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Fix Observable.singleElement doc (#4989)	2 .[sentence: 1,-1] x[2]:Fix Observable .[sentence: 2,-1] singleElement doc (#4989 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: make Obs.combineLatest consistent with Flowable + doc cornercase (#4987)  * 2.x: make Obs.combineLatest consistent with Flowable + doc cornercase  * early termination to cancel the other sources	2 .[sentence: 1,-1] x[2]:make Obs .[sentence: 2,-1] combineLatest consistent with Flowable +doc cornercase (#4987 )*2 .[sentence: 1,-1] x[2]:make Obs .[sentence: 2,-1] combineLatest consistent with Flowable +doc cornercase *early termination to cancel[-2]the other sources[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-2	2.x: fix cross-boundary invalid fusion with observeOn & zip (#4984)	2 .[sentence: 1,-1] x[2]:fix cross[-2]-boundary invalid[-2]fusion with observeOn &zip (#4984 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: fix Observable.concatMapEager bad logic for immediate scalars (#4982)  * 2.x: fix Observable.concatMapEager bad logic for immediate scalars  * Don't print-log	2 .[sentence: 1,-1] x[2]:fix Observable .[sentence: 2,-1] concatMapEager bad[-2]logic for immediate scalars (#4982 )*2 .[sentence: 1,-2] x[2]:fix Observable .[sentence: 2,-1] concatMapEager bad[-2]logic for immediate scalars *Don't print -log [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Update copyright	Update copyright [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update Copyright to 'RxJava Contributors' (#4980)  See https://github.com/ReactiveX/RxJava/issues/4978 for more information.	Update Copyright to 'RxJava Contributors '(#4980 )See https ://github .[sentence: 1,-1] com /ReactiveX /RxJava /issues /4978 for more information .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Add newline to end of files missing a newline (#4979)  This is to get rid of the "No newline at end of file" warning.	Add newline to end of files missing a newline (#4979 )This is to get rid[-2]of the 'No newline at end of file 'warning .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fixed a typo and other cosmetics issues. (#4976)	Fixed a typo and other cosmetics issues .[sentence: 1,-1] (#4976 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	readme.md with links to 1.x and a quick guide	readme .[sentence: 1,-1] md with links to 1 .[sentence: 1,-1] x[2]and a quick guide [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: fix withLatestFrom null checks, lifecycle (#4970)	2 .[sentence: 1,-1] x[2]:fix withLatestFrom null checks ,lifecycle (#4970 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Add Completable.hide() (#4973)	2 .[sentence: 1,-1] x[2]:Add Completable .[sentence: 2,-1] hide ()(#4973 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Improve compose() generics (#4972)  Resolves #4950	Improve[2]compose ()generics (#4972 )Resolves[2]#4950 [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Add @CheckReturnValue to create methods of Subjects + Processors (#4971)	2 .[sentence: 1,-1] x[2]:Add @CheckReturnValue to create methods of Subjects +Processors (#4971 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: add subjects for Single, Maybe and Completable (#4967)  * 2.x: add subjects for Single, Maybe and Completable  * Add CheckReturnValue, rename local test vars	2 .[sentence: 1,-1] x[2]:add subjects for Single ,Maybe and Completable (#4967 )*2 .[sentence: 2,-1] x[2]:add subjects for Single ,Maybe and Completable *Add CheckReturnValue ,rename local test vars [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: add strict() operator for strong RS conformance (#4966)  * 2.x: add strict() operator for strong RS conformance  * Fix javadoc and annotation	2 .[sentence: 1,-1] x[2]:add strict[-2]()operator for strong RS conformance (#4966 )*2 .[sentence: 2,-2] x[2]:add strict[-2]()operator for strong RS conformance *Fix javadoc and annotation [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: fix takeUntil() other triggering twice (#4962)	2 .[sentence: 1,-1] x[2]:fix takeUntil ()other triggering twice (#4962 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: add sample() overload that can emit the very last buffered item (#4955)	2 .[sentence: 1,-1] x[2]:add sample ()overload that can emit the very last buffered item (#4955 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: fix LambdaObserver calling dispose when terminating (#4957)	2 .[sentence: 1,-1] x[2]:fix LambdaObserver calling dispose[-2]when terminating (#4957 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: fix minor javadoc errors	2 .[sentence: 1,-1] x[2]:fix minor javadoc errors[-2][sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Release 2.0.4	Release 2 .[sentence: 1,-1] 0 .4 [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	fix javadoc for BehaviorSubject (#4951)  -fix examples for creating BehaviorSubject with or without initial value.	fix javadoc for BehaviorSubject (#4951 )-fix examples for creating BehaviorSubject with or without initial value[2].[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Fixed Javadoc for SingleToObservable, MaybeToObservable, CompletableToObservable (#4946)	2 .[sentence: 1,-1] x[2]:Fixed Javadoc for SingleToObservable ,MaybeToObservable ,CompletableToObservable (#4946 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: fix timeout with fallback not cancelling the main source (#4945)	2 .[sentence: 1,-1] x[2]:fix timeout with fallback not cancelling[-2][=0 negation]the main source[-2](#4945 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: fix publish(Function) not replenishing its queue (#4943)	2 .[sentence: 1,-1] x[2]:fix publish (Function )not replenishing its queue (#4943 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: add safeguards to generate() (#4932)  * 2.x: add safeguards to generate()  * Fix typo in the test name	2 .[sentence: 1,-1] x[2]:add safeguards[2]to generate ()(#4932 )*2 .[sentence: 2,-1] x[2]:add safeguards[2]to generate ()*Fix typo in the test name [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	eaadb540dad556cb524a7376b5bc6f07f108b93d (#4930)	eaadb540dad556cb524a7376b5bc6f07f108b93d (#4930 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: fix timer() ISE due to bad resource mgmt (#4927)	2 .[sentence: 1,-1] x[2]:fix timer ()ISE due to bad[-2]resource mgmt (#4927 )[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Release 2.0.3	Release 2 .[sentence: 1,-1] 0 .3 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update CHANGES.md  Release 2.0.3	Update CHANGES .[sentence: 1,-1] md Release 2 .[sentence: 1,-1] 0 .3 [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Change Completable to CompletableSource (#4924)	2 .[sentence: 1,-1] x[2]:Change Completable to CompletableSource (#4924 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: fix TestSubscriber/Observer message texts (#4921)	2 .[sentence: 1,-1] x[2]:fix TestSubscriber /Observer message texts (#4921 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: fix & update Observable.repeatWhen and redoWhen (#4911)	2 .[sentence: 1,-1] x[2]:fix &update Observable .[sentence: 2,-1] repeatWhen and redoWhen (#4911 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Use t instead of value to allow for IDE naming (#4907)	Use t instead of value[2]to allow for IDE naming (#4907 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Whitespace fixes	Whitespace fixes [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Observable.scan no seed fix post-terminal behaviour (#4904)	Observable .[sentence: 1,-1] scan no seed fix post -terminal behaviour (#4904 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	doAfterNext - prevent post-terminal emission (#4903)	doAfterNext -prevent post -terminal emission (#4903 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	FlowableScan - prevent multiple terminal emissions (#4901)	FlowableScan -prevent multiple terminal emissions (#4901 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Fix typo in DisposableHelper (#4900)	2 .[sentence: 1,-1] x[2]:Fix typo in DisposableHelper (#4900 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	FlowableScanSeed - prevent post-terminal events (#4899)	FlowableScanSeed -prevent post -terminal events (#4899 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	2.0.2	2 .[sentence: 1,-1] 0 .2 [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: fix compilation errors when using Java 8 (#4893)  * Fix Java 8 compilation problems  * Suppress warnings for java 6	2 .[sentence: 1,-1] x[2]:fix compilation errors[-2]when using Java 8 (#4893 )*Fix Java 8 compilation problems[-2]*Suppress[-2]warnings for java 6 [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: Issue and PR "welcome" templates (#4891)	2 .[sentence: 1,-1] x[2]:Issue and PR 'welcome[2]'templates (#4891 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: fix firstOrError back conversions not signalling NSE	2 .[sentence: 1,-1] x[2]:fix firstOrError back conversions not signalling NSE [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Fix code style.	Fix code style .[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: dedicated reduce() op implementations (#4885)  * 2.x: dedicated reduce() op implementations  * Fix unnecessary duplicate assignment, remove trailing spaces  * Check for more terminal state	2 .[sentence: 1,-1] x[2]:dedicated reduce ()op implementations (#4885 )*2 .[sentence: 2,-1] x[2]:dedicated reduce ()op implementations *Fix unnecessary[-2]duplicate assignment ,remove trailing spaces *Check for more terminal state [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Add CheckReturnValue annotation (#4881)  * Add CheckReturnValue method  * Add annotation to more methods  * Java 6 Compatibility	Add CheckReturnValue annotation (#4881 )*Add CheckReturnValue method *Add annotation to more methods *Java 6 Compatibility [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Common test classes for Processors. (#4882)	2 .[sentence: 1,-1] x[2]:Common test classes for Processors .[sentence: 2,-1] (#4882 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Add equals() to the unit test to satisfy checkstyle	Add equals ()to the unit test to satisfy[2]checkstyle [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Apply missing RxJavaPlugins.onAssembly on ops (#4877)	2 .[sentence: 1,-1] x[2]:Apply missing RxJavaPlugins .[sentence: 2,-1] onAssembly on ops (#4877 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove empty list item from `io.reactivex.package-info.java` (#4874)	Remove empty list item from `io .[sentence: 1,-1] reactivex .[sentence: 1,-1] package -info .[sentence: 1,-1] java `(#4874 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #4873 from akarnokd/TestObserverFix  2.x: TestObserver shouldn't clear the upstream disposable on terminated	Merge pull request #4873 from akarnokd /TestObserverFix 2 .[sentence: 1,-1] x[2]:TestObserver shouldn't clear the upstream disposable on terminated [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: TestObserver shouldn't clear the upstream disposable on terminated	2 .[sentence: 1,-1] x[2]:TestObserver shouldn't clear the upstream disposable on terminated [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #4858 from akarnokd/FlatMapSingleElement  2.x: add Maybe.flatMapSingleElement returning Maybe	Merge pull request #4858 from akarnokd /FlatMapSingleElement 2 .[sentence: 1,-1] x[2]:add Maybe .[sentence: 2,-1] flatMapSingleElement returning Maybe [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: add Maybe.flatMapSingleElement returning Maybe	2 .[sentence: 1,-1] x[2]:add Maybe .[sentence: 2,-1] flatMapSingleElement returning Maybe [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Release 2.0.1	Release 2 .[sentence: 1,-1] 0 .1 [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: javadoc: fix wording of some operators, remove @throws implications (#4839)  * 2.x: javadoc: fix wording of some operators, remove @throws implications  * Fix some introduced mistakes	2 .[sentence: 1,-1] x[2]:javadoc :fix wording of some operators ,remove @throws implications (#4839 )*2 .[sentence: 2,-1] x[2]:javadoc :fix wording of some operators ,remove @throws implications *Fix some introduced mistakes[-2][sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: add fluent requestMore to TestSubscriber (#4838)	2 .[sentence: 1,-1] x[2]:add fluent requestMore to TestSubscriber (#4838 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: add doAfterNext & doAfterSuccess to the other types (#4835)	2 .[sentence: 1,-1] x[2]:add doAfterNext &doAfterSuccess to the other types (#4835 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: add `Flowable.doAfterNext` operator + 3 doX TCKs (#4833)  * 2.x: add `Flowable.doAfterNext` operator + 3 doX TCK  * Fix operator name in the scheduler javadoc	2 .[sentence: 1,-1] x[2]:add `Flowable .[sentence: 2,-1] doAfterNext `operator +3 doX TCKs (#4833 )*2 .[sentence: 1,-1] x[2]:add `Flowable .[sentence: 2,-1] doAfterNext `operator +3 doX TCK *Fix operator name in the scheduler javadoc [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: add doFinally to the rest of the reactive base classes (#4832)	2 .[sentence: 1,-1] x[2]:add doFinally to the rest of the reactive[-2]base classes (#4832 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: Fix javadoc and style errors	2 .[sentence: 1,-1] x[2]:Fix javadoc and style errors[-2][sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Porting the Scheduler.when operator from 1.x to 2.x (#4827)	Porting the Scheduler .[sentence: 1,-1] when operator from 1 .[sentence: 1,-1] x[2]to 2 .[sentence: 2,-1] x[2](#4827 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: add doFinally for handling post terminal or cancel cleanup (#4831)	2 .[sentence: 1,-1] x[2]:add doFinally for handling post terminal or cancel[-2]cleanup (#4831 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: Observable.repeatWhen fix for onError (#4819)	2 .[sentence: 1,-1] x[2]:Observable .[sentence: 2,-1] repeatWhen fix for onError (#4819 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix typo in javadoc of Maybe::toSingle (#4815)	fix typo in javadoc of Maybe ::toSingle (#4815 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Subtle change in Completable's documentation for retryWhen. (#4810)	Subtle change in Completable's documentation for retryWhen .[sentence: 1,-1] (#4810 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update ObservableEmitter.java (#4803)	Update ObservableEmitter .[sentence: 1,-1] java (#4803 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	documentation updates (#4798)  * documentation updates  * Update Observable.java	documentation updates (#4798 )*documentation updates *Update Observable .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Fix exceptions in javaDoc (#4793)  * 2.x: correct exceptions in Flowable javaDoc  * 2.x: correct exceptions in Observable javaDoc  * 2.x: correct exceptions in Maybe javaDoc  * 2.x: correct exceptions in Single javaDoc	2 .[sentence: 1,-1] x[2]:Fix exceptions in javaDoc (#4793 )*2 .[sentence: 2,-1] x[2]:correct exceptions in Flowable javaDoc *2 .[sentence: 2,-1] x[2]:correct exceptions in Observable javaDoc *2 .[sentence: 2,-1] x[2]:correct exceptions in Maybe javaDoc *2 .[sentence: 2,-1] x[2]:correct exceptions in Single javaDoc [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: fix Observable.repeatWhen & retryWhen not disposing the inner (#4783)	2 .[sentence: 1,-1] x[2]:fix Observable .[sentence: 2,-1] repeatWhen &retryWhen not disposing the inner (#4783 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update readme and changes.md	Update readme and changes .[sentence: 1,-1] md [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: allow subscribeOn to work with blocking create (#4770)	2 .[sentence: 1,-1] x[2]:allow subscribeOn to work with blocking[-2]create (#4770 )[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Rename BackpressureStrategy.NONE to MISSING (#4767)	Rename BackpressureStrategy .[sentence: 1,-1] NONE to MISSING (#4767 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup, fixes and coverage 10/25 (#4766)	2 .[sentence: 1,-1] x[2]:cleanup ,fixes and coverage 10 /25 (#4766 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup & coverage 10/24-2 (#4763)	2 .[sentence: 1,-1] x[2]:cleanup &coverage 10 /24 -2 (#4763 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: cleanup, fixes, coverage 10/24-1 (#4761)  * 2.x: cleanup, fixes, coverage 10/24-1  * Add missing default method.	2 .[sentence: 1,-1] x[2]:cleanup ,fixes ,coverage 10 /24 -1 (#4761 )*2 .[sentence: 2,-1] x[2]:cleanup ,fixes ,coverage 10 /24 -1 *Add missing default[-2]method .[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: Add Single.fromObservable(ObservableSource) (#4760)  * 2.x: Add Single.fromObservable(ObservableSource)  * Add Null test	2 .[sentence: 1,-1] x[2]:Add Single .[sentence: 2,-1] fromObservable (ObservableSource )(#4760 )*2 .[sentence: 1,-1] x[2]:Add Single .[sentence: 2,-1] fromObservable (ObservableSource )*Add Null test [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: fix window-timed test leaking an MBE that affects unrelated tests (#4755)	2 .[sentence: 1,-1] x[2]:fix window -timed test leaking[-2]an MBE that affects unrelated tests (#4755 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: Remove some unused fields (#4754)	2 .[sentence: 1,-1] x[2]:Remove some unused fields (#4754 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: fix Flowable.concatMapEager hang due to bad request management (#4751)  * 2.x: fix Flowable.concatMapEager hang due to bad request management  * Missed negation of check	2 .[sentence: 1,-1] x[2]:fix Flowable .[sentence: 2,-1] concatMapEager hang[-2]due to bad[-2]request management (#4751 )*2 .[sentence: 1,-2] x[2]:fix Flowable .[sentence: 2,-1] concatMapEager hang[-2]due to bad[-2]request management *Missed[-2]negation of check [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Add more new marble diagrams & update old ones (#4752)	Add more new marble diagrams &update old ones (#4752 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	New 2.x marble diagrams (#4749)	New 2 .[sentence: 1,-1] x[2]marble diagrams (#4749 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: distinctUntilChanged to store the selected key instead of the value (#4747)  * 2.x: distinctUntilChanged to store the selected key instead of the value  * Fix null test and whitespaces	2 .[sentence: 1,-1] x[2]:distinctUntilChanged to store the selected key instead of the value[2](#4747 )*2 .[sentence: 2,-1] x[2]:distinctUntilChanged to store the selected key instead of the value[2]*Fix null test and whitespaces [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: Fixed Javadoc for Disposables.fromFuture (#4744)  * Fixed Javadoc for Disposables.fromFuture  * Missed a runnable	2 .[sentence: 1,-1] x[2]:Fixed Javadoc for Disposables .[sentence: 2,-1] fromFuture (#4744 )*Fixed Javadoc for Disposables .[sentence: 1,-1] fromFuture *Missed[-2]a runnable [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x: coverage, fixes, cleanup 10/21-1 (#4742)	2 .[sentence: 1,-1] x[2]:coverage ,fixes ,cleanup 10 /21 -1 (#4742 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Update changes and readme	Update changes and readme [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, fixes, cleanup 10/20-2 (#4738)  * 2.x: coverage, fixes, cleanup 10/20-2  * Fix Generate not saving the state	2 .[sentence: 1,-1] x[2]:coverage ,fixes ,cleanup 10 /20 -2 (#4738 )*2 .[sentence: 2,-1] x[2]:coverage ,fixes ,cleanup 10 /20 -2 *Fix Generate not saving the state [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup, fixes, coverage 10/20-1 (#4736)	2 .[sentence: 1,-1] x[2]:cleanup ,fixes ,coverage 10 /20 -1 (#4736 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, minor fixes, cleanup 10/19-2 (#4732)	2 .[sentence: 1,-1] x[2]:coverage ,minor fixes ,cleanup 10 /19 -2 (#4732 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Delegate null Collections down to onError in toList (#4731)	2 .[sentence: 1,-1] x[2]:Delegate null Collections down to onError in toList (#4731 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: fix warnings	2 .[sentence: 1,-1] x[2]:fix warnings [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Remove checked exceptions from transformer interfaces. (#4710)  These functions are for transforming the stream shape, not doing work. Any operation that would throw a checked exception should happen inside the stream, not when shaping it.	Remove checked exceptions from transformer interfaces .[sentence: 1,-1] (#4710 )These functions are for transforming the stream shape ,not doing work .[sentence: 1,-1] Any operation that would throw a checked exception should happen inside the stream ,not when shaping it .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, fixes, cleanup, copy to Flowable 10/19-1 (#4730)	2 .[sentence: 1,-1] x[2]:coverage ,fixes ,cleanup ,copy to Flowable 10 /19 -1 (#4730 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge FlowableEmitter.BackpressureMode into BackpressureStrategy (#4729)  * Merge FlowableEmitter.BackpressureMode into BackpressureStrategy  * Cleanup code	Merge FlowableEmitter .[sentence: 1,-1] BackpressureMode into BackpressureStrategy (#4729 )*Merge FlowableEmitter .[sentence: 1,-1] BackpressureMode into BackpressureStrategy *Cleanup code [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix code coverage link	Fix code coverage link [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, fixes, enhancements, cleanup 10/18-1 (#4723)	2 .[sentence: 1,-1] x[2]:coverage ,fixes ,enhancements ,cleanup 10 /18 -1 (#4723 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: remove variance from the input source of retryWhen (#4720)	2 .[sentence: 1,-1] x[2]:remove variance from the input source[-2]of retryWhen (#4720 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: Distinct Operator - delegate null Collection down to onError (#4718)	2 .[sentence: 1,-1] x[2]:Distinct Operator -delegate null Collection down to onError (#4718 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage and cleanup 10/17-1 (#4717)	2 .[sentence: 1,-1] x[2]:coverage and cleanup 10 /17 -1 (#4717 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: test sync from Observable to Flowable 10/16-1 (#4714)	2 .[sentence: 1,-1] x[2]:test sync from Observable to Flowable 10 /16 -1 (#4714 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, cleanup, fixes 10/15-2 (#4712)  * 2.x: coverage, cleanup, fixes 10/15-2  * Add missing header	2 .[sentence: 1,-1] x[2]:coverage ,cleanup ,fixes 10 /15 -2 (#4712 )*2 .[sentence: 2,-1] x[2]:coverage ,cleanup ,fixes 10 /15 -2 *Add missing header [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Decouple stream operators from Function interface. (#4711)  This allows a single class to implement itself as an operator for all stream types. A similar change was recently made to the transformer types.	Decouple stream operators from Function interface .[sentence: 1,-1] (#4711 )This allows a single class to implement itself as an operator for all stream types .[sentence: 1,-1] A similar change was recently made to the transformer types .[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: coverage, fixes, cleanup 10/15-1 (#4708)  * 2.x: coverage, fixes, cleanup 10/15-1  * Fix error message.	2 .[sentence: 1,-1] x[2]:coverage ,fixes ,cleanup 10 /15 -1 (#4708 )*2 .[sentence: 2,-1] x[2]:coverage ,fixes ,cleanup 10 /15 -1 *Fix error[-2]message .[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: Fix Flowable.elementAt on empty sources. Plus sync tests (#4707)	2 .[sentence: 1,-1] x[2]:Fix Flowable .[sentence: 2,-1] elementAt on empty sources[-2].[sentence: 1,-2] Plus sync tests (#4707 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup, coverage, fixes 10/14-2 (#4706)  * 2.x: cleanup, coverage, fixes 10/14-2  * Fix NPEs	2 .[sentence: 1,-1] x[2]:cleanup ,coverage ,fixes 10 /14 -2 (#4706 )*2 .[sentence: 2,-1] x[2]:cleanup ,coverage ,fixes 10 /14 -2 *Fix NPEs [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, cleanup fixes 10/14-1 (#4705)	2 .[sentence: 1,-1] x[2]:coverage ,cleanup fixes 10 /14 -1 (#4705 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage and cleanup 10/13-1 (#4701)	2 .[sentence: 1,-1] x[2]:coverage and cleanup 10 /13 -1 (#4701 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Fix unnecessary import.	Fix unnecessary[-2]import .[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x: Clean up null usages by using ObjectHelper.requireNonNull (#4699)	2 .[sentence: 1,-1] x[2]:Clean up null usages by using ObjectHelper .[sentence: 2,-1] requireNonNull (#4699 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage and cleanup 10/12-1 (#4696)	2 .[sentence: 1,-1] x[2]:coverage and cleanup 10 /12 -1 (#4696 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: CompositeException fix order of Exceptions (#4695)  * 2.x: CompositeException fix order of Exceptions  * Take out Completable classes	2 .[sentence: 1,-1] x[2]:CompositeException fix order of Exceptions (#4695 )*2 .[sentence: 2,-1] x[2]:CompositeException fix order of Exceptions *Take out Completable classes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x - improve timer javadoc (#4694)	2 .[sentence: 1,-1] x[2]-improve[2]timer javadoc (#4694 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage, fixes and cleanup 10/11-2 (#4692)	2 .[sentence: 1,-1] x[2]:coverage ,fixes and cleanup 10 /11 -2 (#4692 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: BaseTestConsumer add assertValueAt(index, Predicate<T>) (#4690)	2 .[sentence: 1,-1] x[2]:BaseTestConsumer add assertValueAt (index ,Predicate <T >)(#4690 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: Add Observable.rangeLong & Flowable.rangeLong (#4687)  * 2.x: Add Observable.rangeLong & Flowable.rangeLong  * Clean up cast  * Adjust Long overflow checks  * Add test for rangeLong count 1  * Fix ObservableRangeLongTest.testRangeWithOverflow5	2 .[sentence: 1,-1] x[2]:Add Observable .[sentence: 2,-1] rangeLong &Flowable .[sentence: 1,-1] rangeLong (#4687 )*2 .[sentence: 1,-1] x[2]:Add Observable .[sentence: 2,-1] rangeLong &Flowable .[sentence: 1,-1] rangeLong *Clean up cast *Adjust Long overflow[-2]checks *Add test for rangeLong count 1 *Fix ObservableRangeLongTest .[sentence: 1,-2] testRangeWithOverflow5 [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage and cleanup 10/11-1 (#4689)	2 .[sentence: 1,-1] x[2]:coverage and cleanup 10 /11 -1 (#4689 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: Test static from methods and add Maybe.fromSingle & fromCompletable (#4685)	2 .[sentence: 1,-1] x[2]:Test static[-2]from methods and add Maybe .[sentence: 2,-2] fromSingle &fromCompletable (#4685 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	2.: Fix flatMapX over-cancellation in case of an inner error (#4686)	2 .:[sentence: 1,-1] Fix flatMapX over -cancellation[-2]in case of an inner error[-2](#4686 )[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Update Mockito to 2.1.0 (#4682)	Update Mockito to 2 .[sentence: 1,-1] 1 .[sentence: 1,-1] 0 (#4682 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	2.x: Fix Flowable + Single elementAt and elementAtOrError operators on empty sources (#4681)	2 .[sentence: 1,-1] x[2]:Fix Flowable +Single elementAt and elementAtOrError operators on empty sources[-2](#4681 )[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Release 2.0.0-RC4	Release 2 .[sentence: 1,-1] 0 .[sentence: 1,-1] 0 -RC4 [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: fix flatMapX calling SpscLinkedArrayQueue.offer concurrently (#4678)	2 .[sentence: 1,-1] x[2]:fix flatMapX calling SpscLinkedArrayQueue .[sentence: 2,-1] offer concurrently (#4678 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: add javadoc and unit test to the recently changed XTransformers (#4674)  * 2.x: add javadoc and unit test to the recently changed XTransformer  * Use uppercase F	2 .[sentence: 1,-1] x[2]:add javadoc and unit test to the recently changed XTransformers (#4674 )*2 .[sentence: 2,-1] x[2]:add javadoc and unit test to the recently changed XTransformer *Use uppercase F [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x Remove Function from transformer interfaces to allow a single obj��� (#4672)  * 2.x Remove Function from transformer interfaces to allow a single object to implement multiple transformers  * Fix missing Exception declarations from transformers	2 .[sentence: 1,-1] x[2]Remove Function from transformer interfaces to allow a single obj ���(#4672 )*2 .[sentence: 2,-1] x[2]Remove Function from transformer interfaces to allow a single object to implement multiple transformers *Fix missing Exception declarations from transformers [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Fix javadoc for Single.flatMapObservable (#4669)	2 .[sentence: 1,-1] x[2]:Fix javadoc for Single .[sentence: 2,-1] flatMapObservable (#4669 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Limit gradle memory (#4668)	Limit gradle memory (#4668 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: flatMap{Completable, Maybe, Single} operators (#4667)  * 2.x: flatMapCompletable operator  * Jacoco to ignore TCK  * Add remaining flatMap{Single, Maybe} to Flowable/Observable  * Fix active counting race condition	2 .[sentence: 1,-1] x[2]:flatMap {Completable ,Maybe ,Single }operators (#4667 )*2 .[sentence: 2,-1] x[2]:flatMapCompletable operator *Jacoco to ignore TCK *Add remaining flatMap {Single ,Maybe }to Flowable /Observable *Fix active counting race condition [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: coverage and cleanup 10/04-1 (#4666)	2 .[sentence: 1,-1] x[2]:coverage and cleanup 10 /04 -1 (#4666 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup and fixes 10/03-2 (#4663)	2 .[sentence: 1,-1] x[2]:cleanup and fixes 10 /03 -2 (#4663 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup and coverage 10/03 (#4661)	2 .[sentence: 1,-1] x[2]:cleanup and coverage 10 /03 (#4661 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Observable.compose to use ObservableTransformer (#4658)	2 .[sentence: 1,-1] x[2]:Observable .[sentence: 2,-1] compose to use ObservableTransformer (#4658 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Upcast ConcurrentHashMap to Map to avoid compatibility issue (#4654)  * Upcast ConcurrentHashMap to Map to avoid compatibility issue  Resovles #4653  See http://stackoverflow.com/a/32955708/61158  * Fix imports, remove now-unnecessary animalsniffer suppression	Upcast ConcurrentHashMap to Map to avoid[-2]compatibility issue (#4654 )*Upcast ConcurrentHashMap to Map to avoid[-2]compatibility issue Resovles #4653 See http ://stackoverflow .[sentence: 1,-2] com /a /32955708 /61158 *Fix imports ,remove now -unnecessary[-2]animalsniffer suppression[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Switch Maybe and Single to use their Transformers in compose() (#4651)  * Switch Maybe and Single to use their Transformers in compose()  Resolves #4650  * Update compose() tests	Switch Maybe and Single to use their Transformers in compose ()(#4651 )*Switch Maybe and Single to use their Transformers in compose ()Resolves[2]#4650 *Update compose ()tests [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Merge AmbArray and AmbIterable into Amb for Single, Maybe and Completable types (#4647)	2 .[sentence: 1,-1] x[2]:Merge AmbArray and AmbIterable into Amb for Single ,Maybe and Completable types (#4647 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Signal NPE ObservableAmb FlowableAmb (#4645)	Signal NPE ObservableAmb FlowableAmb (#4645 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: fix Mockito 2.1 changes using deprecated API of its own (#4639)	2 .[sentence: 1,-1] x[2]:fix Mockito 2 .[sentence: 2,-1] 1 changes using deprecated API of its own (#4639 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Remove unused methods in BasicFuseableObserver (#4637)	2 .[sentence: 1,-1] x[2]:Remove unused methods in BasicFuseableObserver (#4637 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Update Mockito to 2.1.0-RC.2 (#4636)	Update Mockito to 2 .[sentence: 1,-1] 1 .[sentence: 1,-1] 0 -RC .[sentence: 1,-1] 2 (#4636 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge branch '2.x' of https://github.com/ReactiveX/RxJava.git into 2.x	Merge branch '2 .[sentence: 1,-1] x[2]'of https ://github .[sentence: 2,-1] com /ReactiveX /RxJava .[sentence: 1,-1] git into 2 .x[2][sentence: 2,-1] [result: max + and - of any sentence]
3	-1	allow more graceful memory use in MaybeTest	allow more graceful[3]memory use in MaybeTest [sentence: 3,-1] [result: max + and - of any sentence]
2	-1	2.x: Clean up SingleFlatMap (#4632)	2 .[sentence: 1,-1] x[2]:Clean up SingleFlatMap (#4632 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Force cast to U again	Force[-2]cast to U again [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Cleanup warnings	Cleanup warnings [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: add flattenAs{Observable,Flowable} to Single and Maybe (#4604)	2 .[sentence: 1,-1] x[2]:add flattenAs {Observable ,Flowable }to Single and Maybe (#4604 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Don't wrap with CompositeException when there is only one error (#4631)	Don't wrap with CompositeException when there is only one error[-2](#4631 )[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x: Add Completable.fromRunnable() (#4629)	2 .[sentence: 1,-1] x[2]:Add Completable .[sentence: 2,-1] fromRunnable ()(#4629 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Replace 'resource' observers with plain 'disposable' observers in tests. (#4625)	Replace 'resource 'observers with plain 'disposable 'observers in tests .[sentence: 1,-1] (#4625 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Use predicates in BaseTestConsumer assertError(Class/Throwable) to remove duplicate code, tests tweaks to remove few IDE warnings (#4627)  * BaseTestConsumer use predicates in assertError with class and exception to remove duplicate code  * TestObserver & TestSubscriber tests cleanup to remove IDE warnings	2 .[sentence: 1,-1] x[2]:Use predicates in BaseTestConsumer assertError (Class /Throwable )to remove duplicate code ,tests tweaks to remove few IDE warnings (#4627 )*BaseTestConsumer use predicates in assertError with class and exception to remove duplicate code *TestObserver &TestSubscriber tests cleanup to remove IDE warnings [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: enable operator fusion in onBackpressureBuffer (#4622)	2 .[sentence: 1,-1] x[2]:enable operator fusion in onBackpressureBuffer (#4622 )[sentence: 2,-1] [result: max + and - of any sentence]
3	-2	2.x: Make CompositeExcpetion thread-safe like 1.x and also fix some issues. (#4619)  Right now CompositeExcpetion has several issues:  - `CompositeException(Throwable... exceptions)` doesn't deduplicate exceptions and flatten CompositeExceptions like `CompositeException(Iterable<? extends Throwable> errors)` - If using `CompositeException(Iterable<? extends Throwable> errors)` to create CompositeException, `suppress` cannot be used. - `suppress` doesn't update `cause`. - `suppress` doesn't deduplicate exceptions and flatten CompositeExceptions. - `suppress` and `Throwable.addSuppressed` are pretty confusing for Java 7+ users. Without looking at the implementation, it's hard to figure out the differences.  This PR made the following changes:  - Remove `CompositeException.suppress` so that it's easy to make CompositeException thread-safe.   - This may cause some performance lost in some path rarely happening, e.g., an excpetion is thrown from `onError`, but that's not a big deal.   - Since `suppress` is removed, it doesn't make sense to create an empty CompositeException, so `isEmpty` is removed and defense codes are added. - Defense codes for bad exceptions. - Deduplicate excepctions and flatten CompositeExceptions for `CompositeException(Throwable... exceptions)`.	2 .[sentence: 1,-1] x[2]:Make CompositeExcpetion thread -safe[2]like[2]1 .[sentence: 2,-1] x[2]and also fix some issues .[sentence: 2,-1] (#4619 )Right now CompositeExcpetion has several issues :-`CompositeException (Throwable ...[sentence: 1,-1] exceptions )`doesn't deduplicate exceptions and flatten CompositeExceptions like[2]`CompositeException (Iterable <?[sentence: 2,-1] extends Throwable >errors[-2])`-If using `CompositeException (Iterable <?[sentence: 1,-2] extends Throwable >errors[-2])`to create CompositeException ,`suppress[-2]`cannot be used .[sentence: 1,-2] -`suppress[-2]`doesn't update `cause `.[sentence: 1,-2] -`suppress[-2]`doesn't deduplicate exceptions and flatten CompositeExceptions .[sentence: 1,-2] -`suppress[-2]`and `Throwable .[sentence: 1,-2] addSuppressed `are pretty[3]confusing[-2]for Java 7 +users .[sentence: 3,-2] Without looking at the implementation ,it's hard to figure out the differences .[sentence: 1,-1] This PR made the following changes :-Remove `CompositeException .[sentence: 1,-1] suppress[-2]`so that it's easy to make CompositeException thread -safe[2].[sentence: 2,-2] -This may cause some performance lost in some path rarely happening ,e .[sentence: 1,-1] g .,[sentence: 1,-1] an excpetion is thrown from `onError `,but that's not a big deal .[sentence: 1,-1] -Since `suppress[-2]`is removed ,it doesn't make sense to create an empty CompositeException ,so `isEmpty `is removed and defense codes are added .[sentence: 1,-2] -Defense codes for bad[-2]exceptions .[sentence: 1,-2] -Deduplicate excepctions and flatten CompositeExceptions for `CompositeException (Throwable ...[sentence: 1,-1] exceptions )`.[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Add Single.flatMapMaybe (#4617)	2 .[sentence: 1,-1] x[2]:Add Single .[sentence: 2,-1] flatMapMaybe (#4617 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Add missing type argument documentation	Add missing type argument[-2]documentation [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x: improve performance of Observable.flatMapIterable (#4612)	2 .[sentence: 1,-1] x[2]:improve[2]performance of Observable .[sentence: 2,-1] flatMapIterable (#4612 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Add Maybe.flatMapSingle (#4614)  * 2.x: Add Maybe.flatMapSingle  * Changes  * Fix generics	2 .[sentence: 1,-1] x[2]:Add Maybe .[sentence: 2,-1] flatMapSingle (#4614 )*2 .[sentence: 1,-1] x[2]:Add Maybe .[sentence: 2,-1] flatMapSingle *Changes *Fix generics [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Add Completable.andThen(MaybeSource) (#4616)  * 2.x: Add Completable.andThen(MaybeSource)  * Add missing import  * Requested changes	2 .[sentence: 1,-1] x[2]:Add Completable .[sentence: 2,-1] andThen (MaybeSource )(#4616 )*2 .[sentence: 1,-1] x[2]:Add Completable .[sentence: 2,-1] andThen (MaybeSource )*Add missing import *Requested changes [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Factor out typical TestObserver/TestSubscriber methods (#4609)  * 2.x: Factor out typical TestObserver/TestSubscriber methods  * Move BaseTestConsumer into the public so its javadoc is available	2 .[sentence: 1,-1] x[2]:Factor out typical TestObserver /TestSubscriber methods (#4609 )*2 .[sentence: 2,-1] x[2]:Factor out typical TestObserver /TestSubscriber methods *Move BaseTestConsumer into the public so its javadoc is available [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: TestSubscriber & TestObserver add assertValue(Predicate) (#4607)  * 2.x: TestSubscriber & TestObserver add assertValue(Predicate)  * Adjust	2 .[sentence: 1,-1] x[2]:TestSubscriber &TestObserver add assertValue (Predicate )(#4607 )*2 .[sentence: 2,-1] x[2]:TestSubscriber &TestObserver add assertValue (Predicate )*Adjust [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Verify same onNext / onError null behavior across all Subjects and Processors (#4606)	2 .[sentence: 1,-1] x[2]:Verify same onNext /onError null behavior across all Subjects and Processors (#4606 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: Evaluate Schedule initialization via Callable (#4585)  * Evaluate Schedule initialization via Callable  * Clarify docs that Schedulers are initialized by the return value of the Callable  * Enforce non-null Callable Scheduler and Scheduler  * Add remaining tests and tidy  * Expand relevant Javadoc  * Make error messages more consistent  * Correct Exception naming  * Add test for Exception message to verify root cause  * Add tests for alternative initialization path  * Simplify statement  * Use holder pattern for default Scheduler instances  * Use correct scheduler when verifying reset  * Make onInitHandler functions lazy and enforce non null.	2 .[sentence: 1,-1] x[2]:Evaluate Schedule initialization via Callable (#4585 )*Evaluate Schedule initialization via Callable *Clarify docs that Schedulers are initialized by the return value[2]of the Callable *Enforce[-2]non -null Callable Scheduler and Scheduler *Add remaining tests and tidy *Expand relevant Javadoc *Make error[-2]messages more consistent *Correct Exception naming *Add test for Exception message to verify root cause *Add tests for alternative initialization path *Simplify statement *Use holder pattern for default[-2]Scheduler instances *Use correct scheduler when verifying reset *Make onInitHandler functions lazy[-2]and enforce[-2]non null .[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: RxJavaPlugins - Don't pass null throwable down to Error Handler (#4603)	2 .[sentence: 1,-1] x[2]:RxJavaPlugins -Don't pass null throwable down to Error[-2]Handler (#4603 )[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: benchmark just() and fromCallable() throughput (#4602)	2 .[sentence: 1,-1] x[2]:benchmark just ()and fromCallable ()throughput (#4602 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Remove unused imports	Remove unused imports [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Add missing @Test annotation on tests (#4597)  * 2.x: Add missing @Test annotation on tests  * Fix test	2 .[sentence: 1,-1] x[2]:Add missing @Test annotation on tests (#4597 )*2 .[sentence: 2,-1] x[2]:Add missing @Test annotation on tests *Fix test [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: don't show started unit tests (#4600)  * 2.x: don't show started unit tests  * This setting works locally	2 .[sentence: 1,-1] x[2]:don't show started unit tests (#4600 )*2 .[sentence: 2,-1] x[2]:don't show started unit tests *This setting works locally [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Sync behaviour between UnicastProcessor & UnicastSubject + add a few test cases (#4601)	2 .[sentence: 1,-1] x[2]:Sync behaviour between UnicastProcessor &UnicastSubject +add a few test cases (#4601 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Remove mention of blocking from the package-infos	Remove mention of blocking[-2]from the package -infos [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x: Remove takeFirst(predicate) in Observable & Flowable (#4595)	2 .[sentence: 1,-1] x[2]:Remove takeFirst (predicate )in Observable &Flowable (#4595 )[sentence: 2,-1] [result: max + and - of any sentence]
