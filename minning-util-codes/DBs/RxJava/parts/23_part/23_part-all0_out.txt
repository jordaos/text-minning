Positive	Negative	Text	Explanation
1	-1	Switch the last SerialResource to manual resource management. (#4112)	Switch the last SerialResource to manual resource management .[sentence: 1,-1] (#4112 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: make sure the helper returns true if the pre-swap value was null (#4107)	2 .[sentence: 1,-1] x[2]:make sure the helper returns true[2]if the pre -swap value[2]was null (#4107 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Invert subscription validation return type for better semantics. (#4108)	Invert subscription validation return type for better semantics .[sentence: 1,-1] (#4108 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Remove explicit cancel flags where it can be inferred. (#4106)	Remove explicit cancel[-2]flags where it can be inferred .[sentence: 1,-2] (#4106 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove some superfluous reads before writes. (#4105)	Remove some superfluous[-2][--1 booster word]reads before writes .[sentence: 1,-1] (#4105 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Expose isDisposed method on Disposable. (#4102)	Expose[-2]isDisposed method on Disposable .[sentence: 1,-2] (#4102 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: prepare the operator-fusion enhancement (#4103)	2 .[sentence: 1,-1] x[2]:prepare the operator -fusion enhancement (#4103 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Switch a SerialResource use to SerialDisposable. (#4101)	Switch a SerialResource use to SerialDisposable .[sentence: 1,-1] (#4101 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Add PMD (#4100)	2 .[sentence: 1,-1] x[2]:Add PMD (#4100 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: convert Observable OnSubscribe to direct implementation (#4096)	2 .[sentence: 1,-1] x[2]:convert Observable OnSubscribe to direct implementation (#4096 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Invert request validation return type for better semantics. (#4095)	Invert request validation return type for better semantics .[sentence: 1,-1] (#4095 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove EmptySubscriber, start to remove NbpEmptySubscriber. (#4094)	Remove EmptySubscriber ,start to remove NbpEmptySubscriber .[sentence: 1,-1] (#4094 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Ignore PMD and android studio, also check if push is still enabled.	Ignore PMD and android studio ,also check if push is still enabled .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge CancelledSubscriber into EmptySubscriber. (#4083)	Merge CancelledSubscriber[-2]into EmptySubscriber .[sentence: 1,-2] (#4083 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge NbpCancelledSubscriber into NbpEmptySubscriber. (#4085)	Merge NbpCancelledSubscriber into NbpEmptySubscriber .[sentence: 1,-1] (#4085 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Normalize request validation using SubscriptionHelper. (#4087)	Normalize request validation using SubscriptionHelper .[sentence: 1,-1] (#4087 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	More uses of SubscriptionHelper. (#4084)	More uses of SubscriptionHelper .[sentence: 1,-1] (#4084 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-3	Do not leak the DISPOSED marker instance into public API. (#4081)  If this were to be used by public code it could have have Very Bad��� effects by causing operators to think that they already disposed resources when they actually had not. Since `Disposable` is stateless it's safe for `disposed()` and `empty()` to be synonymous, although that might change in the future so both methods are retained.	Do not leak[-2][=0 negation]the DISPOSED[-2]marker instance into public API .[sentence: 1,-2] (#4081 )If this were to be used by public code it could have have Very Bad[-2][-1 booster word]���effects by causing operators to think that they already disposed[-2]resources when they actually had not .[sentence: 1,-3] Since `Disposable `is stateless it's safe[2]for `disposed[-2]()`and `empty ()`to be synonymous ,although that might change in the future so both methods are retained .[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Replace custom empty Disposables with global instance. (#4080)	Replace custom empty Disposables with global instance .[sentence: 1,-1] (#4080 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Re-use the single empty Disposable instance everywhere. (#4078)	Re -use the single empty Disposable instance everywhere .[sentence: 1,-1] (#4078 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Some small tweaks to Disposables. (#4076)  * Use BooleanDisposable for Runnables. * Change BooleanDisposable to use null for disposed instead of keeping a marker instance. * Eliminate static factory for CompositeDisposable since its constructors are already public.	Some small tweaks to Disposables .[sentence: 1,-1] (#4076 )*Use BooleanDisposable for Runnables .[sentence: 1,-1] *Change BooleanDisposable to use null for disposed[-2]instead of keeping a marker instance .[sentence: 1,-2] *Eliminate[-2]static[-2]factory for CompositeDisposable since its constructors are already public .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Use more DisposableHelper and SubscriptionHelper in operators. (#4074)	Use more DisposableHelper and SubscriptionHelper in operators .[sentence: 1,-1] (#4074 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge SerialDisposable and MultipleAssignmentDisposable. (#4070)	Merge SerialDisposable and MultipleAssignmentDisposable .[sentence: 1,-1] (#4070 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Dereference atomic ref before identity comparison. (#4072)  This returns false 100% of the time otherwise.	Dereference atomic ref before identity comparison .[sentence: 1,-1] (#4072 )This returns false 100 %of the time otherwise .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Inline last uses of caching DisposableHelper's constant. (#4071)	Inline last uses of caching DisposableHelper's constant .[sentence: 1,-1] (#4071 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove second type parameter from Subject and FlowProcessor. (#4069)	Remove second type parameter from Subject and FlowProcessor .[sentence: 1,-1] (#4069 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: cleanup a few additional SubscriptionHelper locations (#4059)	2 .[sentence: 1,-1] x[2]:cleanup a few additional SubscriptionHelper locations (#4059 )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Use DisposableHelper and SubscriptionHelper to reduce duplication. (#4058)  A lot of operators contained their own marker instance and class definition of Disposable or Subscription. This changes almost all of them to use the shared instance provided by their respetive helper class. Some duplication still exists but can be cleaned up in a subsequent change.	Use DisposableHelper and SubscriptionHelper to reduce duplication .[sentence: 1,-1] (#4058 )A lot of operators contained their own marker instance and class definition of Disposable or Subscription .[sentence: 1,-1] This changes almost all of them to use the shared instance provided by their respetive helper class .[sentence: 1,-1] Some duplication still exists but can be cleaned up in a subsequent change .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update conversion method name to reflect new base type names. (#4055)	Update conversion method name to reflect new base type names .[sentence: 1,-1] (#4055 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Convert SchedulerSupport annotation to accept a string value. (#4053)	Convert SchedulerSupport annotation to accept a string value[2].[sentence: 2,-1] (#4053 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: make Flowable operators extend Flowable directly to reduce allocation (#4049)  * Converting the Publisher-based operators to direct  * Update remaining operators to implement Flowable directly	2 .[sentence: 1,-1] x[2]:make Flowable operators extend Flowable directly to reduce allocation (#4049 )*Converting the Publisher -based operators to direct *Update remaining operators to implement Flowable directly [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Publish code coverage results to codecov.io (#4048)	2 .[sentence: 1,-1] x[2]:Publish code coverage results to codecov .[sentence: 2,-1] io (#4048 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: Single operators factored out, headers added (#4045)	2 .[sentence: 1,-1] x[2]:Single operators factored out ,headers added (#4045 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: factor out Completable ops, unify disposed markers (#4043)  * Some operators extracted  * 2.x: factor out Completable ops, make them direct, fix disposed markers	2 .[sentence: 1,-1] x[2]:factor out Completable ops ,unify disposed[-2]markers (#4043 )*Some operators extracted *2 .[sentence: 2,-2] x[2]:factor out Completable ops ,make them direct ,fix disposed[-2]markers [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: Use XCompletable in Completable and Single (#4042)	2 .[sentence: 1,-1] x[2]:Use XCompletable in Completable and Single (#4042 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Update Observable's ops to work with ObservableConsumable (#4041)	2 .[sentence: 1,-1] x[2]:Update Observable's ops to work with ObservableConsumable (#4041 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: factor out consumer types, add XConsumable, update ops	2 .[sentence: 1,-1] x[2]:factor out consumer types ,add XConsumable ,update ops [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Update groupID and readme. (#4031)	Update groupID and readme .[sentence: 1,-1] (#4031 )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: first step switching to the reduced-allocation architecture (#4030)	2 .[sentence: 1,-1] x[2]:first step switching to the reduced -allocation architecture (#4030 )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: Add support for concurrently inserting actions while advancing time (#3648)  * 2.x: Adding support for concurrently inserting actions while advancing time  * Removing the unit test proving the thread safety of a BlockingPriorityQueue.	2 .[sentence: 1,-1] x[2]:Add support[2]for concurrently inserting actions while advancing time (#3648 )*2 .[sentence: 2,-1] x[2]:Adding support[2]for concurrently inserting actions while advancing time *Removing the unit test proving the thread safety[2]of a BlockingPriorityQueue[-2].[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: Design.md +extension +fusion (#3980)  * 2.x: Design.md +extension +fusion  * Flatten the create-table  * Update create naming to avoid overload conflicts  * Add missing explanation, remove words	2 .[sentence: 1,-1] x[2]:Design .[sentence: 2,-1] md +extension +fusion (#3980 )*2 .[sentence: 1,-1] x[2]:Design .[sentence: 2,-1] md +extension +fusion *Flatten the create -table *Update create naming to avoid[-2]overload conflicts[-2]*Add missing explanation ,remove words [sentence: 1,-2] [result: max + and - of any sentence]
2	-3	Clean-up of the 2.x Design.md document (#3935)  * Take OS comments into account  * Remove dead sentence.	Clean -up of the 2 .[sentence: 1,-1] x[2]Design .[sentence: 2,-1] md document (#3935 )*Take OS comments into account *Remove dead[-3]sentence .[sentence: 1,-3] [result: max + and - of any sentence]
2	-1	Merge pull request #3782 from stevegury/stevegury/2.x-design  2.x design decisions	Merge pull request #3782 from stevegury /stevegury /2 .[sentence: 1,-1] x[2]-design 2 .[sentence: 2,-1] x[2]design decisions [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Changed the wording of the Consumable and Fusion sections	Changed the wording of the Consumable and Fusion sections [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3783 from akarnokd/DesignRefactorMain2x  2.x: rename and refactor classes to match the design document	Merge pull request #3783 from akarnokd /DesignRefactorMain2x 2 .[sentence: 1,-1] x[2]:rename and refactor classes to match the design document [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: rename and refactor classes to match the design document	2 .[sentence: 1,-1] x[2]:rename and refactor classes to match the design document [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Rework of the design decisions for the 2.x branch	Rework of the design decisions for the 2 .[sentence: 1,-1] x[2]branch [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3693 from stevegury/2.x  Update nebula gradle plugin	Merge pull request #3693 from stevegury /2 .[sentence: 1,-1] x[2]Update nebula gradle plugin [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Update nebula gradle plugin	Update nebula gradle plugin [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3671 from akarnokd/SchedulerTestFix2x  2.x: fix SchedulerLifecycle.testStartIdempotence vs cached threads dying	Merge pull request #3671 from akarnokd /SchedulerTestFix2x 2 .[sentence: 1,-1] x[2]:fix SchedulerLifecycle .[sentence: 2,-1] testStartIdempotence vs cached threads dying[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-2	2.x: fix SchedulerLifecycle.testStartIdempotence vs cached threads dying	2 .[sentence: 1,-1] x[2]:fix SchedulerLifecycle .[sentence: 2,-1] testStartIdempotence vs cached threads dying[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3668 from akarnokd/Java6Backport  2.x: full JDK 6 compatible backport + including bugfixes up to today	Merge pull request #3668 from akarnokd /Java6Backport 2 .[sentence: 1,-1] x[2]:full JDK 6 compatible backport +including bugfixes up to today [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: full JDK 6 compatible backport + including bugfixes up to today	2 .[sentence: 1,-1] x[2]:full JDK 6 compatible backport +including bugfixes up to today [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3623 from adam-arold/2.x  1.x: adding source links for @Beta and @Experimental	Merge pull request #3623 from adam -arold /2 .[sentence: 1,-1] x[2]1 .[sentence: 2,-1] x[2]:adding source[-2]links for @Beta and @Experimental [sentence: 2,-2] [result: max + and - of any sentence]
1	-2	#3618 adding source links for @Beta and @Experimental	#3618 adding source[-2]links for @Beta and @Experimental [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3380 from akarnokd/CombineLatestCleanup2x  2.x: CombineLatest removed leftover debug field + better cleanup	Merge pull request #3380 from akarnokd /CombineLatestCleanup2x 2 .[sentence: 1,-1] x[2]:CombineLatest removed leftover debug field +better cleanup [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3449 from JakeWharton/jw/delete-code  2.x: Remove duplication of Optional API behavior.	Merge pull request #3449 from JakeWharton /jw /delete -code 2 .[sentence: 1,-1] x[2]:Remove duplication of Optional API behavior .[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Remove duplication of Optional API behavior.  get() throws NSE when absent and orElse(T) returns the provided value when absent.	Remove duplication of Optional API behavior .[sentence: 1,-1] get ()throws NSE when absent[-2]and orElse (T )returns the provided value[2]when absent[-2].[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3376 from akarnokd/RxVsStreamPerf2x  2.x: perf comparing Observable, NbpObservable, Stream and ParallelStream	Merge pull request #3376 from akarnokd /RxVsStreamPerf2x 2 .[sentence: 1,-1] x[2]:perf comparing Observable ,NbpObservable ,Stream and ParallelStream [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3382 from akarnokd/SpscLinkedArrayQueueCapacityUse2x  2.x: fix SpscLinkedArrayQueue leaves 1 slot null just before growing	Merge pull request #3382 from akarnokd /SpscLinkedArrayQueueCapacityUse2x 2 .[sentence: 1,-1] x[2]:fix SpscLinkedArrayQueue leaves 1 slot null just before growing [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3377 from akarnokd/TakeReentrancyFix2x  2.x: fix take() reentrancy problem.	Merge pull request #3377 from akarnokd /TakeReentrancyFix2x 2 .[sentence: 1,-1] x[2]:fix take ()reentrancy problem[-2].[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	2.x: fix SpscLinkedArrayQueue leaves 1 slot null just before growing	2 .[sentence: 1,-1] x[2]:fix SpscLinkedArrayQueue leaves 1 slot null just before growing [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: CombineLatest removed leftover debug field + better cleanup	2 .[sentence: 1,-1] x[2]:CombineLatest removed leftover debug field +better cleanup [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: fix take() reentrancy problem.  Discovered by @mgp in #3346 and using his supplied fix. I've already applied it to NbpObservable's take this Monday so all that's left was the unit test.	2 .[sentence: 1,-1] x[2]:fix take ()reentrancy problem[-2].[sentence: 2,-2] Discovered by @mgp in #3346 and using his supplied fix .[sentence: 1,-1] I've already applied it to NbpObservable's take this Monday so all that's left was the unit test .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: perf comparing Observable, NbpObservable, Stream and ParallelStream	2 .[sentence: 1,-1] x[2]:perf comparing Observable ,NbpObservable ,Stream and ParallelStream [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3358 from akarnokd/SingleOperators2x  2.x: Single class more operators + test from 1.x	Merge pull request #3358 from akarnokd /SingleOperators2x 2 .[sentence: 1,-1] x[2]:Single class more operators +test from 1 .x[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Single class + operators and test from 1.x + extra operators.	2 .[sentence: 1,-1] x[2]:Single class +operators and test from 1 .[sentence: 2,-1] x[2]+extra operators .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3371 from akarnokd/NbpObservableOps2x  2.x: non-backpressure NbpObservable all relevant operators + tests.	Merge pull request #3371 from akarnokd /NbpObservableOps2x 2 .[sentence: 1,-1] x[2]:non -backpressure NbpObservable all relevant operators +tests .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: non-backpressure NbpObservable all relevant operators + tests.	2 .[sentence: 1,-1] x[2]:non -backpressure NbpObservable all relevant operators +tests .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3348 from ReactiveX/v2-design-flowable  2.x Design: Flowable/Observable	Merge pull request #3348 from ReactiveX /v2 -design -flowable 2 .[sentence: 1,-1] x[2]Design :Flowable /Observable [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3349 from ReactiveX/v2-design-subject  2.x Design: Subject	Merge pull request #3349 from ReactiveX /v2 -design -subject 2 .[sentence: 1,-1] x[2]Design :Subject [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: perf: comparison of range and flatMap between Observable, NbpObservable and Single.	2 .[sentence: 1,-1] x[2]:perf :comparison of range and flatMap between Observable ,NbpObservable and Single .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3354 from akarnokd/PerfAwaitFix2x  2.x: perf change wait to spin-loop for short async benchmarks	Merge pull request #3354 from akarnokd /PerfAwaitFix2x 2 .[sentence: 1,-1] x[2]:perf change wait to spin -loop for short async benchmarks [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: perf change wait to spin-loop for short async benchmarks	2 .[sentence: 1,-1] x[2]:perf change wait to spin -loop for short async benchmarks [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3353 from akarnokd/RangePerf2x  2.x: range perf + added missing header.	Merge pull request #3353 from akarnokd /RangePerf2x 2 .[sentence: 1,-1] x[2]:range perf +added missing header .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: range perf + added missing header.	2 .[sentence: 1,-1] x[2]:range perf +added missing header .[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3350 from ReactiveX/v2-design-lifecycle  2.x Design: Creation/Destruction	Merge pull request #3350 from ReactiveX /v2 -design -lifecycle 2 .[sentence: 1,-1] x[2]Design :Creation /Destruction[-2][sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3352 from akarnokd/MergePerf2x  2.x: perf checks for flatMap and merge	Merge pull request #3352 from akarnokd /MergePerf2x 2 .[sentence: 1,-1] x[2]:perf checks for flatMap and merge [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: perf checks for flatMap and merge	2 .[sentence: 1,-1] x[2]:perf checks for flatMap and merge [sentence: 2,-1] [result: max + and - of any sentence]
2	-3	2.x Design: Creation/Destruction  How to create and destroy streams.  The wording of this can become much better once agreement occurs in https://github.com/ReactiveX/RxJava/pull/3348/files  The intent of this is:  1) Specify how to create streams (Observable/Flowable) of the various flavors, and account for flow control. 2) Evolve towards what the creation/generation APIs are 3) Specify that it is not the responsibility of the final Subscriber to call unsubscribe/cancel upstream	2 .[sentence: 1,-1] x[2]Design :Creation /Destruction[-2]How to create and destroy[-3]streams .[sentence: 2,-3] The wording of this can become much better once agreement occurs in https ://github .[sentence: 1,-1] com /ReactiveX /RxJava /pull /3348 /files The intent of this is :1 )Specify how to create streams (Observable /Flowable )of the various flavors ,and account for flow control .[sentence: 1,-1] 2 )Evolve towards what the creation /generation APIs are 3 )Specify that it is not the responsibility of the final Subscriber to call unsubscribe /cancel[-2]upstream [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	2.x Design: Subject  Clarification of `Subject` that affects implementation.  Related to discussion in https://github.com/ReactiveX/RxJava/pull/3345.	2 .[sentence: 1,-1] x[2]Design :Subject Clarification of `Subject `that affects implementation .[sentence: 2,-1] Related to discussion in https ://github .[sentence: 1,-1] com /ReactiveX /RxJava /pull /3345 .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Flowable/Observable  Proposed separation of `Observable` and `Flowable` along with description of each and their characteristics.	Flowable /Observable Proposed separation of `Observable `and `Flowable `along with description of each and their characteristics .[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Create DESIGN.md  Initial start with terminology and types as a place to begin evolving the design of RxJava v2.  I have bootstrapped this doc with things that should not be controversial, just statements of fact of what exists. If any are controversial, I apologize, please open a PR with the recommended change.  Further proposals to this document will come via PRs for discussion and approval.	Create DESIGN .[sentence: 1,-1] md Initial start with terminology and types as a place to begin evolving the design of RxJava v2 .[sentence: 1,-1] I have bootstrapped this doc with things that should not be controversial[-2],just statements of fact of what exists .[sentence: 1,-2] If any are controversial[-2],I apologize ,please[2]open a PR with the recommended change .[sentence: 2,-2] Further proposals to this document will come via PRs for discussion and approval .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3335 from akarnokd/ScalarFastPathEnable2x  2.x: scalar flatMap optimization enabled	Merge pull request #3335 from akarnokd /ScalarFastPathEnable2x 2 .[sentence: 1,-1] x[2]:scalar flatMap optimization enabled [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: scalar flatMap optimization enabled  + I wanted to make sure the slow path passes all tests before enabling the scalar optimization. + Fixed headers for internal classes	2 .[sentence: 1,-1] x[2]:scalar flatMap optimization enabled +I wanted to make sure the slow path passes all tests before enabling the scalar optimization .[sentence: 2,-1] +Fixed headers for internal classes [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3334 from akarnokd/DisposableTests2x  2.x: disposable unit tests + fix to RefCountDisposable behavior	Merge pull request #3334 from akarnokd /DisposableTests2x 2 .[sentence: 1,-1] x[2]:disposable unit tests +fix to RefCountDisposable behavior [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: disposable unit tests + fix to RefCountDisposable behavior  + sorted `Observable` and added `@BackpressureSupport` and `SchedulerSupport` annotations. + created `@Beta` and `@Experimental` annotations, nothing is marked with them because I intent everything to be standard at this point.	2 .[sentence: 1,-1] x[2]:disposable unit tests +fix to RefCountDisposable behavior +sorted `Observable `and added `@BackpressureSupport `and `SchedulerSupport `annotations .[sentence: 2,-1] +created `@Beta `and `@Experimental `annotations ,nothing is marked with them because I intent everything to be standard at this point .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3333 from akarnokd/SubscribersTests2x  2.x: subscribers/observers tests	Merge pull request #3333 [+0.6 spelling mood emphasis]from akarnokd /SubscribersTests2x 2 .[sentence: 2,-1] x[2]:subscribers /observers tests [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: subscribers/observers tests  I had to ignore many tests because it either tests with null or throws an exception from a Subscriber method which are not allowed with RS	2 .[sentence: 1,-1] x[2]:subscribers /observers tests I had to ignore many tests because it either tests with null or throws an exception from a Subscriber method which are not allowed with RS [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3332 from akarnokd/SubjectTests  2.x: subject tests and bugfixes	Merge pull request #3332 from akarnokd /SubjectTests 2 .[sentence: 1,-1] x[2]:subject tests and bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
1	-3	Fixed testNestedAsyncConcat not waiting for the parent to complete and misses the last onComplete	Fixed testNestedAsyncConcat not waiting for the parent to complete and misses[-3]the last onComplete [sentence: 1,-3] [result: max + and - of any sentence]
2	-1	2.x: subject tests and bugfixes	2 .[sentence: 1,-1] x[2]:subject tests and bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3331 from akarnokd/SchedulersTests2x  2.x: schedulers test of classic schedulers	Merge pull request #3331 from akarnokd /SchedulersTests2x 2 .[sentence: 1,-1] x[2]:schedulers test of classic schedulers [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: scheduler tests (no single() yet).	2 .[sentence: 1,-1] x[2]:scheduler tests (no single ()yet ).[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3330 from akarnokd/OperatorsTestZipFinish2x  2.x: operator test zip and SafeSubscriberTest	Merge pull request #3330 from akarnokd /OperatorsTestZipFinish2x 2 .[sentence: 1,-1] x[2]:operator test zip and SafeSubscriberTest[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test zip and SafeSubscriberTest	2 .[sentence: 1,-1] x[2]:operator test zip and SafeSubscriberTest[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3329 from akarnokd/OperatorTestWindow2x  2.x: operator test: window variants	Merge pull request #3329 from akarnokd /OperatorTestWindow2x 2 .[sentence: 1,-1] x[2]:operator test :window variants [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: operator test: window variants  I had to adjust some test slightly due to the a new behavior: if one cancels a source which is windowed, as long as the windows are active, the source has to stay active. However, there are more subtle possibilities that need new tests.	2 .[sentence: 1,-1] x[2]:operator test :window variants I had to adjust some test slightly due to the a new behavior :if one cancels[-2]a source[-2]which is windowed ,as long as the windows are active ,the source[-2]has to stay active .[sentence: 2,-2] However ,there are more subtle possibilities that need new tests .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3328 from akarnokd/OperatorTestsPack2xPart2  2.x: operator tests unsubscribeOn, withLatestFrom, zip (partial)	Merge pull request #3328 from akarnokd /OperatorTestsPack2xPart2 2 .[sentence: 1,-1] x[2]:operator tests unsubscribeOn ,withLatestFrom ,zip (partial )[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: operator tests unsubscribeOn, withLatestFrom, zip (partial)  + fixed cancellation behavior of observeOn, subscribeOn and unsubscribeOn (when and what to call cancel on) + fixed infinite loop in ScheduledRunnable + fixed zip not quitting eagerly if one of the sources was shorter + added specific ZipIterable because zip-iterable tests expect it to be not prefetching any of the sources (the plain zip does prefetch) + made the fromIterable more resilient to Iterable/Iterator crashes and added null-value checks	2 .[sentence: 1,-1] x[2]:operator tests unsubscribeOn ,withLatestFrom ,zip (partial )+fixed cancellation[-2]behavior of observeOn ,subscribeOn and unsubscribeOn (when and what to call cancel[-2]on )+fixed infinite loop in ScheduledRunnable +fixed zip not quitting eagerly if one of the sources[-2]was shorter +added specific ZipIterable because zip -iterable tests expect it to be not prefetching any of the sources[-2](the plain zip does prefetch )+made the fromIterable more resilient to Iterable /Iterator crashes and added null -value[2]checks [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3327 from akarnokd/OperatorTestsPack2x  2.x: operator tests: timestamp, toMap, toMultiMap, toList, toSortedList	Merge pull request #3327 from akarnokd /OperatorTestsPack2x 2 .[sentence: 1,-1] x[2]:operator tests :timestamp ,toMap ,toMultiMap ,toList ,toSortedList [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Workaround for javac, added missing headers.	Workaround for javac ,added missing headers .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: operator tests: timestamp, toMap, toMultiMap, toList, toSortedList	2 .[sentence: 1,-1] x[2]:operator tests :timestamp ,toMap ,toMultiMap ,toList ,toSortedList [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3326 from akarnokd/OperatorTestsThrottleFirstTimeIntervalTimeout2x  2.x: operator throttleFirst, timeInterval and timeout + bugfixes	Merge pull request #3326 from akarnokd /OperatorTestsThrottleFirstTimeIntervalTimeout2x 2 .[sentence: 1,-1] x[2]:operator throttleFirst ,timeInterval and timeout +bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator throttleFirst, timeInterval and timeout + bugfixes	2 .[sentence: 1,-1] x[2]:operator throttleFirst ,timeInterval and timeout +bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3325 from akarnokd/OperatorTestsTake2x  2.x: operator tests: take family + fixes	Merge pull request #3325 from akarnokd /OperatorTestsTake2x 2 .[sentence: 1,-1] x[2]:operator tests :take family +fixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator tests: take family + fixes	2 .[sentence: 1,-1] x[2]:operator tests :take family +fixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3324 from akarnokd/OperatorsTestSubscribeOnSwitch2x  2.x: operator test: switchIfEmpty, switchMap + bugfixes	Merge pull request #3324 from akarnokd /OperatorsTestSubscribeOnSwitch2x 2 .[sentence: 1,-1] x[2]:operator test :switchIfEmpty ,switchMap +bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test: switchIfEmpty, switchMap + bugfixes	2 .[sentence: 1,-1] x[2]:operator test :switchIfEmpty ,switchMap +bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3323 from akarnokd/OperatorTestSkip2x  2.x: operator test: skip variants and bugfix	Merge pull request #3323 from akarnokd /OperatorTestSkip2x 2 .[sentence: 1,-1] x[2]:operator test :skip variants and bugfix [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test: skip variants and bugfix  Note that since we know have time unit in schedulers, one must be careful with the time unit of the timed skip operators. The timestamps will be calculated via this unit and may not return the expected values.  For example, a skipLast of 1 second will not skip the value 0.5 seconds before completion because its timestamp is rounded down to the start of the second. But if one uses 1000 milliseconds, the value will be skipped.	2 .[sentence: 1,-1] x[2]:operator test :skip variants and bugfix Note that since we know have time unit in schedulers ,one must be careful with the time unit of the timed skip operators .[sentence: 2,-1] The timestamps will be calculated via this unit and may not return the expected values[2].[sentence: 2,-1] For example ,a skipLast of 1 second will not skip the value[2]0 .[sentence: 2,-1] 5 seconds before completion because its timestamp is rounded down to the start of the second .[sentence: 1,-1] But if one uses 1000 milliseconds ,the value[2]will be skipped .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3322 from akarnokd/OperatorTestSerializeSingle2x  2.x: operator test: serialize, single + SerializedSubscriber fix	Merge pull request #3322 from akarnokd /OperatorTestSerializeSingle2x 2 .[sentence: 1,-1] x[2]:operator test :serialize ,single +SerializedSubscriber fix [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test: serialize, single + SerializedSubscriber fix	2 .[sentence: 1,-1] x[2]:operator test :serialize ,single +SerializedSubscriber fix [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3321 from akarnokd/OperatorTestSampleScanEquals  2.x: operator tests: sample, scan and sequenceEqual + their bugfixes	Merge pull request #3321 from akarnokd /OperatorTestSampleScanEquals 2 .[sentence: 1,-1] x[2]:operator tests :sample ,scan and sequenceEqual +their bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator tests: sample, scan and sequenceEqual + their bugfixes	2 .[sentence: 1,-1] x[2]:operator tests :sample ,scan and sequenceEqual +their bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3320 from akarnokd/OperatorTestRetry2x  2.x: operator test: retry, retryWhen	Merge pull request #3320 from akarnokd /OperatorTestRetry2x 2 .[sentence: 1,-1] x[2]:operator test :retry ,retryWhen [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: operator test: retry, retryWhen  + retry with bipredicate + fixed map not checking the returned value for null + since RS doesn't allow throwing other than NPE, temporarily subscribe and lift will throw NPE with the actual error as cause so we don't miss an operator bug due to swallowed exceptions.	2 .[sentence: 1,-1] x[2]:operator test :retry ,retryWhen +retry with bipredicate +fixed map not checking the returned value[2]for null +since RS doesn't allow throwing other than NPE ,temporarily[-2]subscribe and lift will throw NPE with the actual error[-2]as cause so we don't miss[-2][=0 negation]an operator bug[-2]due to swallowed exceptions .[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3319 from akarnokd/OperatorTestReplay2x  2.x: operator test for replay	Merge pull request #3319 from akarnokd /OperatorTestReplay2x 2 .[sentence: 1,-1] x[2]:operator test for replay [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test for replay  Note that testIssue_2191_SchedulerUnsubscribe had to change the call count to pass. I don't understand this test and the over-mocking (but recognize the style).	2 .[sentence: 1,-1] x[2]:operator test for replay Note that testIssue _2191 _SchedulerUnsubscribe had to change the call count to pass .[sentence: 2,-1] I don't understand this test and the over -mocking (but recognize the style ).[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3318 from akarnokd/OperatorTestPublishReduceRepeat2x  2.x: operator tests: publish, reduce, repeat + fixes	Merge pull request #3318 from akarnokd /OperatorTestPublishReduceRepeat2x 2 .[sentence: 1,-1] x[2]:operator tests :publish ,reduce ,repeat +fixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator tests: publish, reduce, repeat + fixes  + added toSingle and toNbpObservable to Observable + fixed bugs in many operators and in the IO scheduler's release logic	2 .[sentence: 1,-1] x[2]:operator tests :publish ,reduce ,repeat +fixes +added toSingle and toNbpObservable to Observable +fixed bugs in many operators and in the IO scheduler's release logic [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3317 from akarnokd/OperatorTestOnError2x  2.x: operator test onError and onException, relevant bugfixes	Merge pull request #3317 from akarnokd /OperatorTestOnError2x 2 .[sentence: 1,-1] x[2]:operator test onError and onException ,relevant bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test onError and onException, relevant bugfixes	2 .[sentence: 1,-1] x[2]:operator test onError and onException ,relevant bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3316 from akarnokd/OperatorTestOnBackpressure2x  2.x: operator test onBackpressure(Buffer|Drop|Latest) and their bugfix	Merge pull request #3316 from akarnokd /OperatorTestOnBackpressure2x 2 .[sentence: 1,-1] x[2]:operator test onBackpressure (Buffer |Drop[-2]|Latest )and their bugfix [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: operator test onBackpressure(Buffer|Drop|Latest) and their bugfix	2 .[sentence: 1,-1] x[2]:operator test onBackpressure (Buffer |Drop[-2]|Latest )and their bugfix [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3315 from akarnokd/OperatorTestObserveOn2x  2.x: operator test observeOn	Merge pull request #3315 from akarnokd /OperatorTestObserveOn2x 2 .[sentence: 1,-1] x[2]:operator test observeOn [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test observeOn and related bugfixes	2 .[sentence: 1,-1] x[2]:operator test observeOn and related bugfixes [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test map, materialize    - OperatorMulticastTest is empty because it is not supported   - Fixed headers   - increased wating time in RefCount test testConnectUnsubscriberRaceCondition   - fixed bugs in toFuture, materialize	2 .[sentence: 1,-1] x[2]:operator test map ,materialize -OperatorMulticastTest is empty because it is not supported[2][*-0.5 approx. negated multiplier]-Fixed headers -increased wating time in RefCount test testConnectUnsubscriberRaceCondition -fixed bugs in toFuture ,materialize [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3314 from akarnokd/OperatorTestIgnoreLastMapNotif2x  2.x: operator test ignoreElements, last, mapNotification	Merge pull request #3314 from akarnokd /OperatorTestIgnoreLastMapNotif2x 2 .[sentence: 1,-1] x[2]:operator test ignoreElements ,last ,mapNotification [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test ignoreElements, last, mapNotification	2 .[sentence: 1,-1] x[2]:operator test ignoreElements ,last ,mapNotification [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3313 from akarnokd/OperatorTestGroupBy2x  2.x: operator test for groupBy; fix to groupBy and type argument swap	Merge pull request #3313 from akarnokd /OperatorTestGroupBy2x 2 .[sentence: 1,-1] x[2]:operator test for groupBy ;fix to groupBy and type argument[-2]swap [sentence: 2,-2] [result: max + and - of any sentence]
3	-2	2.x: operator test for groupBy; fix to groupBy and type argument swap for GroupedObservable  + added BooleanSubscription to detect cancellation without caring about requests.  I'm still not 100% convinced the groupBy request coordination works properly (i.e., no stall due lack of requests from one of the groups).	2 .[sentence: 1,-1] x[2]:operator test for groupBy ;fix to groupBy and type argument[-2]swap for GroupedObservable +added BooleanSubscription to detect cancellation[-2]without caring[3]about requests .[sentence: 3,-2] I'm still not 100 %convinced the groupBy request coordination works properly (i .[sentence: 1,-1] e .,[sentence: 1,-1] no stall due lack[-2]of requests from one of the groups ).[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3312 from akarnokd/OperatorTestFlatMap2x  2.x: operator test flatMap, merge, mergeDelayError	Merge pull request #3312 from akarnokd /OperatorTestFlatMap2x 2 .[sentence: 1,-1] x[2]:operator test flatMap ,merge ,mergeDelayError [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: operator test flatMap, merge, mergeDelayError  + added operator flatMap of notifications, fixed a bug in onBackpressureBuffer	2 .[sentence: 1,-1] x[2]:operator test flatMap ,merge ,mergeDelayError +added operator flatMap of notifications ,fixed a bug[-2]in onBackpressureBuffer [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3311 from akarnokd/OperatorTestElementAtFilterFinally2x  2.x: operator test elementAt, filter, finally, first	Merge pull request #3311 from akarnokd /OperatorTestElementAtFilterFinally2x 2 .[sentence: 1,-1] x[2]:operator test elementAt ,filter ,finally ,first [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test elementAt, filter, finally, first	2 .[sentence: 1,-1] x[2]:operator test elementAt ,filter ,finally ,first [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3310 from akarnokd/OperatorTestDoOn2x  2.x: operator test doOn(Request|Subscribe|Unsubscribe).	Merge pull request #3310 from akarnokd /OperatorTestDoOn2x 2 .[sentence: 1,-1] x[2]:operator test doOn (Request |Subscribe |Unsubscribe ).[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test doOn(Request|Subscribe|Unsubscribe).	2 .[sentence: 1,-1] x[2]:operator test doOn (Request |Subscribe |Unsubscribe ).[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3309 from akarnokd/OperatorTestDistinctEach  2.x: operator test distinct, distinctUntilChanged and doOnEach	Merge pull request #3309 from akarnokd /OperatorTestDistinctEach 2 .[sentence: 1,-1] x[2]:operator test distinct ,distinctUntilChanged and doOnEach [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: operator test distinct, distinctUntilChanged and doOnEach   Note: several tests have been ignored due to non-conformance with RS	2 .[sentence: 1,-1] x[2]:operator test distinct ,distinctUntilChanged and doOnEach Note :several tests have been ignored due to non -conformance with RS [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3308 from akarnokd/OperatorTestsDelayDematerialize  2.x: operator test delay, dematerialize	Merge pull request #3308 from akarnokd /OperatorTestsDelayDematerialize 2 .[sentence: 1,-1] x[2]:operator test delay[-2],dematerialize [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	2.x: operator test delay, dematerialize	2 .[sentence: 1,-1] x[2]:operator test delay[-2],dematerialize [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3307 from akarnokd/OperatorTestDebounceDefaultIfEmpty2x  2.x: Operator debounce and defaultIfEmpty, fix to debounce behavior	Merge pull request #3307 from akarnokd /OperatorTestDebounceDefaultIfEmpty2x 2 .[sentence: 1,-1] x[2]:Operator debounce and defaultIfEmpty ,fix to debounce behavior [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Operator debounce and defaultIfEmpty, fix to debounce behavior	2 .[sentence: 1,-1] x[2]:Operator debounce and defaultIfEmpty ,fix to debounce behavior [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3306 from akarnokd/OperatorTestsCastConcat2x  2.x: operators cast and concat tests	Merge pull request #3306 from akarnokd /OperatorTestsCastConcat2x 2 .[sentence: 1,-1] x[2]:operators cast and concat tests [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: operators cast and concat tests  The concat reuses the same inner subscriber to save on its allocation cost which works only if the inner source conforms with the spec and doesn't emit any event after an onComplete(). There is a test that explicitly calls onComplete() twice to test the resilience of concat. The current workaround makes this test pass but any async non-conforming source may still bug out the operator.  This is a tradeoff between safety and performance. If we'd expect such non-conforming behavior, the current optimization has to be turned into a regular individually allocated inner subscribers.	2 .[sentence: 1,-1] x[2]:operators cast and concat tests The concat reuses the same inner subscriber to save[2]on its allocation cost which works only if the inner source[-2]conforms with the spec and doesn't emit any event after an onComplete ().[sentence: 2,-2] There is a test that explicitly calls onComplete ()twice to test the resilience of concat .[sentence: 1,-1] The current workaround makes this test pass but any async non -conforming source[-2]may still bug[-2]out the operator .[sentence: 1,-2] This is a tradeoff between safety[2]and performance .[sentence: 2,-1] If we'd expect such non -conforming behavior ,the current optimization has to be turned into a regular individually allocated inner subscribers .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3305 from akarnokd/SingleAndNonBackpressured2x  2.x: classes Single and NbpObservable	Merge pull request #3305 from akarnokd /SingleAndNonBackpressured2x 2 .[sentence: 1,-1] x[2]:classes Single and NbpObservable [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: classes Single and NbpObservable  `Single` is a deferred single-value emitting Observable.  `NbpObservable` is the non-backpressure Observable, named this way until the main Observable gets all its tests ported so a refactor can deal with all of them.  I've implemented the most basic construction and operator methods on them.	2 .[sentence: 1,-1] x[2]:classes Single and NbpObservable `Single `is a deferred single -value[2]emitting Observable .[sentence: 2,-1] `NbpObservable `is the non -backpressure Observable ,named this way until the main Observable gets all its tests ported so a refactor can deal with all of them .[sentence: 1,-1] I've implemented the most basic construction and operator methods on them .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3303 from akarnokd/AsyncSubscription2x  2.x: added missing buffer overload (with boundary selector)	Merge pull request #3303 from akarnokd /AsyncSubscription2x 2 .[sentence: 1,-1] x[2]:added missing buffer overload (with boundary selector )[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Fixed fromFuture, added headers	Fixed fromFuture ,added headers [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	2.x: added missing buffer overload (with boundary selector)  + added AsyncSubscription that allows setting the actual subscription later and can hold a resource. It has less overhead than SubscriptionArbiter due to single use.	2 .[sentence: 1,-1] x[2]:added missing buffer overload (with boundary selector )+added AsyncSubscription that allows setting the actual subscription later and can hold a resource .[sentence: 2,-1] It has less overhead than SubscriptionArbiter due to single use .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3301 from akarnokd/OperatorBufferTest2x  2.x: test for buffer, I'm still missing the boundary-supplier version	Merge pull request #3301 from akarnokd /OperatorBufferTest2x 2 .[sentence: 1,-1] x[2]:test for buffer ,I'm still missing the boundary -supplier version [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: test for buffer, I'm still missing the boundary-supplier version	2 .[sentence: 1,-1] x[2]:test for buffer ,I'm still missing the boundary -supplier version [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3300 from akarnokd/OperatorTestsAllAnyAsObservable  2.x: test for operators all, any, asObservable, fixes to all and any	Merge pull request #3300 from akarnokd /OperatorTestsAllAnyAsObservable 2 .[sentence: 1,-1] x[2]:test for operators all ,any ,asObservable ,fixes to all and any [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: test for operators all, any, asObservable, fixes to all and any	2 .[sentence: 1,-1] x[2]:test for operators all ,any ,asObservable ,fixes to all and any [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3299 from akarnokd/OperatorTestsToFutureUsing2x  2.x: test for toFuture and using, changes according to the test	Merge pull request #3299 from akarnokd /OperatorTestsToFutureUsing2x 2 .[sentence: 1,-1] x[2]:test for toFuture and using ,changes according to the test [sentence: 2,-1] [result: max + and - of any sentence]
2	-2	2.x: test for toFuture and using, changes according to the test expectations  Some tests are now skipped due to being invalid in RS.	2 .[sentence: 1,-1] x[2]:test for toFuture and using ,changes according to the test expectations Some tests are now skipped due to being invalid[-2]in RS .[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3298 from akarnokd/OperatorsTestsRefCountTimer2x  2.x: tests for refCount and timer, fixes to flatMap, publish and range	Merge pull request #3298 from akarnokd /OperatorsTestsRefCountTimer2x 2 .[sentence: 1,-1] x[2]:tests for refCount and timer ,fixes to flatMap ,publish and range [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: tests for refCount and timer, fixes to flatMap and publish, range	2 .[sentence: 1,-1] x[2]:tests for refCount and timer ,fixes to flatMap and publish ,range [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3297 from akarnokd/OperatorFromIterableRange2x  2.x: unit tests and fixes for fromIterable and range	Merge pull request #3297 from akarnokd /OperatorFromIterableRange2x 2 .[sentence: 1,-1] x[2]:unit tests and fixes for fromIterable and range [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: unit tests and fixes for fromIterable and range	2 .[sentence: 1,-1] x[2]:unit tests and fixes for fromIterable and range [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3294 from akarnokd/OperatorTests2xPart3  More tests and bugfixes to operators.	Merge pull request #3294 from akarnokd /OperatorTests2xPart3 More tests and bugfixes to operators .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	More tests and bugfixes to operators.	More tests and bugfixes to operators .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3293 from akarnokd/OperatorTests2xPart2  Test some UnicastSubject, cache, NotificationLite, amb	Merge pull request #3293 from akarnokd /OperatorTests2xPart2 Test some UnicastSubject ,cache ,NotificationLite ,amb [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Test some UnicastSubject, cache, NotificationLite, amb  + bugfix to cache, skipUntil and takeUnit	Test some UnicastSubject ,cache ,NotificationLite ,amb +bugfix to cache ,skipUntil and takeUnit [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3292 from akarnokd/OperatorTests2xPart1  Unit test for Blocking operators.	Merge pull request #3292 from akarnokd /OperatorTests2xPart1 Unit test for Blocking[-2]operators .[sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Unit test for Blocking operators.	Unit test for Blocking[-2]operators .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fixes to MpscLinkedQueue, some minor refactorings.	Fixes to MpscLinkedQueue ,some minor refactorings .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	BlockingObservable.toFuture cancel races with onSubscribe.	BlockingObservable[-2].[sentence: 1,-2] toFuture cancel[-2]races with onSubscribe .[sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Missed a return in case of a null value.	Missed[-2]a return in case of a null value[2].[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #3284 from akarnokd/ThrottleZipTests2x  Simpler tests of throttleLast, throttleWithTimeout, zip	Merge pull request #3284 from akarnokd /ThrottleZipTests2x Simpler tests of throttleLast ,throttleWithTimeout ,zip [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Simpler tests of throttleLast, throttleWithTimeout, zip	Simpler tests of throttleLast ,throttleWithTimeout ,zip [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3283 from akarnokd/SubscriberTest2x  SubscriberTests port from 1.x	Merge pull request #3283 from akarnokd /SubscriberTest2x SubscriberTests port from 1 .x[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-1	SubscriberTests port from 1.x	SubscriberTests port from 1 .x[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3282 from akarnokd/WindowReduceTests2x  Simpler tests for window reduce, scan, starWith.	Merge pull request #3282 from akarnokd /WindowReduceTests2x Simpler tests for window reduce ,scan ,starWith .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Simpler tests for window reduce, scan, starWith.	Simpler tests for window reduce ,scan ,starWith .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3280 from akarnokd/ObservableTests2x  ObservableTests and bugfixes.	Merge pull request #3280 from akarnokd /ObservableTests2x ObservableTests and bugfixes .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added missing header and fixed javadoc link	Added missing header and fixed javadoc link [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	ObservableTests and bugfixes.	ObservableTests and bugfixes .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3279 from akarnokd/TestsToDoOnObservable2x  ConversionTest and DoOnTest	Merge pull request #3279 from akarnokd /TestsToDoOnObservable2x ConversionTest and DoOnTest [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	ConversionTest and DonTest	ConversionTest and DonTest [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3278 from akarnokd/GroupByMergeNotificationTest2x  Simplest tests of groupBy, merge and Notification	Merge pull request #3278 from akarnokd /GroupByMergeNotificationTest2x Simplest tests of groupBy ,merge and Notification [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Simplest tests of groupBy, merge and Notification	Simplest tests of groupBy ,merge and Notification [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3277 from akarnokd/ErrorHandlingTests2x  ErrorHandlingTests and EventStream	Merge pull request #3277 from akarnokd /ErrorHandlingTests2x[-2]ErrorHandlingTests[-2]and EventStream [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	ErrorHandlingTests and EventStream  I've changed them to use `safeSubscribe` because plain RS subscribers are not expected to throw.	ErrorHandlingTests[-2]and EventStream I've changed them to use `safeSubscribe[2]`because plain RS subscribers are not expected to throw .[sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3276 from akarnokd/ConcatTests2x  Simplest concat test from 1.x	Merge pull request #3276 from akarnokd /ConcatTests2x Simplest concat test from 1 .x[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Simplest concat test from 1.x  I've also added convenience overloads to concat 2-9 sources because `concat(Publisher...)` causes overload resolution conflict with `concat(Publisher<Publisher>)`	Simplest concat test from 1 .[sentence: 1,-1] x[2]I've also added convenience overloads to concat 2 -9 sources[-2]because `concat (Publisher ...)`[sentence: 2,-2] causes overload resolution conflict[-2]with `concat (Publisher <Publisher >)`[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #3275 from akarnokd/CombineLatestTest2x  Simplest combineLatest tests and fix to groupBy.	Merge pull request #3275 from akarnokd /CombineLatestTest2x Simplest combineLatest tests and fix to groupBy .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Simplest combineLatest tests and fix to groupBy.   Forgot to deliver the value inside the GroupedUnicast drain loop.	Simplest combineLatest tests and fix to groupBy .[sentence: 1,-1] Forgot to deliver the value[2]inside the GroupedUnicast drain loop .[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3273 from akarnokd/FirehoseTestFixAttempt2x  Fix attempt to the firehose test.	Merge pull request #3273 from akarnokd /FirehoseTestFixAttempt2x Fix attempt to the firehose test .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Sleeping instead of computational waiting.	Sleeping instead of computational waiting .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix attempt to the firehose test.	Fix attempt to the firehose test .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3271 from akarnokd/UnitTestsPreparation  First unit test and fixes to operators.	Merge pull request #3271 from akarnokd /UnitTestsPreparation First unit test and fixes to operators .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	First unit test and fixes to operators.	First unit test and fixes to operators .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3270 from akarnokd/UnicastSubjectExpansion2x  UnicastSubject javadoc, support for onCancelled notification.	Merge pull request #3270 from akarnokd /UnicastSubjectExpansion2x UnicastSubject javadoc ,support[2]for onCancelled notification .[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	UnicastSubject javadoc, support for onCancelled notification.   The cancellation notification will come in handy with window (and in groupby). It helps with the case when the main source has been cancelled but the individual windows/groups are still being consumed. If those get cancelled by their single Subscribers, this notification will reach the source and once all windows/groups get cancelled, the main source can be cancelled.  Fix to generator production accounting.	UnicastSubject javadoc ,support[2]for onCancelled notification .[sentence: 2,-1] The cancellation[-2]notification will come in handy with window (and in groupby ).[sentence: 1,-2] It helps with the case when the main source[-2]has been cancelled[-2]but the individual windows /groups are still being consumed .[sentence: 1,-2] If those get cancelled[-2]by their single Subscribers ,this notification will reach the source[-2]and once all windows /groups get cancelled[-2],the main source[-2]can be cancelled[-2].[sentence: 1,-2] Fix to generator production accounting .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3268 from akarnokd/Disposables2x  Standard disposables, changes to resource containers to support them.	Merge pull request #3268 from akarnokd /Disposables2x Standard disposables ,changes to resource containers to support[2]them .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Standard disposables, changes to resource containers to support them.	Standard disposables ,changes to resource containers to support[2]them .[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	2.x: Added plugin handler for creating and receiving the new thread scheduler.	2 .[sentence: 1,-1] x[2]:Added plugin handler for creating and receiving the new thread scheduler .[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	generate: don't wrap the counter when cancelling a max value.	generate :don't wrap the counter when cancelling[-2]a max value[2].[sentence: 2,-2] [result: max + and - of any sentence]
