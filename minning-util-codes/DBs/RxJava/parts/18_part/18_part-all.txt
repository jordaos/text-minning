Whitespace fix.
Fixed unsubscription issue in buffer with time and a potential concurrency issue in merge.
Merge pull request #1866 from akarnokd/ReplaySubjectMemoryLeakFix  Fix memory leak in bounded ReplaySubject due to retaining the node index
Merge pull request #1884 from benjchristensen/mutable-collect-scan-reduce  Fix Scan/Reduce/Collect Factory Ambiguity
Fix Scan/Reduce/Collect Factory Ambiguity  This puts the seed factory on `collect` and removes it from `scan` and `reduce` due to ambiguity. See https://github.com/ReactiveX/RxJava/pull/1883 and https://github.com/ReactiveX/RxJava/issues/1881
Merge pull request #1882 from benjchristensen/scheduler-parallelism  Remove Unused Scheduler.parallelism
Remove Unused Scheduler.parallelism  Before hitting 1.0 removing this API as it is not used.
0.20.7
1.0.0-rc.10
Fix memory leak in bounded ReplaySubject due to retaining the node index indefinitely once the Subscriber caught up.
Add missing javadoc interface descriptions for the various FuncN variants (#1843)
Add missing javadoc interface descriptions for some ActionN variants (#1842)
Make the javadoc descriptions of various Exception implementations parallel one another better (#1841)
overridden onFoo() methods in Subscriber subclasses need their own javadocs (#1849 #1850). Also: Observer javadocs are a bit too groovy.
in BlockingObservable.forEach() javadoc, clarify what happens in case of error notification from underlying Observable (#1844)
In javadocs, warn developers away from using BlockingObservable in production code (#1844)
advanced javadoc formatting yoga in GroupedObservable class description (#1846)
promote Observer.create(onNext) note about onError to sentence #1 of javadoc description (#1847)
javadocs for Subscriber variants: take care of Observer/Subscriber distinction (#1848)
Hiding implementation details from Scheduler javadocs (#1851)
deprecating inferiority complex (#1852)
remove links to .NET docs from our javadocs (#1852)
Improve asObservable() javadoc description (#1853)
clean up onBackpressureDrop() javadocs and make similar to those for onBackpressureBuffer() (#1854)
clarify return value of publish() in javadocs (#1855)
make javadocs for reduce() more precise (#1856)
make javadocs for scan() more precise (#1857)
make javadoc for zip() variants more precise (#1858)
minor corrections to javadocs for new scan/reduce variants (#1835)
Update README.md
Update README.md
Delete gradle.properties
Merge pull request #1834 from benjchristensen/toSerializedSubject  Subject.toSerialized
Merge pull request #1832 from benjchristensen/thread-interrupts-take  Fix Take Early Unsubscription Causing Interrupts
Merge pull request #1835 from benjchristensen/reduce-scan-mutable-seed  Scan/Reduce with Seed Factory
Merge pull request #1836 from benjchristensen/ring-buffer-size  Reduce Ring Buffer Default Sizes (and lower for Android)
IndexedRingBufferSize (256 default, 8 on Android)  - changing from 512 to 256 based on perf tests - platform dependent check for Android to set to 8 to reduce memory usage (use cases on Android should rarely if ever hit the use case with merge that requires the higher buffer sizes for performance)
RxRingBufferSize (128 default, 16 on Android)  - changing from 1024 to 128 based on perf tests - platform dependent check for Android to set to 16 to reduce memory usage
Scan/Reduce with Seed Factory  Adds overload with seed factory as per https://github.com/ReactiveX/RxJava/issues/1831
Subject.toSerialized  Adds toSerialized as discussed in https://github.com/ReactiveX/RxJava/issues/1748
Merge pull request #1833 from benjchristensen/window-tweaks  Fix Thread Safety for Unsubscribe of Window
Fix Thread Safety for Unsubscribe  I'm using a separate variable so the volatile is only touching during window start/end and unsubscribe rather than every onNext.
Fix Take Early Unsubscription Causing Interrupts  Fixes https://github.com/ReactiveX/RxJava/issues/1804
Merge pull request #1827 from alexwen/1826_scheduler_termination  CacheThreadScheduler Evictor should Check Removal
Merge pull request #1830 from benjchristensen/313-mergeDelayError  Fix mergeDelayError Handling of Error in Parent Observable
Fix mergeDelayError Handling of Error in Parent Observable  Fixes https://github.com/ReactiveX/RxJava/issues/313
Merge branch 'mergeDelayErrorFix' of github.com:EmteZogaf/RxJava into 313-mergeDelayError  Unit test for https://github.com/ReactiveX/RxJava/issues/313
Merge pull request #1829 from benjchristensen/1546-window  Fix Window by Count Unsubscribe Behavior
Fixes Early Unsubscribe for Overlapping Window  - https://github.com/ReactiveX/RxJava/issues/1546 - This also fixes the fact that the overlapping window overload was not propagating unsubscribe before. A new unit test caught that.
Fixes Early Unsubscribe for Non-Overlapping Window  https://github.com/ReactiveX/RxJava/issues/1546
Unit Test By Window Variant  Split the unit tests up to match the implementation files. Add unit tests for https://github.com/ReactiveX/RxJava/issues/1546 to OperatorWindowWithSizeTest
Add check to ensure that the worker was removed from the queue, before unsubscribing that worker.
This doesn't belong here. Replaced by http://reactivex.io/documentation/Operators/operators.html
1.0.0-rc.9
1.0.0-rc.9
Merge pull request #1819 from benjchristensen/issuje-1818-concat  Fix Concat Breaks with Double onCompleted
Fix Concat Breaks with Double onCompleted  Fixes https://github.com/ReactiveX/RxJava/issues/1818
Merge pull request #1817 from benjchristensen/lift-error-handling  Fix Synchronous OnSubscribe Exception Skips Operators
Fix Synchronous OnSubscribe Exception Skips Operators  Fixes https://github.com/ReactiveX/RxJava/issues/1816
Update README.md
Create README.md
Merge pull request #1813 from zsxwing/issue1812  Fix issue #1812 that zip may swallow requests
Fix issue #1812 that zip may swallow requests
Merge pull request #1809 from benjchristensen/1797-utility-functions  Remove Utility Functions from Public API
Remove Utility Functions from Public API  Fixes https://github.com/ReactiveX/RxJava/issues/1797
Remove Javadoc Linebreaks
Merge pull request #1806 from benjchristensen/remove-utilities  Remove Unnecessary Utilities
fix javadoc description of share()
Merge pull request #1808 from jparise/readme-clojure-link  Fix the RxClojure project link.
Fix the RxClojure project link.
Remove `Not` Class  As per https://github.com/ReactiveX/RxJava/issues/1798
Remove Actions Utility Methods  As per https://github.com/ReactiveX/RxJava/issues/1799
Merge pull request #1802 from simonbasle/hasObservers  add hasObservers method to Subjects (#1772)
Merge pull request #1803 from edenman/1.x  Print full classname (inner class support) and fix enum output
Print full classname (inner class support) and fix enum output
Note on Versioning and GroupIDs
add hasObservers method to Subjects (#1772)  as per https://github.com/ReactiveX/RxJava/issues/1772  SerializedSubject now keeps track of the actual Subject. BufferUntilSubscriber synchronizes on the state guard.
New and improved javadocs for MissingBackpressureException (#1800)
Javadocs for MissingBackpressureException (#1800)
Merge pull request #1796 from benjchristensen/testsubject-javadoc  Improve TestSubject Javadoc
Improve TestSubject Javadoc  As per https://github.com/ReactiveX/RxJava/issues/1759
Merge pull request #1788 from benjchristensen/1785-remove-publish-overloads  Remove PublishLast/InitialValue
1.0.0-rc.8
Merge pull request #1793 from benjchristensen/1791_first_with_retryWhen  Take/Redo Unsubscribe
Take Unsubscribes Before OnNext  To prevent issues such as https://github.com/ReactiveX/RxJava/issues/1791
Fix for #1791 - don't retry (subscribe) to source if child has unsubscribed.
Merge pull request #1789 from benjchristensen/1668-groupedObservable  GroupedObservable.from/create
Merge pull request #1787 from benjchristensen/1782-remove-withIndex  Remove *withIndex Operators
GroupedObservable.from/create  See https://github.com/ReactiveX/RxJava/issues/1668
Remove PublishLast/InitialValue  See https://github.com/ReactiveX/RxJava/issues/1785
Remove *withIndex Operators  See https://github.com/ReactiveX/RxJava/issues/1782 -> Remove takeWhileWithIndex & skipWhileWithIndex
Merge pull request #1786 from benjchristensen/1779-multicast  Remove Multicast
Remove Multicast  The implementation is still there as `replay` is still using it, but the public API is removed.
Merge pull request #1784 from benjchristensen/publish-backpressure  Publish with Backpressure
Publish with Backpressure
Merge pull request #1777 from abersnaze/javadoc-exclude  Excluding things from the javadoc
Merge pull request #1778 from zsxwing/compose  Change Transformer to Func1<Observable<T>, Observable<R>>
Change Transformer to Func1<Observable<T>, Observable<R>>
exclude rx.internal. exclude RxJavaErrorHandlerDefault by deleting it.
Merge pull request #1775 from akarnokd/BlockingOperatorNextTestFix  BlockingOperatorNextTest.testSingleSourceManyIterators fix
Merge pull request #1776 from benjchristensen/compose-generics  Observable.compose Generics
Covariance Test with GroupedObservable.compose
Increased the interval time to 100ms.
Merge pull request #1771 from neerajrj/onErrorReturnBackpressure  On error return backpressure
back pressure tests
back pressure support
Version 1.0.0-rc.7
Merge pull request #1767 from loganj/uncaught_executor  ExecutorScheduler delivers uncaught exceptions
Merge pull request #1768 from benjchristensen/onErrorTests  OnErrorResume Backpressure Tests
OnErrorResume Backpressure Tests
ExecutorScheduler delivers uncaught exceptions  Instead of swallowing unhandled errors, ExecutorScheduler delivers them to the executing thread's UncaughtExceptionHandler.  This addresses the same issue as ReactiveX/RxJava#1682, but for ExecutorScheduler which does not used ScheduledAction.
Merge pull request #1765 from neerajrj/onErrorResumeBackpressure  backpressure support in onErrorResumeNext* operators
Merge pull request #1766 from loganj/uncaught  Unhandled errors go to UncaughtExceptionHandler
Unhandled errors go to UncaughtExceptionHandler  Rather than swallowing/logging errors, ScheduledAction now delivers them to the UncaughtExceptionHandler for the executing Thread. This gives client applications control over the handling of errors that occur off of the calling Thread.
set producer to allow back pressure signals to flow between parent and child
0.20.6
Merge pull request #1763 from benjchristensen/cleanup-refCount-tests  Combine RefCount Tests
Combine RefCount Tests
Compose generics
Merge pull request #1757 from akarnokd/Cleanup_Override_n_SuppressWarnings  Cleanup: added missing annotations, removed unnecesary annotations
Cleanup: added missing annotations, removed unnecesary annotations
Merge pull request #1755 from benjchristensen/issue1688  OnSubscribeRefCount with Synchronous Support
OnSubscribeRefCount UnitTests  Additional tests on top of those started by @davidmoten
OnSubscribeRefCount with Synchronous Support  Fixes https://github.com/ReactiveX/RxJava/issues/1688
Merge pull request #1752 from akarnokd/Cleanup_Headers_n_Casts  Added missing headers, removed unnecessary casts
Added missing headers, removed unnecessary casts
Merge pull request #1750 from zsxwing/OnSubscribeFromIterabl-NPE  Fix NPE when iterable is null
Merge pull request #1751 from akarnokd/Remove_unused  Removed unused imports and variables.
Removed unused import and variables.
Fix NPE when iterable is null
Merge pull request #1749 from benjchristensen/buffer-empty  BufferUntilSubscriber EmptyObserver
EmptyObserver  As per https://github.com/ReactiveX/RxJava/pull/1742/files#r18738531
add javadocs to describe SerializedSubject class (also correct error in javadoc comments for OperatorDoOnSubscribe, for what it's worth)
1.0.0-rc.6
Merge pull request #1747 from akarnokd/Cleanup_Utility_Classes  Cleanup: final and utility classes
minor javadoc formatting fix
javadoc fixes (countLong, subscriptionDelay, Observables)
Added final keyword and private constructor to private/utility classes.
Merge pull request #1745 from benjchristensen/serialized-subject  SerializedSubject
Merge pull request #1746 from benjchristensen/issue-1682  Fatal System.err Logs on Unhandled Exceptions
Fatal System.err Logs on Unhandled Exceptions  If an exception is thrown on a thread then we can't do anything with it so will log out to System.err.  Fixes https://github.com/ReactiveX/RxJava/issues/1682 ScheduledAction Swallows Errors
SerializedSubject  See https://github.com/ReactiveX/RxJava/issues/1744
Merge pull request #1743 from benjchristensen/issue-1685  Subject Error Handling
Subject Error Handling  Fixes https://github.com/ReactiveX/RxJava/issues/1685 by delaying errors that are caught until after all subscribers have a chance to receive the event.  Note that this has a lot of code duplication to handle this across the Subject implementations. It may be worth abstracting this logic ... but right now I'm just doing what makes sense to fix this as the Subject abstractions are non-trivial.
Merge pull request #1742 from benjchristensen/issue-1571  EmptyObserver and TestObserver
Swallow Errors in TestObserver  If a delegate is not provided then do nothing. Fixes https://github.com/ReactiveX/RxJava/issues/1571
Clarify Javadoc on Observers.empty()  It throws an Exception ... and now EmptyObserver is gone.
Delete EmptyObserver  It creates no value and confuses with Observers.empty() which throws an OnErrorNotImplementedException if onError is invoked. Fixes https://github.com/ReactiveX/RxJava/issues/1741
Merge pull request #1740 from benjchristensen/countLong  longCount -> countLong
longCount -> countLong  Fixes https://github.com/ReactiveX/RxJava/issues/1684
Merge pull request #1736 from benjchristensen/issue-1702  Fix TrampolineScheduler NullPointerException
Merge pull request #1738 from benjchristensen/issue-1724  Delay Operator with Reactive Pull Backpressure
Merge pull request #1739 from benjchristensen/observeOn-testErrorPropagatesWhenNoOutstandingRequests  Fix Slow Non-deterministic Test
Fix Slow Non-deterministic Test  Somehow I missed the Thread.sleep to force the scenario so most of the time this test would run very slow (or forever). I'm surprised the unit tests passed before... just random luck on thread scheduling.
Delay Operator with Reactive Pull Backpressure  Updated the implementations to support reactive pull backpressure. Fixes https://github.com/ReactiveX/RxJava/issues/1724
Remove use of ThreadLocal  This was an awkward leftover from early version of RxJava (pre v0.17).
Fix TrampolineScheduler NullPointerException  I tried for about 30 minutes to replicate the NPE reported in https://github.com/ReactiveX/RxJava/issues/1702 but couldn't. It makes sense reading the code that an unsubscribe could trigger an NPE though so I'm fixing it as per recommendation of @DylanSale even though I can't replicate. I confirmed that the items are being put in the queue BEFORE the wip variable is incremented, so that concurrency seems okay.
more javadoc changes to correspond with recent method changes
javadoc changes to correspond with recent method changes
Update README.md
Merge pull request #1733 from benjchristensen/clean-stray-file  Move To Proper Location
Move To Proper Location  Was accidentally committed in old rxjava-core src folder.
Version 1.0.0-rc.5
Add dates
Merge pull request #1731 from benjchristensen/issue-1525  Remove Unused Code
Remove Unused Code
Merge pull request #1729 from benjchristensen/combineLatest-1717  CombineLatest: Request Up When Dropping Values
Merge pull request #1728 from benjchristensen/observeOnErrorPropagation  ObserveOn Error Propagation
Merge pull request #1727 from benjchristensen/groupByWithBackpressure  Proposed groupBy/groupByUntil Changes
ObserveOn Error Propagation  - errors were not being propagated if backpressure was exerted (requested==0) - terminal events do not need to be requested so it now ignores the requested count to emit onError
ObserveOn Cleanup  - make code easier to understand with some refactoring of the pollQueue loop - add a unit test to ensure correct behavior with a hot Observable source
Request Up When Dropping Values
groupByUntil -> groupBy  This collapses groupByUntil and groupBy into a single groupBy operator. The new implementation has 2 major changes:  1) It supports reactive pull backpressure. 2) Child GroupedObservables can be unsubscribed and they will be cleaned up and then new instances for the same key can be emitted, like groupByUntil, except that now instead of passing in a special durationSelector function, the child can be composed using take/takeUntil/etc to cause an unsubscribe.  If the previous non-obvious groupBy behavior is wanted, then instead of unsubscribing, it can be filtered to ignore all further data, which is what the old groupBy used to do when a child was unsubscribed.
back pressure support for group by operator
Merge pull request #1726 from benjchristensen/fix-merge-1723  Fix Merge: backpressure + scalarValueQueue don't play nicely
Synchronize Access  The `wip` variable needs its access to be synchronized. Then it calls drainAndComplete outside the lock.
Remove Comment  This comment is no longer correct. 1420 was resolved.
fix for merge dropping values from scalarValueQueue and not completing during request(..) when the last value emitted was from scalarValueQueue
Merge pull request #1720 from abersnaze/dematerize-reWhen  Change repeatWhen and retryWhen signatures.
Merge pull request #1719 from abersnaze/onBackpressure-request-max  Bug in the onBackpressure operators
forgot to commit the changes to the tests.
Add a shim to make it so the public api for repeatWhen and retryWhen don't expose Notification<?>
Bug in the onBackpressure operators
0.20.5 and 1.0.0-rc.4
Merge pull request #1716 from benjchristensen/remove-parallel  Remove Observable.Parallel
Remove Observable.Parallel  see https://github.com/ReactiveX/RxJava/issues/1673
Merge pull request #1714 from benjchristensen/merge-20  Merge 0.20.5 into 1.x
Use EmptyObserver instead of Subscribers.empty()  onError should be ignored after unsubscribe is called.
Fix the race condition in BufferUntilSubscriber
Fix Rx serialization bug in takeUntil again
Fix compose generics
Fix the failing Observable.mergeDelayError synchronous error unit test
Added a unit test to demonstrate regression in Observable.mergeDelayError
Merge pull request #1683 from benjchristensen/observeOn-error  ObserveOn Error Handling
Merge pull request #1713 from benjchristensen/tweak-pull-1705-fix  Slightly cleaner code for onNext from buffer
Assert onError cuts ahead of onNext  ... and doesn't allow intermittent onNext via a race of draining the queue and emitting (the draining thread must be where the skipping happens, not the producer thread).
Unsubscribe eagerly and drop queued onNext to emit onError  The queue will be drained to find and emit the onError.
NotificationLite.ErrorSentinel.toString  It should delegate the toString to the Exception, not reach into the message. Some Exceptions don't have a message so this could print "null" and not show the exception type.
