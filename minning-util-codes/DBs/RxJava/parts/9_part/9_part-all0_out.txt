Positive	Negative	Text	Explanation
1	-2	Revert use of CurrentThreadScheduler for Observable.from  Use ImmediateScheduler as performance is 4x faster and CurrentThreadScheduler currently offers no benefit (it doesn���t solve the unsubscribe problem).  Performance numbers:       * Observable.from(Arrays.asList(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L), scheduler);      *      * --- Schedulers.immediate() ---      *      * Run: 0 - 1,849,947 ops/sec      * Run: 1 - 2,076,067 ops/sec      * Run: 2 - 2,114,688 ops/sec      * Run: 3 - 2,114,301 ops/sec      * Run: 4 - 2,102,543 ops/sec      *      * --- Schedulers.currentThread() ---      *      * Run: 0 - 548,862 ops/sec      * Run: 1 - 559,955 ops/sec      * Run: 2 - 581,412 ops/sec      * Run: 3 - 562,187 ops/sec      * Run: 4 - 565,723 ops/sec       * Observable.from(Arrays.asList(1L), scheduler);      *      * --- Schedulers.immediate() ---      *      * Run: 10 - 4,113,672 ops/sec      * Run: 11 - 4,068,351 ops/sec      * Run: 12 - 4,070,318 ops/sec      * Run: 13 - 4,161,793 ops/sec      * Run: 14 - 4,156,725 ops/sec      *      * --- Schedulers.currentThread() ---      *      * Run: 10 - 1,692,286 ops/sec      * Run: 11 - 1,765,054 ops/sec      * Run: 12 - 1,763,100 ops/sec      * Run: 13 - 1,770,907 ops/sec      * Run: 14 - 1,732,291 ops/sec	Revert[-2]use of CurrentThreadScheduler for Observable .[sentence: 1,-2] from Use ImmediateScheduler as performance is 4x faster and CurrentThreadScheduler currently offers no benefit (it doesn ���t solve the unsubscribe problem[-2]).[sentence: 1,-2] Performance numbers :*Observable .[sentence: 1,-1] from (Arrays .[sentence: 1,-1] asList (1L ,2L ,3L ,4L ,5L ,6L ,7L ,8L ,9L ,10L ),scheduler );**---Schedulers .[sentence: 1,-1] immediate ()---**Run :0 -1 ,849 ,947 ops /sec *Run :1 -2 ,076 ,067 ops /sec *Run :2 -2 ,114 ,688 ops /sec *Run :3 -2 ,114 ,301 ops /sec *Run :4 -2 ,102 ,543 ops /sec **---Schedulers .[sentence: 1,-1] currentThread ()---**Run :0 -548 ,862 ops /sec *Run :1 -559 ,955 ops /sec *Run :2 -581 ,412 ops /sec *Run :3 -562 ,187 ops /sec *Run :4 -565 ,723 ops /sec *Observable .[sentence: 1,-1] from (Arrays .[sentence: 1,-1] asList (1L ),scheduler );**---Schedulers .[sentence: 1,-1] immediate ()---**Run :10 -4 ,113 ,672 ops /sec *Run :11 -4 ,068 ,351 ops /sec *Run :12 -4 ,070 ,318 ops /sec *Run :13 -4 ,161 ,793 ops /sec *Run :14 -4 ,156 ,725 ops /sec **---Schedulers .[sentence: 1,-1] currentThread ()---**Run :10 -1 ,692 ,286 ops /sec *Run :11 -1 ,765 ,054 ops /sec *Run :12 -1 ,763 ,100 ops /sec *Run :13 -1 ,770 ,907 ops /sec *Run :14 -1 ,732 ,291 ops /sec [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #723 from benjchristensen/deprecation  Deprecate multiple arity ���from���	Merge pull request #723 from benjchristensen /deprecation Deprecate multiple arity ���from ���[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Deprecate multiple arity ���from���  - added @Deprecated annotations where it was only part of the Javadoc - deprecated ���where��� which is a duplicate of `filter` kept from early days matching Rx.Net	Deprecate multiple arity ���from ���-added @Deprecated annotations where it was only part of the Javadoc -deprecated ���where ���which is a duplicate of `filter `kept from early days matching Rx .[sentence: 1,-1] Net [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #717 from Applied-Duality/ScalaPublishFix  Added ConnectableObservable	Merge pull request #717 from Applied -Duality /ScalaPublishFix Added ConnectableObservable [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Added ConnectableObservable Fixed test Added overload for scan Added trivial test for scan	Added ConnectableObservable Fixed test Added overload for scan Added trivial[-2]test for scan [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #715 from y-p/PR_GH623  Add missing type hint to clojure example	Merge pull request #715 from y -p /PR _GH623 Add missing type hint to clojure example [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add missing type hint to clojure example  Following GH623	Add missing type hint to clojure example Following GH623 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #714 from benjchristensen/rxjava-computation-expressions  rxjava-computation-expressions	Merge pull request #714 from benjchristensen /rxjava -computation -expressions rxjava -computation -expressions [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-computation-expressions  The conditional operators are going in this contrib module.  See https://github.com/Netflix/RxJava/issues/683	rxjava -computation -expressions The conditional operators are going in this contrib module .[sentence: 1,-1] See https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /683 [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #712 from benjchristensen/scheduler-memory-leak  Fix Scheduler Memory Leaks	Merge pull request #712 from benjchristensen /scheduler -memory -leak[-2]Fix Scheduler Memory Leaks [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Remove Validation of Ordering  - this test does a flatMap which uses merge which has non-deterministic ordering since the Observable.from can be on a new thread each time	Remove Validation of Ordering -this test does a flatMap which uses merge which has non -deterministic ordering since the Observable .[sentence: 1,-1] from can be on a new thread each time [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove Timeout on Tests	Remove Timeout on Tests [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Increasing Unit Test Timeout for Slow Machines  - Increasing timeout by a lot to handle slow machines such as this: https://netflixoss.ci.cloudbees.com/job/RxJava-pull-requests/629/testReport/junit/rx.schedulers/ExecutorSchedulerTests/recursionUsingFunc2/ - The timeout is only there if a deadlock or memory leak occurs (which is what this PR is fixing) so when everything is healthy it does not timeout	Increasing Unit Test Timeout for Slow Machines -Increasing timeout by a lot to handle slow machines such as this :https ://netflixoss .[sentence: 1,-1] ci .[sentence: 1,-1] cloudbees .[sentence: 1,-1] com /job /RxJava -pull -requests /629 /testReport /junit /rx .[sentence: 1,-1] schedulers /ExecutorSchedulerTests /recursionUsingFunc2 /-The timeout is only there if a deadlock[-2]or memory leak[-2]occurs (which is what this PR is fixing )so when everything is healthy it does not timeout [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Missing Header	Missing Header [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Updated Schedulers Unit Tests  - merged all scheduler tests into the same package - using inheritance so that the same tests are applied to each of the different Scheduler implementations - manual test (too slow for normal execution) can be run to test memory leaks (TestRecursionMemoryUsage.java)	Updated Schedulers Unit Tests -merged all scheduler tests into the same package -using inheritance so that the same tests are applied to each of the different Scheduler implementations -manual test (too slow for normal execution )can be run to test memory leaks (TestRecursionMemoryUsage .[sentence: 1,-1] java )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fix CurrentThreadScheduler Delay Bug  - introduced a bug during refactor, caught it while updating unit tests	Fix CurrentThreadScheduler Delay[-2]Bug[-2]-introduced a bug[-2]during refactor ,caught it while updating unit tests [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	CurrentThreadScheduler Fixes  - outer/inner scheduling so nested order is correct while not deadlocking on certain nested use cases as found in previous testing	CurrentThreadScheduler Fixes -outer /inner scheduling so nested order is correct while not deadlocking on certain nested use cases as found in previous testing [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Small ObserveOn Improvements  - use Long instead of Int so we don���t overflow - migrate from deprecated method	Small ObserveOn Improvements[2]-use Long instead of Int so we don ���t overflow[-2]-migrate from deprecated method [sentence: 2,-2] [result: max + and - of any sentence]
1	-2	CurrentThreadScheduler Memory Leak Fixed  - Current/Immediate/NewThread/Executor Schedulers are passing unit tests - Current/NewThread/Executor Schedulers do not leak memory on the recursion test (Immediate can���t be used for recursion otherwise it stack overflows)	CurrentThreadScheduler Memory Leak[-2]Fixed -Current /Immediate /NewThread /Executor Schedulers are passing unit tests -Current /NewThread /Executor Schedulers do not leak[-2][=0 negation]memory on the recursion test (Immediate can ���t be used for recursion otherwise it stack overflows[-2])[sentence: 1,-2] [result: max + and - of any sentence]
2	-2	ExecutorScheduler Memory Leak Fix  - new InnerExecutorScheduler and childSubscription - improvements to unit tests	ExecutorScheduler Memory Leak[-2]Fix -new InnerExecutorScheduler and childSubscription -improvements[2]to unit tests [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Scheduler Unit Tests  - passing for all but ExecutorScheduler	Scheduler Unit Tests -passing for all but ExecutorScheduler [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fix Memory Leak in NewThreadScheduler Recursion  - the Action0 method did not have a leak - the Func2 method on inner scheduler recursion did have a leak	Fix Memory Leak[-2]in NewThreadScheduler Recursion -the Action0 method did not have a leak[-2]-the Func2 method on inner scheduler recursion did have a leak[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Memory Leak Tests  NewThreadScheduler is working, the other two are not so commented out for now until fixed.	Memory Leak[-2]Tests NewThreadScheduler is working ,the other two are not so commented out for now until fixed .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fix Deprecated Method Call	Fix Deprecated Method Call [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update Scheduler Tests for Recursion and Common Testing	Update Scheduler Tests for Recursion and Common Testing [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #710 from Netflix/docs  Created new wiki page for the operators in the Async class	Merge pull request #710 from Netflix /docs Created new wiki page for the operators in the Async class [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Created new wiki page for the operators in the Async class ...adjusted javadoc links accordingly ...added new sections for previously un-wiki-documented operators in Async ...added links to those in javadocs	Created new wiki page for the operators in the Async class ...[sentence: 1,-1] adjusted javadoc links accordingly ...[sentence: 1,-1] added new sections for previously un -wiki -documented operators in Async ...[sentence: 1,-1] added links to those in javadocs [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #709 from Netflix/docs  Lotsa javadoc improvements	Merge pull request #709 from Netflix /docs Lotsa javadoc improvements[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Lotsa javadoc improvements * diagrams for previously-undiagram'd methods * links to wiki docs where available * standardizing format & nomenclature	Lotsa javadoc improvements[2]*diagrams for previously -undiagram'd methods *links to wiki docs where available *standardizing format &nomenclature [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #708 from benjchristensen/combine-latest  Combine latest fix	Merge pull request #708 from benjchristensen /combine -latest Combine latest fix [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Manual Merge of Pull #616  Manual merge of https://github.com/Netflix/RxJava/pull/616  - remove use of SingleAssignmentSubscription - suppress warnings	Manual Merge of Pull #616 Manual merge of https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /616 -remove use of SingleAssignmentSubscription -suppress[-2]warnings [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge branch 'CombineLatestFix' of github.com:akarnokd/RxJava into combine-latest	Merge branch 'CombineLatestFix 'of github .[sentence: 1,-1] com :akarnokd /RxJava into combine -latest [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #707 from benjchristensen/rxjava-async-util-module  Merge of rxjava-async-util	Merge pull request #707 from benjchristensen /rxjava -async -util -module Merge of rxjava -async -util [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Manual merge of https://github.com/akarnokd/RxJava/commit/eee312a6ac41582e4efe3daac3dfcd0385359d25  - To clean up the pull request I cherry picked the single commit with actual changes to avoid the merges that affected lots of other files. - The original commit also included conflicting and unrelated changes to Observable and ObservableTests that I skippedManual merge of https://github.com/akarnokd/RxJava/commit/eee312a6ac41582e4efe3daac3dfcd0385359d25	Manual merge of https ://github .[sentence: 1,-1] com /akarnokd /RxJava /commit /eee312a6ac41582e4efe3daac3dfcd0385359d25 [+0.6 spelling mood emphasis]-To clean up the pull request I cherry picked the single commit with actual changes to avoid[-2]the merges that affected lots of other files .[sentence: 2,-2] -The original commit also included conflicting[-2]and unrelated changes to Observable and ObservableTests that I skippedManual merge of https ://github .[sentence: 1,-2] com /akarnokd /RxJava /commit /eee312a6ac41582e4efe3daac3dfcd0385359d25 [+0.6 spelling mood emphasis][sentence: 2,-1] [result: max + and - of any sentence]
1	-1	New contrib module: rxjava-async-util  Home for async utility functions with juc.Future, Actions, Functions etc that don���t need to be in rxjava-core.  As per discussions at:  - https://github.com/Netflix/RxJava/pull/646#issuecomment-31147005 - https://github.com/Netflix/RxJava/pull/645#issuecomment-31146492 - https://github.com/Netflix/RxJava/pull/622#issuecomment-31144128	New contrib module :rxjava -async -util Home for async utility functions with juc .[sentence: 1,-1] Future ,Actions ,Functions etc that don ���t need to be in rxjava -core .[sentence: 1,-1] As per discussions at :-https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /646 #issuecomment -31147005 -https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /645 #issuecomment -31146492 -https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /622 #issuecomment -31144128 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #705 from Netflix/docs  adjust javadocs for new sumFoo()/averageFoo() method names	Merge pull request #705 from Netflix /docs adjust javadocs for new sumFoo ()/averageFoo ()method names [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	adjust javadocs for new sumFoo()/averageFoo() method names	adjust javadocs for new sumFoo ()/averageFoo ()method names [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #700 from Netflix/docs  various javadoc improvements	Merge pull request #700 from Netflix /docs various javadoc improvements[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #703 from benjchristensen/small-tweaks  Small Tweaks	Merge pull request #703 from benjchristensen /small -tweaks Small Tweaks [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Standardize Naming of average/sum methods  See https://github.com/Netflix/RxJava/pull/698#issuecomment-31282416	Standardize Naming of average /sum methods See https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /698 #issuecomment -31282416 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove Extra Synchronization  The use of flatMap/mergeMap already synchronizes.	Remove Extra Synchronization The use of flatMap /mergeMap already synchronizes .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Mark as Deprecated	Mark as Deprecated [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #701 from benjchristensen/collect  Collect Operator	Merge pull request #701 from benjchristensen /collect Collect Operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Collect Operator	Collect Operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	adding diagram to repeat() javadocs	adding diagram to repeat ()javadocs [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge remote-tracking branch 'origin/master' into docs	Merge remote -tracking branch 'origin /master 'into docs [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Adding diagrams, improving javadocs for sumFoo/averageFoo operators.	Adding diagrams ,improving[2]javadocs for sumFoo /averageFoo operators .[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #699 from benjchristensen/repeat  Repeat Operator	Merge pull request #699 from benjchristensen /repeat Repeat Operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Repeat Operator  - merge and slight modification of https://github.com/Netflix/RxJava/pull/518	Repeat Operator -merge and slight modification of https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /518 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge remote-tracking branch 'origin/master' into docs	Merge remote -tracking branch 'origin /master 'into docs [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	javadoc improvements: * diagrams for skip(t), single(), take(t), skipLast(t) * minor corrections, reformatting of javadoc comments	javadoc improvements[2]:*diagrams for skip (t ),single (),take (t ),skipLast (t )*minor corrections ,reformatting of javadoc comments [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #698 from benjchristensen/pull-657-merge  Merge of Pull 657: Average and Sum	Merge pull request #698 from benjchristensen /pull -657 -merge Merge of Pull 657 :Average and Sum [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Rename to ReduceTest	Rename to ReduceTest [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Remove newly added aggregate methods  - avoiding methods with `index` - resultSelector overload is same as `reduce(seed, accumulator).map(resultSelector)`	Remove newly added aggregate methods -avoiding[-2]methods with `index `-resultSelector overload is same as `reduce (seed ,accumulator ).[sentence: 1,-2] map (resultSelector )`[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'AggregatorsWithSelector' of github.com:akarnokd/RxJava into pull-657-merge	Merge branch 'AggregatorsWithSelector 'of github .[sentence: 1,-1] com :akarnokd /RxJava into pull -657 -merge [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #697 from benjchristensen/skip-take-time-merge  Manual Merge of Pull #667	Merge pull request #697 from benjchristensen /skip -take -time -merge Manual Merge of Pull #667 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/operators/OperationTakeLast.java	rxjava -core /src /main /java /rx /operators /OperationTakeLast .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove ObserverBase Import  Was unused and causing build break once that class was removed.	Remove ObserverBase Import Was unused and causing build break once that class was removed .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #664 from akarnokd/OperationAsObservable  Operation AsObservable	Merge pull request #664 from akarnokd /OperationAsObservable Operation AsObservable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #689 from akarnokd/ObserverBaseLess  Removed ObserverBase	Merge pull request #689 from akarnokd /ObserverBaseLess Removed ObserverBase [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #694 from Netflix/docs  Change page from "Mathematical Operators" to "Mathematical and Aggregate Operators"	Merge pull request #694 from Netflix /docs Change page from 'Mathematical Operators 'to 'Mathematical and Aggregate Operators '[sentence: 1,-1] [result: max + and - of any sentence]
1	-3	correcting typo causing build failure	correcting typo causing build failure[-3][sentence: 1,-3] [result: max + and - of any sentence]
2	-2	javadoc improvements * add "see also" notes about hidden Rx.NET "asyncFoo" methods to Observable.java * reformat BlockingObservable javadoc comments to Oracle formatting standards * add links to RxJava Wiki & MSDN web pages as "see also" links in BlockingObservable javadocs	javadoc improvements[2]*add 'see also 'notes about hidden Rx .[sentence: 2,-1] NET 'asyncFoo 'methods to Observable .[sentence: 1,-1] java *reformat BlockingObservable[-2]javadoc comments to Oracle formatting standards *add links to RxJava Wiki &MSDN web pages as 'see also 'links in BlockingObservable[-2]javadocs [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Change in wiki page from "Mathematical Operators" to "Mathematical and Aggregate Operators" move toList, reduce, concat, toSortedList, toMap, and toMultiMap to that page deprecate aggregate in favor of reduce [should I move takeLast, last, and takeLastBuffer to the Aggregate operators page? they don't operate on the aggregate, exactly, but they do wait until the source completes before emitting anything]	Change in wiki page from 'Mathematical Operators 'to 'Mathematical and Aggregate Operators 'move toList ,reduce ,concat ,toSortedList ,toMap ,and toMultiMap to that page deprecate aggregate in favor[2]of reduce [should I move takeLast ,last ,and takeLastBuffer to the Aggregate operators page ?[sentence: 2,-1] they don't operate on the aggregate ,exactly ,but they do wait until the source[-2]completes before emitting anything ][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #693 from MarioAriasC/master  Kotlin M6.2	Merge pull request #693 from MarioAriasC /master Kotlin M6 .2 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Kotlin M6.2	Kotlin M6 .2 [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #691 from Netflix/docs  javadoc improvements:	Merge pull request #691 from Netflix /docs javadoc improvements[2]:[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	javadoc improvements: * diagrams for switchLatest, mergeMap, concatMap, switchMap, mapWithIndex, doOnNext * change text to note deprecation of aggregate * standardized formatting * force image size in ReplaySubject javadoc	javadoc improvements[2]:*diagrams for switchLatest ,mergeMap ,concatMap ,switchMap ,mapWithIndex ,doOnNext *change text to note deprecation of aggregate *standardized formatting *force[-2]image size in ReplaySubject javadoc [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #690 from Applied-Duality/benChanges  Fixed Scala bindings	Merge pull request #690 from Applied -Duality /benChanges Fixed Scala bindings [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed Scala bindings	Fixed Scala bindings [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Removed ObserverBase	Removed ObserverBase [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #688 from benjchristensen/SafeObserver-errorHandling  Fix SafeObserver handling of onComplete errors	Merge pull request #688 from benjchristensen /SafeObserver[2]-errorHandling[-2]Fix SafeObserver[2]handling of onComplete errors[-2][sentence: 2,-2] [result: max + and - of any sentence]
2	-2	Fix SafeObserver handling of onComplete errors  Fixes https://github.com/Netflix/RxJava/issues/630	Fix SafeObserver[2]handling of onComplete errors[-2]Fixes https ://github .[sentence: 2,-2] com /Netflix /RxJava /issues /630 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #670 from benjchristensen/api-tweaks  API Design Tweaks	Merge pull request #670 from benjchristensen /api -tweaks API Design Tweaks [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #669 from Netflix/docs  Javadoc improvements:	Merge pull request #669 from Netflix /docs Javadoc improvements[2]:[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Deprecate aggregate in favor of reduce  We have had aggregate from Rx.Net for a while but long ago migrated to reduce as the primary. Time to deprecate it.	Deprecate aggregate in favor[2]of reduce We have had aggregate from Rx .[sentence: 2,-1] Net for a while but long ago migrated to reduce as the primary .[sentence: 1,-1] Time to deprecate it .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Deprecate manWithIndex  If we leave mapWithIndex then we should have ���withIndex��� on many other operators. Instead of this, an Observable should just be zipped with an infinite stream of numbers and the zip function provides the index. This keeps the API surface area smaller and provides the desired behavior on all operators.	Deprecate manWithIndex If we leave mapWithIndex then we should have ���withIndex ���on many other operators .[sentence: 1,-1] Instead of this ,an Observable should just be zipped with an infinite stream of numbers and the zip function provides the index .[sentence: 1,-1] This keeps the API surface area smaller and provides the desired behavior on all operators .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	MergeMap, ConcatMap, SwitchMap  - flattening map implementations that better fit mental models and use cases - keeping flatMap as alias to mergeMap since flatMap is common ��� (though flatMap still confuses people) - deprecate mapMany as alias to flatMap and mergeMap	MergeMap ,ConcatMap ,SwitchMap -flattening map implementations that better fit mental models and use cases -keeping flatMap as alias to mergeMap since flatMap is common ���(though flatMap still confuses[-2]people )-deprecate mapMany as alias to flatMap and mergeMap [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Update Tests for doOn* Changes	Update Tests for doOn *Changes [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix TakeLast after removing SingleAssignmentSubscription  - SingleAssignmentSubscription was removed in one merge, TakeLast modified in another merge.	Fix TakeLast after removing SingleAssignmentSubscription -SingleAssignmentSubscription was removed in one merge ,TakeLast modified in another merge .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Javadoc improvements: * diagrams for switchCase, doWhile, whileDo, ifThen, delaySubscription, single, singleOrDefault, takeFirst, takeLast (and variant forms of these) * standardizing javadoc comment formatting * standardizing nomenclature	Javadoc improvements[2]:*diagrams for switchCase ,doWhile ,whileDo ,ifThen ,delaySubscription ,single ,singleOrDefault ,takeFirst ,takeLast (and variant forms of these )*standardizing javadoc comment formatting *standardizing nomenclature [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Operators Skip, SkipLast, Take with time	Operators Skip ,SkipLast ,Take with time [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	doOnNext, doOnCompleted, doOnError, doOnEach	doOnNext ,doOnCompleted ,doOnError ,doOnEach [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Alias from switchOnNext to switchLatest to match RxJS  - keeping onNext to be locally consistent with doOnNext	Alias from switchOnNext to switchLatest to match RxJS -keeping onNext to be locally consistent with doOnNext [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #659 from akarnokd/SubjectsFixAdditional  Missing fixes from the subject rewrite	Merge pull request #659 from akarnokd /SubjectsFixAdditional Missing fixes from the subject rewrite [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Operation AsObservable	Operation AsObservable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #638 from akarnokd/OperationTakeLastwBufferDeferSubscr  Operators DelaySubscription, TakeLast w/ time, TakeLastBuffer	Merge pull request #638 from akarnokd /OperationTakeLastwBufferDeferSubscr Operators DelaySubscription ,TakeLast w /time ,TakeLastBuffer [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #635 from akarnokd/OpCaseIfDoWhileWhile  Operators: switchCase (Case), ifThen (If), doWhile (DoWhile), WhileDo (W...	Merge pull request #635 from akarnokd /OpCaseIfDoWhileWhile Operators :switchCase (Case ),ifThen (If ),doWhile (DoWhile ),WhileDo (W ...[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #633 from zsxwing/fix-issue-595  Fixed issue #595 about null in toList operator	Merge pull request #633 from zsxwing /fix -issue -595 Fixed issue #595 about null in toList operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #626 from akarnokd/OperationLatestAndFixes  Added: BO.Latest, fixed: BO.next, BO.mostRecent, BO.toIterable	Merge pull request #626 from akarnokd /OperationLatestAndFixes Added :BO .[sentence: 1,-1] Latest ,fixed :BO .[sentence: 1,-1] next ,BO .[sentence: 1,-1] mostRecent ,BO .[sentence: 1,-1] toIterable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #621 from Applied-Duality/CleanFixes  SerialSubscription & From	Merge pull request #621 from Applied -Duality /CleanFixes SerialSubscription &From [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #520 from zsxwing/first  Fixed the blocking/non-blocking first	Merge pull request #520 from zsxwing /first Fixed the blocking[-2]/non -blocking[-2]first [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #661 from benjchristensen/subscriptions  Subscriptions Rewrite	Merge pull request #661 from benjchristensen /subscriptions Subscriptions Rewrite [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Naming and Class Conventions  - make concrete implementations final as extending them is dangerous (use composition and implement Subscription instead) - deprecated long get/setSubscription methods in favor of short verbs (add/get/set/clear/remove) - updated unit tests with changes	Naming and Class Conventions -make concrete implementations final as extending them is dangerous[-2](use composition and implement Subscription instead )-deprecated long get /setSubscription methods in favor[2]of short verbs (add /get /set /clear /remove )-updated unit tests with changes [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Refactor SerialSubscription  - simplified state machine	Refactor SerialSubscription -simplified state machine [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Refactor MultipleAssignment  - simplified state machine	Refactor MultipleAssignment -simplified state machine [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Refactor CompositeSubscription  - simplified state machine - removed busy spin state	Refactor CompositeSubscription -simplified state machine -removed busy spin state [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Refactor RefCountSubscription  - simplified logic - remove unnecessary busy spins and state changes	Refactor RefCountSubscription -simplified logic -remove unnecessary[-2]busy spins and state changes [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Missing fixes from the subject rewrite.	Missing fixes from the subject rewrite .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Code Reformatting	Code Reformatting [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Remove Unnecessary Subscription  - be explicit for error case in JoinObserver	Remove Unnecessary[-2]Subscription -be explicit for error[-2]case in JoinObserver [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	BooleanSubscription: Add Action Support	BooleanSubscription :Add Action Support[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #651 from benjchristensen/subjects-fixes  Subjects Refactor - Non-Blocking, Common Abstraction, Performance	Merge pull request #651 from benjchristensen /subjects -fixes Subjects Refactor -Non -Blocking[-2],Common Abstraction ,Performance [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Reverting to Previous SafeObserver  - Performance difference between changes are trivial at best so preferring to keep code that is easier to understand.  Test numbers:  ``` Old SafeObserver  Run: 0 - 3,751,704 ops/sec Run: 1 - 34,619,086 ops/sec Run: 2 - 30,483,715 ops/sec Run: 3 - 27,746,023 ops/sec Run: 4 - 54,078,608 ops/sec Run: 5 - 55,107,045 ops/sec Run: 6 - 53,935,396 ops/sec Run: 7 - 54,947,168 ops/sec Run: 8 - 57,024,246 ops/sec Run: 9 - 55,059,712 ops/sec Run: 10 - 56,904,832 ops/sec Run: 11 - 55,919,967 ops/sec Run: 12 - 55,076,087 ops/sec Run: 13 - 55,066,685 ops/sec Run: 14 - 55,025,476 ops/sec  Run: 0 - 3,839,266 ops/sec Run: 1 - 34,115,371 ops/sec Run: 2 - 29,675,175 ops/sec Run: 3 - 28,677,042 ops/sec Run: 4 - 55,405,652 ops/sec Run: 5 - 55,260,220 ops/sec Run: 6 - 55,147,464 ops/sec Run: 7 - 54,261,126 ops/sec Run: 8 - 53,941,505 ops/sec Run: 9 - 54,324,501 ops/sec Run: 10 - 55,125,576 ops/sec Run: 11 - 56,102,870 ops/sec Run: 12 - 55,061,834 ops/sec Run: 13 - 55,476,039 ops/sec Run: 14 - 55,073,054 ops/sec  Run: 0 - 3,704,536 ops/sec Run: 1 - 34,694,514 ops/sec Run: 2 - 30,778,227 ops/sec Run: 3 - 28,441,329 ops/sec Run: 4 - 54,116,946 ops/sec Run: 5 - 55,204,699 ops/sec Run: 6 - 54,859,450 ops/sec Run: 7 - 55,214,757 ops/sec Run: 8 - 55,005,500 ops/sec Run: 9 - 55,339,118 ops/sec Run: 10 - 55,501,903 ops/sec Run: 11 - 55,074,570 ops/sec Run: 12 - 55,102,187 ops/sec Run: 13 - 55,756,278 ops/sec Run: 14 - 54,768,411 ops/sec  New SafeObserver  Run: 0 - 3,983,308 ops/sec Run: 1 - 34,767,250 ops/sec Run: 2 - 30,806,957 ops/sec Run: 3 - 29,855,113 ops/sec Run: 4 - 57,451,453 ops/sec Run: 5 - 55,515,152 ops/sec Run: 6 - 56,086,822 ops/sec Run: 7 - 56,295,529 ops/sec Run: 8 - 55,371,905 ops/sec Run: 9 - 55,816,653 ops/sec Run: 10 - 55,793,296 ops/sec Run: 11 - 56,011,426 ops/sec Run: 12 - 55,568,521 ops/sec Run: 13 - 55,396,137 ops/sec Run: 14 - 56,353,267 ops/sec  Run: 0 - 3,933,367 ops/sec Run: 1 - 34,498,342 ops/sec Run: 2 - 30,233,584 ops/sec Run: 3 - 29,179,785 ops/sec Run: 4 - 55,761,874 ops/sec Run: 5 - 55,948,124 ops/sec Run: 6 - 55,264,801 ops/sec Run: 7 - 56,267,020 ops/sec Run: 8 - 57,474,567 ops/sec Run: 9 - 55,879,657 ops/sec Run: 10 - 55,998,880 ops/sec Run: 11 - 56,044,073 ops/sec Run: 12 - 55,498,515 ops/sec Run: 13 - 56,204,720 ops/sec Run: 14 - 55,845,954 ops/sec  Run: 0 - 3,981,914 ops/sec Run: 1 - 34,160,822 ops/sec Run: 2 - 30,873,631 ops/sec Run: 3 - 29,135,067 ops/sec Run: 4 - 55,845,330 ops/sec Run: 5 - 55,101,883 ops/sec Run: 6 - 55,724,276 ops/sec Run: 7 - 56,085,564 ops/sec Run: 8 - 55,639,942 ops/sec Run: 9 - 56,464,955 ops/sec Run: 10 - 55,453,275 ops/sec Run: 11 - 56,115,463 ops/sec Run: 12 - 56,509,945 ops/sec Run: 13 - 53,863,348 ops/sec Run: 14 - 55,866,858 ops/sec ```	Reverting[-2]to Previous SafeObserver[2]-Performance difference between changes are trivial[-2]at best[2]so preferring to keep code that is easier to understand .[sentence: 2,-2] Test numbers :```Old SafeObserver[2]Run :0 -3 ,751 ,704 ops /sec Run :1 -34 ,619 ,086 ops /sec Run :2 -30 ,483 ,715 ops /sec Run :3 -27 ,746 ,023 ops /sec Run :4 -54 ,078 ,608 ops /sec Run :5 -55 ,107 ,045 ops /sec Run :6 -53 ,935 ,396 ops /sec Run :7 -54 ,947 ,168 ops /sec Run :8 -57 ,024 ,246 ops /sec Run :9 -55 ,059 ,712 ops /sec Run :10 -56 ,904 ,832 ops /sec Run :11 -55 ,919 ,967 ops /sec Run :12 -55 ,076 ,087 ops /sec Run :13 -55 ,066 ,685 ops /sec Run :14 -55 ,025 ,476 ops /sec Run :0 -3 ,839 ,266 ops /sec Run :1 -34 ,115 ,371 ops /sec Run :2 -29 ,675 ,175 ops /sec Run :3 -28 ,677 ,042 ops /sec Run :4 -55 ,405 ,652 ops /sec Run :5 -55 ,260 ,220 ops /sec Run :6 -55 ,147 ,464 ops /sec Run :7 -54 ,261 ,126 ops /sec Run :8 -53 ,941 ,505 ops /sec Run :9 -54 ,324 ,501 ops /sec Run :10 -55 ,125 ,576 ops /sec Run :11 -56 ,102 ,870 ops /sec Run :12 -55 ,061 ,834 ops /sec Run :13 -55 ,476 ,039 ops /sec Run :14 -55 ,073 ,054 ops /sec Run :0 -3 ,704 ,536 ops /sec Run :1 -34 ,694 ,514 ops /sec Run :2 -30 ,778 ,227 ops /sec Run :3 -28 ,441 ,329 ops /sec Run :4 -54 ,116 ,946 ops /sec Run :5 -55 ,204 ,699 ops /sec Run :6 -54 ,859 ,450 ops /sec Run :7 -55 ,214 ,757 ops /sec Run :8 -55 ,005 ,500 ops /sec Run :9 -55 ,339 ,118 ops /sec Run :10 -55 ,501 ,903 ops /sec Run :11 -55 ,074 ,570 ops /sec Run :12 -55 ,102 ,187 ops /sec Run :13 -55 ,756 ,278 ops /sec Run :14 -54 ,768 ,411 ops /sec New SafeObserver[2]Run :0 -3 ,983 ,308 ops /sec Run :1 -34 ,767 ,250 ops /sec Run :2 -30 ,806 ,957 ops /sec Run :3 -29 ,855 ,113 ops /sec Run :4 -57 ,451 ,453 ops /sec Run :5 -55 ,515 ,152 ops /sec Run :6 -56 ,086 ,822 ops /sec Run :7 -56 ,295 ,529 ops /sec Run :8 -55 ,371 ,905 ops /sec Run :9 -55 ,816 ,653 ops /sec Run :10 -55 ,793 ,296 ops /sec Run :11 -56 ,011 ,426 ops /sec Run :12 -55 ,568 ,521 ops /sec Run :13 -55 ,396 ,137 ops /sec Run :14 -56 ,353 ,267 ops /sec Run :0 -3 ,933 ,367 ops /sec Run :1 -34 ,498 ,342 ops /sec Run :2 -30 ,233 ,584 ops /sec Run :3 -29 ,179 ,785 ops /sec Run :4 -55 ,761 ,874 ops /sec Run :5 -55 ,948 ,124 ops /sec Run :6 -55 ,264 ,801 ops /sec Run :7 -56 ,267 ,020 ops /sec Run :8 -57 ,474 ,567 ops /sec Run :9 -55 ,879 ,657 ops /sec Run :10 -55 ,998 ,880 ops /sec Run :11 -56 ,044 ,073 ops /sec Run :12 -55 ,498 ,515 ops /sec Run :13 -56 ,204 ,720 ops /sec Run :14 -55 ,845 ,954 ops /sec Run :0 -3 ,981 ,914 ops /sec Run :1 -34 ,160 ,822 ops /sec Run :2 -30 ,873 ,631 ops /sec Run :3 -29 ,135 ,067 ops /sec Run :4 -55 ,845 ,330 ops /sec Run :5 -55 ,101 ,883 ops /sec Run :6 -55 ,724 ,276 ops /sec Run :7 -56 ,085 ,564 ops /sec Run :8 -55 ,639 ,942 ops /sec Run :9 -56 ,464 ,955 ops /sec Run :10 -55 ,453 ,275 ops /sec Run :11 -56 ,115 ,463 ops /sec Run :12 -56 ,509 ,945 ops /sec Run :13 -53 ,863 ,348 ops /sec Run :14 -55 ,866 ,858 ops /sec ```[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Comments on Performance Increase	Comments on Performance Increase [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Operations Aggregate, Average and Sum with selector	Operations Aggregate ,Average and Sum with selector [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added create with initial capacity, minor fix	Added create with initial capacity ,minor fix [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added create with initial capacity.	Added create with initial capacity .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Performance improvement suggestions.	Performance improvement[2]suggestions .[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Refactor for Performance  - previous commit got non-blocking working but perf tests showed it slow - this commit retains non-blocking but surpasses master branch performance  Master branch: 11,947,459 ops/sec This commit: 16,151,174 ops/sec	Refactor for Performance -previous commit got non -blocking[-2]working but perf tests showed it slow -this commit retains non -blocking[-2]but surpasses master branch performance Master branch :11 ,947 ,459 ops /sec This commit :16 ,151 ,174 ops /sec [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	License Header and Separate out Perf Tests	License Header and Separate out Perf Tests [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Subject Refactor  - Common logic composed inside SubjectSubscriptionManager - ReplaySubject does not block while replaying to new subscribers - Added unit tests and fixed behavior while reviewing with @headinthebox compared to Rx.Net - Uses mostly non-blocking approach (I believe it���s all correct, unit and long running tests have been used to prove it. The tests found concurrency problems during development and became stable once I got the design correct. As with all concurrent code I may be missing something.)	Subject Refactor -Common logic composed inside SubjectSubscriptionManager -ReplaySubject does not block[-2][=0 negation]while replaying to new subscribers -Added unit tests and fixed behavior while reviewing with @headinthebox compared to Rx .[sentence: 1,-1] Net -Uses mostly non -blocking[-2]approach (I believe it ���s all correct ,unit and long running tests have been used to prove it .[sentence: 1,-2] The tests found concurrency problems[-2]during development and became stable[-2]once I got the design correct .[sentence: 1,-2] As with all concurrent code I may be missing something .)[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Remove volatile	Remove volatile[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fix the unit tests in groovy and kotlin	Fix the unit tests in groovy and kotlin [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Implement the blocking/non-blocking single, singleOrDefault, first, firstOrDefault, last, lastOrDefault	Implement the blocking[-2]/non -blocking[-2]single ,singleOrDefault ,first ,firstOrDefault ,last ,lastOrDefault [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Mark takeFirst deprecated	Mark takeFirst deprecated [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add MSDN links	Add MSDN links [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed the blocking/non-blocking first	Fixed the blocking[-2]/non -blocking[-2]first [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #639 from Netflix/docs  Moved the descriptions of some operators to a new wiki page.	Merge pull request #639 from Netflix /docs Moved the descriptions of some operators to a new wiki page .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Moved the descriptions of some operators to a new "Conditional and Boolean Operators" wiki page.	Moved the descriptions of some operators to a new 'Conditional and Boolean Operators 'wiki page .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Operators DelaySubscription, TakeLast w/ time, TakeLastBuffer	Operators DelaySubscription ,TakeLast w /time ,TakeLastBuffer [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Operators: switchCase (Case), ifThen (If), doWhile (DoWhile), WhileDo (While)	Operators :switchCase (Case ),ifThen (If ),doWhile (DoWhile ),WhileDo (While )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed issue #595 about null in toList operator	Fixed issue #595 about null in toList operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #631 from benjchristensen/NewThreadScheduler-Daemon  Make NewThreadScheduler create Daemon threads	Merge pull request #631 from benjchristensen /NewThreadScheduler -Daemon Make NewThreadScheduler create Daemon threads [sentence: 1,-1] [result: max + and - of any sentence]
1	-3	Fix non-deterministic unit test  - there is no guarantee for how many threads Interval will use so useless to assert anything on it	Fix non -deterministic unit test -there is no guarantee for how many threads Interval will use so useless[-3]to assert anything on it [sentence: 1,-3] [result: max + and - of any sentence]
2	-1	Make NewThreadScheduler create Daemon threads  This matches the behavior of Schedulers.COMPUTATION_EXECUTOR and Schedulers.IO_EXECUTOR.  See https://groups.google.com/forum/#!topic/rxjava/Qe1qi0aHtnE and https://github.com/Netflix/RxJava/issues/431#issuecomment-30767610	Make NewThreadScheduler create Daemon threads This matches the behavior of Schedulers .[sentence: 1,-1] COMPUTATION _EXECUTOR and Schedulers .[sentence: 1,-1] IO _EXECUTOR .[sentence: 1,-1] See https ://groups .[sentence: 1,-1] google .[sentence: 1,-1] com /forum /#![+0.6 punctuation mood emphasis][sentence: 2,-1] topic /rxjava /Qe1qi0aHtnE and https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /431 #issuecomment -30767610 [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Increased time delay in test.	Increased time delay[-2]in test .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fixes based on @zsxwing's suggestions.	Fixes based on @zsxwing's suggestions .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #628 from mattrjacobs/fix-merge-delay-error  Properly wired up SynchronizedObserver within MergeDelayError operator	Merge pull request #628 from mattrjacobs /fix -merge -delay[-2]-error[-2]Properly wired up SynchronizedObserver within MergeDelayError operator [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Properly wired up SynchronizedObserver within MergeDelayError operator	Properly wired up SynchronizedObserver within MergeDelayError operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added: BO.Latest, fixed: BO.next, BO.mostRecent, BO.toIterable	Added :BO .[sentence: 1,-1] Latest ,fixed :BO .[sentence: 1,-1] next ,BO .[sentence: 1,-1] mostRecent ,BO .[sentence: 1,-1] toIterable [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #619 from benjchristensen/executorSchedulerConcurrencyTests  UnitTest to assert thread safety of Executor Scheduler	Merge pull request #619 from benjchristensen /executorSchedulerConcurrencyTests UnitTest to assert thread safety[2]of Executor Scheduler [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Observable.from with scheduler Fixed blocking test in ObservableWindowTest	Observable .[sentence: 1,-1] from with scheduler Fixed blocking[-2]test in ObservableWindowTest [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Observable.from with scheduler	Observable .[sentence: 1,-1] from with scheduler [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Removed local SerialSubscription isUnsubscribed implementation since underlying subscription now implements it.	Removed local SerialSubscription isUnsubscribed implementation since underlying subscription now implements it .[sentence: 1,-1] [result: max + and - of any sentence]
2	-2	UnitTest to assert thread safety of Executor Scheduler  - The Executor thread-pools hop threads when using observeOn so this tests that it is thread-safe when doing so. - The test performs non-thread-safe mutations which should fail (or at least be non-deterministic) if memory visibility problems or concurrency is occurring.	UnitTest to assert thread safety[2]of Executor Scheduler -The Executor thread -pools hop threads when using observeOn so this tests that it is thread -safe[2]when doing so .[sentence: 2,-1] -The test performs non -thread -safe[2]mutations which should fail[-3][--1 booster word](or at least be non -deterministic )if memory visibility problems[-2]or concurrency is occurring .[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #602 from benjchristensen/observeOn  ObserveOn Fixes	Merge pull request #602 from benjchristensen /observeOn ObserveOn Fixes [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	ObserveOn Fixes  - fix subscription leak (Composite+MultipleAssignment instead of just Composite) - add unit tests	ObserveOn Fixes -fix subscription leak[-2](Composite +MultipleAssignment instead of just Composite )-add unit tests [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #617 from Netflix/docs  replay() and timer() javadocs: diagrams & wiki links	Merge pull request #617 from Netflix /docs replay ()and timer ()javadocs :diagrams &wiki links [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	replay() and timer() javadocs: diagrams & wiki links	replay ()and timer ()javadocs :diagrams &wiki links [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Moved onError, onCompleted and cancel.unsubscribed outside the lock	Moved onError ,onCompleted and cancel[-2].[sentence: 1,-2] unsubscribed outside the lock [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	CombineLatest fix	CombineLatest fix [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #615 from abersnaze/issue614  Copied the code from OperationMerge to fix synchronization	Merge pull request #615 from abersnaze /issue614 Copied the code from OperationMerge to fix synchronization [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Copied the code from OperationMerge	Copied the code from OperationMerge [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #612 from akarnokd/ReplayAdditionalOps  Replay additional overloads	Merge pull request #612 from akarnokd /ReplayAdditionalOps Replay additional overloads [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #609 from akarnokd/OperationTimer3  Operation Timer 3.0	Merge pull request #609 from akarnokd /OperationTimer3 Operation Timer 3 .0 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Operation: Replay additional overloads	Operation :Replay additional overloads [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	CustomReplaySubject to support various replay() operators.	CustomReplaySubject to support[2]various replay ()operators .[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Operation Timer 3.0	Operation Timer 3 .0 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #604 from akarnokd/StringObservableOps1  Added op:join to concat objects with separator between elements.	Merge pull request #604 from akarnokd /StringObservableOps1 Added op :join to concat objects with separator between elements .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #607 from Netflix/docs  Javadoc improvements:	Merge pull request #607 from Netflix /docs Javadoc improvements[2]:[sentence: 2,-1] [result: max + and - of any sentence]
2	-2	Javadoc improvements: * consistent nomenclature * consistent/standard javadoc formatting * more-precise descriptions * timer() marble digram & wiki link * delay() marble diagram & wiki link	Javadoc improvements[2]:*consistent nomenclature *consistent /standard javadoc formatting *more -precise descriptions *timer ()marble digram &wiki link *delay[-2]()marble diagram &wiki link [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Added op:join to concat objects with separator between elements.	Added op :join to concat objects with separator between elements .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #594 from zsxwing/start  Implement the 'Start' operator	Merge pull request #594 from zsxwing /start Implement the 'Start 'operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove the Action0 overloads	Remove the Action0 overloads [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #600 from benjchristensen/replay-subject  BugFix: Replay Subject	Merge pull request #600 from benjchristensen /replay -subject BugFix :Replay Subject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix #544 ReplaySubject emits items received after onError	Fix #544 ReplaySubject emits items received after onError [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	ReplaySubject UnitTests  Shows bug handling terminal state.	ReplaySubject UnitTests Shows bug[-2]handling terminal state .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #599 from benjchristensen/rx.schedulers  Refactor rx.concurrency to rx.schedulers	Merge pull request #599 from benjchristensen /rx .[sentence: 1,-1] schedulers Refactor rx .[sentence: 1,-1] concurrency to rx .[sentence: 1,-1] schedulers [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add Missing License Headers	Add Missing License Headers [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Migrate code to use rx.schedulers instead of rx.concurrency  Unit tests passed before and after (did change in multiple steps to assert unit test pass against rx.concurrency before migrating to rx.schedulers).	Migrate code to use rx .[sentence: 1,-1] schedulers instead of rx .[sentence: 1,-1] concurrency Unit tests passed before and after (did change in multiple steps to assert unit test pass against[-2]rx .[sentence: 1,-2] concurrency before migrating to rx .[sentence: 1,-1] schedulers ).[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rx.concurrent -> rx.schedulers for Android and Swing modules	rx .[sentence: 1,-1] concurrent ->rx .[sentence: 1,-1] schedulers for Android and Swing modules [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Backwards compatible deprecated rx.concurrency classes  These will exist for a few releases to allow people to migrate from rx.concurrency to rx.schedulers.	Backwards compatible deprecated rx .[sentence: 1,-1] concurrency classes These will exist for a few releases to allow people to migrate from rx .[sentence: 1,-1] concurrency to rx .[sentence: 1,-1] schedulers .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Organize Imports - Migrate to rx.schedulers for src/main	Organize Imports -Migrate to rx .[sentence: 1,-1] schedulers for src /main [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Migrate Schedulers to rx.schedulers package	Migrate Schedulers to rx .[sentence: 1,-1] schedulers package [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #593 from akarnokd/LockFreeSubscriptions  Lock-free subscriptions	Merge pull request #593 from akarnokd /LockFreeSubscriptions Lock -free subscriptions [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #576 from samuelgruetter/delay2  Timer and Delay	Merge pull request #576 from samuelgruetter /delay2 Timer and Delay[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #597 from Netflix/docs  Javadoc updates (longCount, sample(sampler))	Merge pull request #597 from Netflix /docs Javadoc updates (longCount ,sample (sampler ))[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #596 from akarnokd/BufferFix1  Fix for buffer not stopping when unsubscribed.	Merge pull request #596 from akarnokd /BufferFix1 Fix for buffer not stopping when unsubscribed .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add more unit tests	Add more unit tests [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #598 from Applied-Duality/RebaseLatestChanges  New Scala Bindings	Merge pull request #598 from Applied -Duality /RebaseLatestChanges New Scala Bindings [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Release notes edits.	Release notes edits .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Release notes edits.	Release notes edits .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Renamed apply(items: T*) to items. Fixed all tests.	Renamed apply (items :T to items .[sentence: 1,-1] Fixed all tests .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added accept with Observer to match RxJava	Added accept with Observer to match RxJava [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Empty subscribe()	Empty subscribe ()[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	* corrects grammar of sequenceEqual() javadoc * updates link to wiki description of count() * adds sample(sampler) marble diagram/wiki link * adds longCount() marble diagram/wiki link	*corrects grammar of sequenceEqual ()javadoc *updates link to wiki description of count ()*adds sample (sampler )marble diagram /wiki link *adds longCount ()marble diagram /wiki link [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' of https://github.com/Netflix/RxJava into docs	Merge branch 'master 'of https ://github .[sentence: 1,-1] com /Netflix /RxJava into docs [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Made rx.Scheduler bindings  private [scala] such that you can access them them if needed.	Made rx .[sentence: 1,-1] Scheduler bindings private [scala ]such that you can access them them if needed .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix for buffer not stopping when unsubscribed.	Fix for buffer not stopping when unsubscribed .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement the 'Start' operator	Implement the 'Start 'operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Lock-free subscriptions	Lock -free subscriptions [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Test to show various constructors.	Test to show various constructors .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Experimental extension methods for lists.	Experimental extension methods for lists .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	More precise marble diagram for the case when zip() takes an Observable that emits Observables	More precise marble diagram for the case when zip ()takes an Observable that emits Observables [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	make OperationDelayTest test Observable.delay instead of OperationDelay.delay	make OperationDelayTest test Observable .[sentence: 1,-1] delay[-2]instead of OperationDelay .[sentence: 1,-2] delay[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-2	add delay methods in Observable.java (copied those by @jmhofer)  source: https://github.com/jmhofer/RxJava/blob/18d40522bb19f80c0ff8d4079bcb925742efecf4/rxjava-core/src/main/java/rx/Observable.java	add delay[-2]methods in Observable .[sentence: 1,-2] java (copied those by @jmhofer )source[-2]:https ://github .[sentence: 1,-2] com /jmhofer /RxJava /blob /18d40522bb19f80c0ff8d4079bcb925742efecf4 /rxjava -core /src /main /java /rx /Observable .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	copy delay test by @jmhofer  source: https://github.com/jmhofer/RxJava/blob/e9027293dadf846b64f62e91da7c5c5850ed76f5/rxjava-core/src/main/java/rx/operators/OperationDelay.java	copy delay[-2]test by @jmhofer source[-2]:https ://github .[sentence: 1,-2] com /jmhofer /RxJava /blob /e9027293dadf846b64f62e91da7c5c5850ed76f5 /rxjava -core /src /main /java /rx /operators /OperationDelay .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add OperationDelay	add OperationDelay [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add timer methods in Observable.java	add timer methods in Observable .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add OperationTimer	add OperationTimer [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added test	Added test [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added OperationRepeat & repeat operator	Added OperationRepeat &repeat operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added OperationRepeat & repeat operator	Added OperationRepeat &repeat operator [sentence: 1,-1] [result: max + and - of any sentence]
