Positive	Negative	Text	Explanation
1	-1	Merge pull request #3077 from ReactiveX/PLP  Add "since" annotations to javadocs for new Experimental/Beta methods	Merge pull request #3077 from ReactiveX /PLP Add 'since 'annotations to javadocs for new Experimental /Beta methods [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3079 from davidmoten/foreach-javadoc  fix forEach javadoc	Merge pull request #3079 from davidmoten /foreach -javadoc fix forEach javadoc [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3085 from davidmoten/on-drop-test-fix  break tests as approach timeout so that don't fail on slow machines	Merge pull request #3085 from davidmoten /on -drop[-2]-test -fix break tests as approach timeout so that don't fail[-3][=0 negation]on slow machines [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #3086 from davidmoten/exec-sched-test-timing  improve ExecutorSchedulerTest.testOnBackpressureDrop	Merge pull request #3086 from davidmoten /exec -sched -test -timing improve[2]ExecutorSchedulerTest .[sentence: 2,-1] testOnBackpressureDrop [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	window() behavior changed, so did marble diagram & thus its size	window ()behavior changed ,so did marble diagram &thus its size [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge remote-tracking branch 'origin/1.x' into PLP	Merge remote -tracking branch 'origin /1 .[sentence: 1,-1] x[2]'into PLP [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3093 from akarnokd/MergeAsyncTest  Fix request != 0 checking in the scalar paths of merge()	Merge pull request #3093 from akarnokd /MergeAsyncTest Fix request !=[+0.6 punctuation mood emphasis][sentence: 2,-1] 0 checking in the scalar paths of merge ()[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Fix request != 0 checking in the scalar paths of merge()	Fix request !=[+0.6 punctuation mood emphasis][sentence: 2,-1] 0 checking in the scalar paths of merge ()[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	1.0.13	1 .[sentence: 1,-1] 0 .[sentence: 1,-1] 13 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3092 from benjchristensen/single-toObservable  Single.toObservable	Merge pull request #3092 from benjchristensen /single -toObservable Single .[sentence: 1,-1] toObservable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3091 from akarnokd/AutoConnectFix  Fix autoConnect calling onStart twice.	Merge pull request #3091 from akarnokd /AutoConnectFix Fix autoConnect calling onStart twice .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Single.toObservable	Single .[sentence: 1,-1] toObservable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Private toObservable renamed to asObservable  - Making room for the public toObservable method.	Private toObservable renamed to asObservable -Making room for the public toObservable method .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix autoConnect calling onStart twice.	Fix autoConnect calling onStart twice .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3081 from abersnaze/cache-rollback  Revert of cache/replay	Merge pull request #3081 from abersnaze /cache -rollback Revert[-2]of cache /replay [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Revert "cache now supports backpressure"  This reverts commit 18ff5afd380625f9157d9e9a3144baf845c09086.	Revert[-2]'cache now supports[2]backpressure 'This reverts[-2]commit 18ff5afd380625f9157d9e9a3144baf845c09086 .[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	Revert "If cache() now supports backpressure, correct javadocs to indicate this."  This reverts commit ec3d522c826c3135b9f5e3a9bb34f62756ec95cc.	Revert[-2]'If cache ()now supports[2]backpressure ,correct javadocs to indicate this .[sentence: 2,-2] 'This reverts[-2]commit ec3d522c826c3135b9f5e3a9bb34f62756ec95cc .[sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Revert "Operator replay() now supports backpressure"  This reverts commit 82d7b9cca2efd0a8f36ec3b700bb8f34c445a093.	Revert[-2]'Operator replay ()now supports[2]backpressure 'This reverts[-2]commit 82d7b9cca2efd0a8f36ec3b700bb8f34c445a093 .[sentence: 2,-2] [result: max + and - of any sentence]
1	-2	Revert "No need to allocate a new head node."  This reverts commit 46f9138f509f22be61d435cfb79335396fc92c48.	Revert[-2]'No need to allocate a new head node .[sentence: 1,-2] 'This reverts[-2]commit 46f9138f509f22be61d435cfb79335396fc92c48 .[sentence: 1,-2] [result: max + and - of any sentence]
1	-3	reduce probability of ExecutorSchedulerTest.testOnBackpressureDrop failing on slow machine	reduce probability of ExecutorSchedulerTest .[sentence: 1,-1] testOnBackpressureDrop failing[-3]on slow machine [sentence: 1,-3] [result: max + and - of any sentence]
1	-1	break tests as approach timeout so that don't fail on slow machines	break tests as approach timeout so that don't fail[-3][=0 negation]on slow machines [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix forEach javadoc	fix forEach javadoc [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add "since" annotations to javadocs for new Experimental/Beta methods	Add 'since 'annotations to javadocs for new Experimental /Beta methods [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Binary examples including SNAPSHOT	Binary examples including SNAPSHOT [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2928 from akarnokd/OperatorMergeFullRewrite  Merge and MergeMaxConcurrent unified and rewritten	Merge pull request #2928 from akarnokd /OperatorMergeFullRewrite Merge and MergeMaxConcurrent unified and rewritten [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge fully rewritten and other related optimizations	Merge fully rewritten and other related optimizations [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3023 from akarnokd/AutoConnect  ConnectableObservable autoConnect operator	Merge pull request #3023 from akarnokd /AutoConnect ConnectableObservable autoConnect operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3039 from akarnokd/WindowFuncFix  Window with Observable: fixed unsubscription and behavior	Merge pull request #3039 from akarnokd /WindowFuncFix Window with Observable :fixed unsubscription and behavior [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3045 from akarnokd/ElementAtImprovement  ElementAt request management enhanced	Merge pull request #3045 from akarnokd /ElementAtImprovement ElementAt request management enhanced [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3047 from akarnokd/OperatorReplayBackpressure  Operator replay() now supports backpressure	Merge pull request #3047 from akarnokd /OperatorReplayBackpressure Operator replay ()now supports[2]backpressure [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3048 from akarnokd/CompositeExceptionNull  CompositeException extra NPE protection	Merge pull request #3048 from akarnokd /CompositeExceptionNull CompositeException extra NPE protection [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3055 from davidmoten/single-subscribe-fix  toSingle() should use unsafeSubscribe	Merge pull request #3055 from davidmoten /single -subscribe -fix toSingle ()should use unsafeSubscribe [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3058 from davidmoten/subscriber-javadoc  add and improve javadoc in Subscriber	Merge pull request #3058 from davidmoten /subscriber -javadoc add and improve[2]javadoc in Subscriber [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3065 from davidmoten/subscribers-wrap  add Subscribers.wrap	Merge pull request #3065 from davidmoten /subscribers -wrap add Subscribers .[sentence: 1,-1] wrap [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add Subscribers.wrap	add Subscribers .[sentence: 1,-1] wrap [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3069 from ReactiveX/PLP  Improve toSingle() javadoc (diagram, see also, since-annotation)	Merge pull request #3069 from ReactiveX /PLP Improve[2]toSingle ()javadoc (diagram ,see also ,since -annotation )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Improve toSingle() javadoc (diagram, see also, since-annotation)	Improve[2]toSingle ()javadoc (diagram ,see also ,since -annotation )[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	add and improve javadoc in Subscriber	add and improve[2]javadoc in Subscriber [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	toSingle should use unsafeSubscribe	toSingle should use unsafeSubscribe [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3049 from tilal6991/1.x  single: add toSingle method to Observable	Merge pull request #3049 from tilal6991 /1 .[sentence: 1,-1] x[2]single :add toSingle method to Observable [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	single: add toSingle method to Observable  * closes ReactiveX/RxJava#3038 * this method allows an observable which is guaranteed to return exactly one   item to be converted to a Single * NOTE: the semantics of this function are very similar to that of single * i.e. errors are passed through, more than one item results in an   IllegalArgumentException, completion without emission results in a   NoSuchElementException and exactly one item is passed through the onSuccess   method of SingleSubscriber	single :add toSingle method to Observable *closes ReactiveX /RxJava #3038 *this method allows an observable which is guaranteed to return exactly one item to be converted to a Single *NOTE :the semantics of this function are very similar to that of single *i .[sentence: 1,-1] e .[sentence: 1,-1] errors[-2]are passed through ,more than one item results in an IllegalArgumentException ,completion without emission results in a NoSuchElementException and exactly one item is passed through the onSuccess method of SingleSubscriber [sentence: 1,-2] [result: max + and - of any sentence]
1	-3	Merge pull request #3052 from akarnokd/FixSerializedObserverTest  Reduce test failure likelihood of testMultiThreadedWithNPEinMiddle	Merge pull request #3052 from akarnokd /FixSerializedObserverTest Reduce test failure[-3]likelihood of testMultiThreadedWithNPEinMiddle [sentence: 1,-3] [result: max + and - of any sentence]
1	-3	Reduce test failure likelihood of testMultiThreadedWithNPEinMiddle	Reduce test failure[-3]likelihood of testMultiThreadedWithNPEinMiddle [sentence: 1,-3] [result: max + and - of any sentence]
1	-1	CompositeException extra NPE protection	CompositeException extra NPE protection [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	No need to allocate a new head node.	No need to allocate a new head node .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Operator replay() now supports backpressure	Operator replay ()now supports[2]backpressure [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	ElementAt request management enhanced	ElementAt request management enhanced [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #3042 from davidmoten/default-if-empty-backp-2  add backpressure support for defaultIfEmpty()	Merge pull request #3042 from davidmoten /default[-2]-if -empty -backp -2 add backpressure support[2]for defaultIfEmpty ()[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #3043 from davidmoten/test-subscriber-javadoc  TestSubscriber javadoc cleanup	Merge pull request #3043 from davidmoten /test -subscriber -javadoc TestSubscriber javadoc cleanup [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	add backpressure support for defaultIfEmpty()	add backpressure support[2]for defaultIfEmpty ()[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	TestSubscriber javadoc improvements	TestSubscriber javadoc improvements[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3028 from akarnokd/DelayErrorCutaheadFix  Delay: error cut ahead was not properly serialized	Merge pull request #3028 from akarnokd /DelayErrorCutaheadFix Delay[-2]:error[-2]cut ahead was not properly serialized [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #3033 from davidmoten/take-last-javadoc  takeLast() javadoc fixes, standardize parameter names (count instead of num)	Merge pull request #3033 from davidmoten /take -last -javadoc takeLast ()javadoc fixes ,standardize parameter names (count instead of num )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Window with boundary observable: fixed unsubscription and behavior.	Window with boundary observable :fixed unsubscription and behavior .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3034 from davidmoten/empty-2  Instantiate EMPTY lazily	Merge pull request #3034 from davidmoten /empty -2 Instantiate EMPTY lazily[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-2	instantiate EMPTY lazily	instantiate EMPTY lazily[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-1	takeLast javadoc fixes, standardize on parameter names (count instead of num), improve message in OperatorTakeLast exception	takeLast javadoc fixes ,standardize on parameter names (count instead of num ),improve[2]message in OperatorTakeLast exception [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3031 from benjchristensen/fix-flatMapIntPassthruAsync  Fix OperatorFlatMapPerf.flatMapIntPassthruAsync Perf Test	Merge pull request #3031 from benjchristensen /fix -flatMapIntPassthruAsync Fix OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync Perf Test [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Fix OperatorFlatMapPerf.flatMapIntPassthruAsync Perf Test  This test was reported broken in https://github.com/ReactiveX/RxJava/pull/2928#issuecomment-113229698  Fixing by adding the use of LatchedObserver.  Previously broken test results:  ``` r.o.OperatorFlatMapPerf.flatMapIntPassthruAsync         1  thrpt         5   363615.622   115041.519    ops/s r.o.OperatorFlatMapPerf.flatMapIntPassthruAsync      1000  thrpt         5      350.204      125.773    ops/s r.o.OperatorFlatMapPerf.flatMapIntPassthruAsync   1000000  thrpt         5        0.319        0.184    ops/s ```  Fixed results:  ``` r.o.OperatorFlatMapPerf.flatMapIntPassthruAsync         1  thrpt         5   102109.681     8709.920    ops/s r.o.OperatorFlatMapPerf.flatMapIntPassthruAsync      1000  thrpt         5      403.071      130.651    ops/s r.o.OperatorFlatMapPerf.flatMapIntPassthruAsync   1000000  thrpt         5        0.355        0.070    ops/s ```	Fix OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync Perf Test This test was reported broken[-2]in https ://github .[sentence: 1,-2] com /ReactiveX /RxJava /pull /2928 #issuecomment -113229698 Fixing by adding the use of LatchedObserver .[sentence: 1,-1] Previously broken[-2]test results :```r .[sentence: 1,-2] o .[sentence: 1,-1] OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync 1 thrpt 5 363615 .[sentence: 1,-1] 622 115041 .[sentence: 1,-1] 519 ops /s r .[sentence: 1,-1] o .[sentence: 1,-1] OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync 1000 thrpt 5 350 .[sentence: 1,-1] 204 125 .[sentence: 1,-1] 773 ops /s r .[sentence: 1,-1] o .[sentence: 1,-1] OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync 1000000 [+0.6 spelling mood emphasis]thrpt 5 0 .[sentence: 2,-1] 319 0 .[sentence: 1,-1] 184 ops /s ```Fixed results :```r .[sentence: 1,-1] o .[sentence: 1,-1] OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync 1 thrpt 5 102109 .[sentence: 1,-1] 681 8709 .[sentence: 1,-1] 920 ops /s r .[sentence: 1,-1] o .[sentence: 1,-1] OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync 1000 thrpt 5 403 .[sentence: 1,-1] 071 130 .[sentence: 1,-1] 651 ops /s r .[sentence: 1,-1] o .[sentence: 1,-1] OperatorFlatMapPerf .[sentence: 1,-1] flatMapIntPassthruAsync 1000000 [+0.6 spelling mood emphasis]thrpt 5 0 .[sentence: 2,-1] 355 0 .[sentence: 1,-1] 070 ops /s ```[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3029 from akarnokd/TabsReplacedWithSpaces  Replaced tabs with spaces for good.	Merge pull request #3029 from akarnokd /TabsReplacedWithSpaces Replaced tabs with spaces for good[2].[sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Replaced tabs with spaces for good.	Replaced tabs with spaces for good[2].[sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Delay: error cut ahead was not properly serialized	Delay[-2]:error[-2]cut ahead was not properly serialized [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	If cache() now supports backpressure, correct javadocs to indicate this.	If cache ()now supports[2]backpressure ,correct javadocs to indicate this .[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	ConnectableObservable autoConnect operator	ConnectableObservable autoConnect operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2997 from davidmoten/redo-fix-2  Fix retry() race conditions	Merge pull request #2997 from davidmoten /redo -fix -2 Fix retry ()race conditions [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #2969 from akarnokd/OperatorCacheRewrite2  Operator cache() now supports backpressure	Merge pull request #2969 from akarnokd /OperatorCacheRewrite2 Operator cache ()now supports[2]backpressure [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2995 from davidmoten/switch-overflow  switchOnNext - ensure initial requests additive and fix request overflow	Merge pull request #2995 from davidmoten /switch -overflow[-2]switchOnNext -ensure initial requests additive and fix request overflow[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-1	cache now supports backpressure	cache now supports[2]backpressure [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2982 from davidmoten/test-sub-factory-methods  TestSubscriber - add factory methods	Merge pull request #2982 from davidmoten /test -sub -factory -methods TestSubscriber -add factory methods [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2975 from abersnaze/interval  Deprecate and rename two timer overloads to interval	Merge pull request #2975 from abersnaze /interval Deprecate and rename two timer overloads to interval [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2970 from akarnokd/BackpressureBlockDeprecated  Deprecated onBackpressureBlock	Merge pull request #2970 from akarnokd /BackpressureBlockDeprecated Deprecated onBackpressureBlock [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2972 from akarnokd/WindowUnsubscribeToComplete  Fixed window(time) to work properly with unsubscription, added	Merge pull request #2972 from akarnokd /WindowUnsubscribeToComplete Fixed window (time )to work properly with unsubscription ,added [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3018 from davidmoten/ts-await-bug  TestSubscriber - fix awaitTerminalEventAndUnsubscribeOnTimeout	Merge pull request #3018 from davidmoten /ts -await -bug[-2]TestSubscriber -fix awaitTerminalEventAndUnsubscribeOnTimeout [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #2983 from akarnokd/MultiOnStartFix  Fixed multiple calls to onStart.	Merge pull request #2983 from akarnokd /MultiOnStartFix Fixed multiple calls to onStart .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #3019 from ReactiveX/PLP  Javadoc improvements for new Single class	Merge pull request #3019 from ReactiveX /PLP Javadoc improvements[2]for new Single class [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	A handful more javadoc changes (misnamed @params and such)	A handful more javadoc changes (misnamed @params and such )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Javadoc improvements.	Javadoc improvements[2].[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Add marble diagrams for Single operators.	Add marble diagrams for Single operators .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix awaitTerminalEventAndUnsubscribeOnTimeout	fix awaitTerminalEventAndUnsubscribeOnTimeout [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3012 from benjchristensen/single-type  rx.Single	Merge pull request #3012 from benjchristensen /single -type rx .[sentence: 1,-1] Single [sentence: 1,-1] [result: max + and - of any sentence]
2	-4	rx.Single  Adds `rx.Single` as an "Observable Future" for representing work with a single return value.  See https://github.com/ReactiveX/RxJava/issues/1594 rx.Future/Task/Async/Single  This provides a type similar to `Future` in that it represents a scalar unit of work, but it is lazy like an `Observable` and many `Single`s can be combined into an `Observable` stream. Note how `Single.zip` returns `Single<R>` whereas `Single.merge` returns `Observable<R>`.  Examples of using this class:  ```java import rx.Observable; import rx.Single;  public class TaskExamples {      public static void main(String... args) {         // scalar synchronous value         Single<String> t1 = Single.create(t -> {             t.onSuccess("Hello World!");         });          // scalar synchronous value using helper method         Single<Integer> t2 = Single.just(1);          // synchronous error         Single<String> error = Single.create(t -> {             t.onError(new RuntimeException("failed!"));         });          // executing         t1.subscribe(System.out::println);         t2.subscribe(System.out::println);         error.subscribe(System.out::println, e -> System.out.println(e.getMessage()));          // scalar Singles for request/response like a Future         getData(1).subscribe(System.out::println);          // combining Tasks into another Task         Single<String> zipped = Single.zip(t1, t2, (a, b) -> a + " -- " + b);          // combining Singles into an Observable stream         Observable<String> merged = Single.merge(t1, t2.map(String::valueOf), getData(3));         Observable<String> mergeWith = t1.mergeWith(t2.map(String::valueOf));          zipped.subscribe(v -> System.out.println("zipped => " + v));         merged.subscribe(v -> System.out.println("merged => " + v));         mergeWith.subscribe(v -> System.out.println("mergeWith => " + v));     }      /**      * Example of an async scalar execution using Single.create      * <p>      * This shows the lazy, idiomatic approach for Rx exactly like an Observable except scalar.      *      * @param arg      * @return      */     public static Single<String> getData(int arg) {         return Single.create(s -> {             new Thread(() -> {                 try {                     Thread.sleep(500);                 } catch (Exception e) {                     e.printStackTrace();                 }                 // deliver value                     s.onSuccess("Data=" + arg);                 }).start();         });     }  } ```	rx .[sentence: 1,-1] Single Adds `rx .[sentence: 1,-1] Single `as an 'Observable Future 'for representing work with a single return value[2].[sentence: 2,-1] See https ://github .[sentence: 1,-1] com /ReactiveX /RxJava /issues /1594 rx .[sentence: 1,-1] Future /Task /Async /Single This provides a type similar to `Future `in that it represents a scalar unit of work ,but it is lazy[-2]like[2]an `Observable `and many `Single `s can be combined into an `Observable `stream .[sentence: 2,-2] Note how `Single .[sentence: 1,-1] zip `returns `Single <R >`whereas `Single .[sentence: 1,-1] merge `returns `Observable <R >`.[sentence: 1,-1] Examples of using this class :```java import rx .[sentence: 1,-1] Observable ;import rx .[sentence: 1,-1] Single ;public class TaskExamples {public static[-2]void[-2]main (String ...[sentence: 1,-2] args ){//scalar synchronous value[2]Single <String >t1 =Single .[sentence: 2,-1] create (t ->{t .[sentence: 1,-1] onSuccess ('Hello World ![+0.6 punctuation mood emphasis][sentence: 2,-1] ');});//scalar synchronous value[2]using helper method Single <Integer >t2 =Single .[sentence: 2,-1] just (1 );//synchronous error[-2]Single <String >error[-2]=Single .[sentence: 1,-2] create (t ->{t .[sentence: 1,-1] onError (new RuntimeException ('failed[-3]![-0.6 punctuation emphasis][sentence: 1,-4] '));});//executing t1 .[sentence: 1,-1] subscribe (System .[sentence: 1,-1] out ::println );t2 .[sentence: 1,-1] subscribe (System .[sentence: 1,-1] out ::println );error[-2].[sentence: 1,-2] subscribe (System .[sentence: 1,-1] out ::println ,e ->System .[sentence: 1,-1] out .[sentence: 1,-1] println (e .[sentence: 1,-1] getMessage ()));//scalar Singles for request /response like[2]a Future getData (1 ).[sentence: 2,-1] subscribe (System .[sentence: 1,-1] out ::println );//combining Tasks into another Task Single <String >zipped =Single .[sentence: 1,-1] zip (t1 ,t2 ,(a ,b )->a +'--'+b );//combining Singles into an Observable stream Observable <String >merged =Single .[sentence: 1,-1] merge (t1 ,t2 .[sentence: 1,-1] map (String ::valueOf ),getData (3 ));Observable <String >mergeWith =t1 .[sentence: 1,-1] mergeWith (t2 .[sentence: 1,-1] map (String ::valueOf ));zipped .[sentence: 1,-1] subscribe (v ->System .[sentence: 1,-1] out .[sentence: 1,-1] println ('zipped =>'+v ));merged .[sentence: 1,-1] subscribe (v ->System .[sentence: 1,-1] out .[sentence: 1,-1] println ('merged =>'+v ));mergeWith .[sentence: 1,-1] subscribe (v ->System .[sentence: 1,-1] out .[sentence: 1,-1] println ('mergeWith =>'+v ));}/***Example of an async scalar execution using Single .[sentence: 1,-1] create *<p >*This shows the lazy[-2],idiomatic approach for Rx exactly like[2]an Observable except scalar .[sentence: 2,-2] **@param arg *@return */public static[-2]Single <String >getData (int arg ){return Single .[sentence: 1,-2] create (s ->{new Thread (()->{try {Thread .[sentence: 1,-1] sleep (500 );}catch (Exception e ){e .[sentence: 1,-1] printStackTrace ();}//deliver value[2]s .[sentence: 2,-1] onSuccess ('Data ='+arg );}).[sentence: 1,-1] start ();});}}```[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #2990 from davidmoten/subscriber-readability  Improve Subscriber readability	Merge pull request #2990 from davidmoten /subscriber -readability Improve[2]Subscriber readability [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	1.0.12	1 .[sentence: 1,-1] 0 .[sentence: 1,-1] 12 [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #3009 from davidmoten/from-iter-bug  Observable.from(iterable) - ensure it.hasNext() is not called unnecessarily #3006	Merge pull request #3009 from davidmoten /from -iter -bug[-2]Observable .[sentence: 1,-2] from (iterable )-ensure it .[sentence: 1,-1] hasNext ()is not called unnecessarily[-2]#3006 [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	ensure iterator.hasNext is not called unnecessarily as per #3006	ensure iterator .[sentence: 1,-1] hasNext is not called unnecessarily[-2]as per #3006 [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	add two unit tests for issue #3008	add two unit tests for issue #3008 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3001 from davidmoten/use-subscribers-from  use Subscribers.from()	Merge pull request #3001 from davidmoten /use -subscribers -from use Subscribers .[sentence: 1,-1] from ()[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #3000 from zsxwing/java6  Replace the Java 7 AssertionError(message, cause) with RuntimeException	Merge pull request #3000 from zsxwing /java6 Replace the Java 7 AssertionError (message ,cause )with RuntimeException [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Use initCause to initialize AssertionError	Use initCause to initialize AssertionError [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	use Subscribers.from()	use Subscribers .[sentence: 1,-1] from ()[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Replace the Java 7 AssertionError(message, cause) with RuntimeException	Replace the Java 7 AssertionError (message ,cause )with RuntimeException [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2999 from zsxwing/assert-error  Fix a wrong assertion in assertError	Merge pull request #2999 from zsxwing /assert -error[-2]Fix a wrong[-2]assertion in assertError [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Fix a wrong assertion in assertError	Fix a wrong[-2]assertion in assertError [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Merge pull request #2996 from davidmoten/switch-if-empty-request-bug  switchIfEmpty - fix backpressure bug and lost requests	Merge pull request #2996 from davidmoten /switch -if -empty -request -bug[-2]switchIfEmpty -fix backpressure bug[-2]and lost requests [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	fix request processing in OperatorSwitchIfNext	fix request processing in OperatorSwitchIfNext [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix OnSubscribeRedo race conditions	fix OnSubscribeRedo race conditions [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	add request overflow checking to OperatorSwitch	add request overflow[-2]checking to OperatorSwitch [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Merge pull request #2993 from davidmoten/take-while-cause  takeWhile(predicate) - include last value in error cause	Merge pull request #2993 from davidmoten /take -while -cause takeWhile (predicate )-include last value[2]in error[-2]cause [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	add value as last cause to error in takeWhile(predicate)	add value[2]as last cause to error[-2]in takeWhile (predicate )[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	Merge pull request #2992 from davidmoten/error-cause-primitives  Fix value rendering in error last cause for primitive types	Merge pull request #2992 from davidmoten /error[-2]-cause -primitives Fix value[2]rendering in error[-2]last cause for primitive types [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	Merge pull request #2991 from davidmoten/take-until-predicate-last-cause  takeUntil(predicate) - include last value in error cause	Merge pull request #2991 from davidmoten /take -until -predicate -last -cause takeUntil (predicate )-include last value[2]in error[-2]cause [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	fix render value in error last cause for primitive types	fix render value[2]in error[-2]last cause for primitive types [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	include last value in cause when error occurs in takeUntil(predicate)	include last value[2]in cause when error[-2]occurs in takeUntil (predicate )[sentence: 2,-2] [result: max + and - of any sentence]
2	-2	improve Subscriber readability and don't perform unnecessary test in request method	improve[2]Subscriber readability and don't perform unnecessary[-2]test in request method [sentence: 2,-2] [result: max + and - of any sentence]
1	-2	Merge pull request #2989 from davidmoten/take-request-bug  prevent take() from requesting more than needed	Merge pull request #2989 from davidmoten /take -request -bug[-2]prevent take ()from requesting more than needed [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	prevent OperatorTake from requesting more than needed	prevent OperatorTake from requesting more than needed [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #2988 from davidmoten/any-backp  Operator exists() - implement backpressure and include last value in exception cause	Merge pull request #2988 from davidmoten /any -backp Operator exists ()-implement backpressure and include last value[2]in exception cause [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	add backpressure support for OperatorAny and include last value in exception cause	add backpressure support[2]for OperatorAny and include last value[2]in exception cause [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2987 from davidmoten/skip-bug  fix skip() race condition and request overflow	Merge pull request #2987 from davidmoten /skip -bug[-2]fix skip ()race condition and request overflow[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-2	fix skip race conditions and request overflow	fix skip race conditions and request overflow[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #2986 from davidmoten/all-backp  OperatorAll  - implement backpressure and include last value in exception cause	Merge pull request #2986 from davidmoten /all -backp OperatorAll -implement backpressure and include last value[2]in exception cause [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	implement backpressure for OperatorAll and include last value in cause if exception occurs	implement backpressure for OperatorAll and include last value[2]in cause if exception occurs [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #2985 from davidmoten/serialize-fix  improve OperatorSerializeTest.testMultiThreadedWithNPEinMiddle	Merge pull request #2985 from davidmoten /serialize -fix improve[2]OperatorSerializeTest .[sentence: 2,-1] testMultiThreadedWithNPEinMiddle [sentence: 1,-1] [result: max + and - of any sentence]
1	-3	make OperatorSerializeTest.testMultiThreadedWithNPEinMiddle fail less often	make OperatorSerializeTest .[sentence: 1,-1] testMultiThreadedWithNPEinMiddle fail[-3]less often [sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Merge pull request #2960 from davidmoten/concat-race  fix OperatorConcat race condition where request lost	Merge pull request #2960 from davidmoten /concat -race fix OperatorConcat race condition where request lost [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix OperatorConcat request race conditions with ProducerArbiter	fix OperatorConcat request race conditions with ProducerArbiter [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2961 from davidmoten/amb-bug  fix Amb backpressure bug	Merge pull request #2961 from davidmoten /amb -bug[-2]fix Amb backpressure bug[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fixed multiple calls to onStart.	Fixed multiple calls to onStart .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add factory methods to TestSubscriber	add factory methods to TestSubscriber [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	fix Amb backpressure problems	fix Amb backpressure problems[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Deprecate and rename the timer methods that take initial delay and period to interval.	Deprecate and rename the timer methods that take initial delay[-2]and period to interval .[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Fixed window(time) to work properly with unsubscription, added backpressure support to window(size, skip).	Fixed window (time )to work properly with unsubscription ,added backpressure support[2]to window (size ,skip ).[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Deprecated onBackpressureBlock.	Deprecated onBackpressureBlock .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2966 from ReactiveX/javadocs  The usual anally-retentive javadoc edits.	Merge pull request #2966 from ReactiveX /javadocs The usual anally -retentive javadoc edits .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2963 from ReactiveX/StandardProducers  Set of standard producers and updated queue implementations with some	Merge pull request #2963 from ReactiveX /StandardProducers Set of standard producers and updated queue implementations with some [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	1.0.11	1 .[sentence: 1,-1] 0 .[sentence: 1,-1] 11 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	The usual anally-retentive javadoc edits.	The usual anally -retentive javadoc edits .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Added links to the source of the new queue classes.	Added links to the source[-2]of the new queue classes .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #2948 from ReactiveX/TestSubscriberPlus  More assertions for TestSubscriber	Merge pull request #2948 from ReactiveX /TestSubscriberPlus More assertions for TestSubscriber [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Standard producers and some more (platform-safe) queues from JCTools	Standard producers and some more (platform -safe[2])queues from JCTools [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2956 from davidmoten/observe-on-unsub  OperatorObserveOn should not request more after child is unsubscribed	Merge pull request #2956 from davidmoten /observe -on -unsub OperatorObserveOn should not request more after child is unsubscribed [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OperatorObserveOn should not request more after child is unsubscribed	OperatorObserveOn should not request more after child is unsubscribed [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2951 from davidmoten/concat-request-overflow  OperatorConcat - prevent request overflow and fix race condition	Merge pull request #2951 from davidmoten /concat -request -overflow[-2]OperatorConcat -prevent request overflow[-2]and fix race condition [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	OperatorConcat - use BackpressureUtils to prevent request overflow and add n > 0 check to prevent race condition	OperatorConcat -use BackpressureUtils to prevent request overflow[-2]and add n >0 check to prevent race condition [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Merge pull request #2950 from davidmoten/group-by-request-overflow  OperatorGroupBy - check for request overflow and don't decrement when at Long.MAX_VALUE	Merge pull request #2950 from davidmoten /group -by -request -overflow[-2]OperatorGroupBy -check for request overflow[-2]and don't decrement when at Long .[sentence: 1,-2] MAX _VALUE[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-3	add request overflow checks and prevent Long.MAX_VALUE requests being decremented in OperatorGroupBy, added unit test that failed with previous code	add request overflow[-2]checks and prevent Long .[sentence: 1,-2] MAX _VALUE[2]requests being decremented in OperatorGroupBy ,added unit test that failed[-3]with previous code [sentence: 2,-3] [result: max + and - of any sentence]
2	-1	Javadocs: adding marble diagram, return value for onBackpressureLatest	Javadocs :adding marble diagram ,return value[2]for onBackpressureLatest [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2949 from davidmoten/jacoco-disable  Remove findbugs+jacoco from build.gradle	Merge pull request #2949 from davidmoten /jacoco -disable[-2]Remove findbugs +jacoco from build .[sentence: 1,-2] gradle [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	remove findbugs and jacoco because are run with default build, will figure out later	remove findbugs and jacoco because are run with default[-2]build ,will figure out later [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	More assertions for TestSubscriber	More assertions for TestSubscriber [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2923 from akarnokd/OnBackpressureLatest  OnBackpressureLatest: Non-blocking version of the toBlocking().latest() operator.	Merge pull request #2923 from akarnokd /OnBackpressureLatest OnBackpressureLatest :Non -blocking[-2]version of the toBlocking ().[sentence: 1,-2] latest ()operator .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2871 from davidmoten/explicit-version  Use explicit versioning for gradle-rxjava-project-plugin	Merge pull request #2871 from davidmoten /explicit -version Use explicit versioning for gradle -rxjava -project -plugin [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2872 from rspieldenner/sonatype_sync  Use the correct accounts for sonatype sync	Merge pull request #2872 from rspieldenner /sonatype _sync Use the correct accounts for sonatype sync [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2907 from akarnokd/SchedulerFromFix  Fixed schedule race and task retention with ExecutorScheduler.	Merge pull request #2907 from akarnokd /SchedulerFromFix Fixed schedule race and task retention with ExecutorScheduler .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2929 from davidmoten/observe-on-race  OperatorObserveOn onComplete can be emitted despite onError being called	Merge pull request #2929 from davidmoten /observe -on -race OperatorObserveOn onComplete can be emitted despite onError being called [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2937 from davidmoten/findbugs  Add code quality plugins to build.gradle (jacoco, findbugs)	Merge pull request #2937 from davidmoten /findbugs Add code quality plugins to build .[sentence: 1,-1] gradle (jacoco ,findbugs )[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	don't reduce requested by produced if requested is Long.MAX_VALUE	don't reduce requested by produced if requested is Long .[sentence: 1,-1] MAX _VALUE[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-1	use new pollQueue from @akarnokd	use new pollQueue from @akarnokd [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix OperatorObserveOn race condition where onComplete could be emitted despite onError being called	fix OperatorObserveOn race condition where onComplete could be emitted despite onError being called [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Merge pull request #2940 from tomrozb/localHasValue-always-true  Remove unnecessary localHasValue check	Merge pull request #2940 from tomrozb /localHasValue -always -true[2]Remove unnecessary[-2]localHasValue check [sentence: 2,-2] [result: max + and - of any sentence]
2	-2	Remove unnecessary localHasValue check  Due to !hasValue check localHasValue field is always true	Remove unnecessary[-2]localHasValue check Due to ![+0.6 punctuation mood emphasis][sentence: 2,-2] hasValue check localHasValue field is always true[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2939 from akarnokd/OperatorPublishFix0508  publish: Fix another race between terminalEvent and the queue being empty.	Merge pull request #2939 from akarnokd /OperatorPublishFix0508 publish :Fix another race between terminalEvent and the queue being empty .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixes another race between terminalEvent and the queue being empty.	Fixes another race between terminalEvent and the queue being empty .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2938 from jacek-marchwicki/combine-last-overflow  Fixed Observable.combineLatest overflow bug on Android	Merge pull request #2938 from jacek -marchwicki /combine -last -overflow[-2]Fixed Observable .[sentence: 1,-2] combineLatest overflow[-2]bug[-2]on Android [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Fixed Observable.combineLatest overflow bug on Android  RxRingBuffer size is not a constant and on Android is less then 128 (16). So it causing silent issues when there were given 16 < Observers < 128.	Fixed Observable .[sentence: 1,-1] combineLatest overflow[-2]bug[-2]on Android RxRingBuffer size is not a constant and on Android is less then 128 (16 ).[sentence: 1,-2] So it causing silent issues when there were given 16 <Observers <128 .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2936 from jacek-marchwicki/fix-observer-bug  Fix TestSubject bug	Merge pull request #2936 from jacek -marchwicki /fix -observer -bug[-2]Fix TestSubject bug[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	add code quality plugins to build.gradle (jacoco, findbugs)	add code quality plugins to build .[sentence: 1,-1] gradle (jacoco ,findbugs )[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed TestSubject bug in onError and onCompleted	Fixed TestSubject bug[-2]in onError and onCompleted [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Fixed TestSubject bug in onNext	Fixed TestSubject bug[-2]in onNext [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Test that finds a TestScheduler bug	Test that finds a TestScheduler bug[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #2934 from akarnokd/OperatorPublishRaceFix  Fix termination race condition in OperatorPublish.dispatch	Merge pull request #2934 from akarnokd /OperatorPublishRaceFix Fix termination race condition in OperatorPublish .[sentence: 1,-1] dispatch [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix termination race condition in OperatorPublish.dispatch	Fix termination race condition in OperatorPublish .[sentence: 1,-1] dispatch [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed schedule race and task retention with ExecutorScheduler.	Fixed schedule race and task retention with ExecutorScheduler .[sentence: 1,-1] [result: max + and - of any sentence]
1	-3	Merge pull request #2912 from akarnokd/FixEventLoopsPerfDegradation  Fix the performance degradation due to different schedule execution and	Merge pull request #2912 from akarnokd /FixEventLoopsPerfDegradation Fix the performance degradation[-3]due to different schedule execution and [sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Merge pull request #2820 from akarnokd/WindowWithSizeBackpressure  Backpressure for window(size)	Merge pull request #2820 from akarnokd /WindowWithSizeBackpressure Backpressure for window (size )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2814 from akarnokd/OperatorPublishRewrite  Operator Publish full rewrite	Merge pull request #2814 from akarnokd /OperatorPublishRewrite Operator Publish full rewrite [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Javadocs: adding @since annotations to new public methods, cleaning up Subject javadocs a bit	Javadocs :adding @since annotations to new public methods ,cleaning up Subject javadocs a bit [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Non-blocking version of the toBlocking().latest() operator.	Non -blocking[-2]version of the toBlocking ().[sentence: 1,-2] latest ()operator .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2921 from davidmoten/observe-on-request-overflow  OperatorObserveOn - handle request overflow correctly	Merge pull request #2921 from davidmoten /observe -on -request -overflow[-2]OperatorObserveOn -handle request overflow[-2]correctly [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	ensure this does not escape from ObserveOnSubscriber constructor by moving code to an init() method and calling after construction	ensure this does not escape from ObserveOnSubscriber constructor by moving code to an init ()method and calling after construction [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #2901 from akarnokd/ToSortedListBackpressure  Operators toList and toSortedList now support backpressure	Merge pull request #2901 from akarnokd /ToSortedListBackpressure Operators toList and toSortedList now support[2]backpressure [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2883 from akarnokd/ExtendedSubjectAPI  Proposal: standardized Subject state-peeking methods.	Merge pull request #2883 from akarnokd /ExtendedSubjectAPI Proposal :standardized Subject state -peeking methods .[sentence: 1,-1] [result: max + and - of any sentence]
1	-3	prevent request overflow in OperatorObserveOn and add unit test that fails on original codebase but passes with change	prevent request overflow[-2]in OperatorObserveOn and add unit test that fails[-3]on original codebase but passes with change [sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Merge pull request #2915 from davidmoten/ignore-elements-singleton  Observable.ignoreElements - optimize	Merge pull request #2915 from davidmoten /ignore -elements -singleton Observable .[sentence: 1,-1] ignoreElements -optimize [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	improve perf of OperatorIgnoreElements	improve[2]perf of OperatorIgnoreElements [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2914 from davidmoten/take-last-one  Optimization - use OperatorTakeLastOne for takeLast(1)	Merge pull request #2914 from davidmoten /take -last -one Optimization -use OperatorTakeLastOne for takeLast (1 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add OperatorTakeLastOne	add OperatorTakeLastOne [sentence: 1,-1] [result: max + and - of any sentence]
1	-3	Fix the performance degradation due to different schedule execution and SubscriptionList.add() and thread unparking.	Fix the performance degradation[-3]due to different schedule execution and SubscriptionList .[sentence: 1,-3] add ()and thread unparking .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OperatorPublish full rewrite with comments + its perf fix	OperatorPublish full rewrite with comments +its perf fix [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2911 from akarnokd/OperatorPublishPerf  OperatorPublish benchmark	Merge pull request #2911 from akarnokd /OperatorPublishPerf OperatorPublish benchmark [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OperatorPublish benchmark	OperatorPublish benchmark [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2909 from akarnokd/RxRingBufferTestFix  Fix the drainer to check if the queue is empty before quitting.	Merge pull request #2909 from akarnokd /RxRingBufferTestFix Fix the drainer to check if the queue is empty before quitting .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix the drainer to check if the queue is empty before quitting.	Fix the drainer to check if the queue is empty before quitting .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #2905 from davidmoten/single-singleton  Use singleton Operators where we can	Merge pull request #2905 from davidmoten /single -singleton Use singleton Operators where we can [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	reduce gc pressure by using singleton Operators for single, distinct, distinctUntilChanged, onBackpressureBuffer, isEmpty	reduce gc pressure[-2]by using singleton Operators for single ,distinct ,distinctUntilChanged ,onBackpressureBuffer ,isEmpty [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Merge pull request #2904 from davidmoten/take-last-queue-producer-request-overflow  TakeLast - add request overflow check	Merge pull request #2904 from davidmoten /take -last -queue -producer -request -overflow[-2]TakeLast -add request overflow[-2]check [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	TakeLastQueueProducer add request overflow check	TakeLastQueueProducer add request overflow[-2]check [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #2897 from alexwen/window_overlap  Fix for overlapping windows.	Merge pull request #2897 from alexwen /window _overlap Fix for overlapping windows .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fix for #2896 overlapping windows. Source was emitting t multiple times while holding queue.	Fix for #2896 overlapping windows .[sentence: 1,-1] Source[-2]was emitting t multiple times while holding queue .[sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Merge pull request #2902 from davidmoten/exceptions-test  Prevent ExceptionsTest from hanging when testing stack overflow	Merge pull request #2902 from davidmoten /exceptions -test Prevent ExceptionsTest from hanging when testing stack overflow[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-2	stack overflow test can hang build, simplify the tests and ensure don't hang	stack overflow[-2]test can hang[-2]build ,simplify the tests and ensure don't hang[-2][=0 negation][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #2880 from davidmoten/reduce-optimization  Use singleton reduction functions in count and countLong	Merge pull request #2880 from davidmoten /reduce -optimization Use singleton reduction functions in count and countLong [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Operators toList and toSortedList now support backpressure	Operators toList and toSortedList now support[2]backpressure [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #2894 from akarnokd/ConcatOverflowFix  Concat: fixed reentrancy problem in completeInner	Merge pull request #2894 from akarnokd /ConcatOverflowFix Concat :fixed reentrancy problem[-2]in completeInner [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #2899 from davidmoten/from-iter-eager-complete  Observable.from(empty) to emit onComplete even when 0 requested	Merge pull request #2899 from davidmoten /from -iter -eager -complete Observable .[sentence: 1,-1] from (empty )to emit onComplete even when 0 requested [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Observable.from(iterable) should emit onCompleted even if none requested when iterable is empty	Observable .[sentence: 1,-1] from (iterable )should emit onCompleted even if none requested when iterable is empty [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Concat: fixed reentrancy problem in completeInner	Concat :fixed reentrancy problem[-2]in completeInner [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Proposal: standardized Subject state-peeking methods.	Proposal :standardized Subject state -peeking methods .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	use singleton reduction functions in count and countLong	use singleton reduction functions in count and countLong [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Use the correct accounts for sonatype sync	Use the correct accounts for sonatype sync [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	use explicit versioning for gradle-rxjava-project-plugin	use explicit versioning for gradle -rxjava -project -plugin [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Changed javadoc regarding backpressure	Changed javadoc regarding backpressure [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Backpressure for window(size)	Backpressure for window (size )[sentence: 1,-1] [result: max + and - of any sentence]
