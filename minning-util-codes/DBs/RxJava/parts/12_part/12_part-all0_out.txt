Positive	Negative	Text	Explanation
1	-1	Merge pull request #990 from puniverse/master  Quasar integration contrib module	Merge pull request #990 from puniverse /master Quasar integration contrib module [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.17.3	Version 0 .[sentence: 1,-1] 17 .3 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.4-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 4 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.3'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 3 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #999 from benjchristensen/serialize-optimizations  New Implementation of SerializedObserver	Merge pull request #999 from benjchristensen /serialize -optimizations New Implementation of SerializedObserver [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix unit test determinism	Fix unit test determinism [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	comments to walk through logic	comments to walk through logic [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Use latches instead of sleep for unit test  As per suggestion at https://github.com/benjchristensen/RxJava/commit/5b317ad827f624bed6cbf5f2e04df050ebbe01d0#commitcomment-5839773	Use latches instead of sleep for unit test As per suggestion at https ://github .[sentence: 1,-1] com /benjchristensen /RxJava /commit /5b317ad827f624bed6cbf5f2e04df050ebbe01d0 #commitcomment -5839773 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #1003 from rickbw/callable-func0  Func0 can transparently implement java.util.concurrent.Callable.	Merge pull request #1003 from rickbw /callable -func0 Func0 can transparently implement java .[sentence: 1,-1] util .[sentence: 1,-1] concurrent .[sentence: 1,-1] Callable .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Func0 can transparently implement java.util.concurrent.Callable.  This change doesn't change the API at all for users of Func0, but it makes all Func0 objects immediately reusable with any JDK API that accepts Callables. For example, a Func0 can now be submitted directly to an ExecutorService for asynchronous execution. It also allows the elimination of a small amount of redundant code within RxJava itself.	Func0 can transparently implement java .[sentence: 1,-1] util .[sentence: 1,-1] concurrent .[sentence: 1,-1] Callable .[sentence: 1,-1] This change doesn't change the API at all for users of Func0 ,but it makes all Func0 objects immediately reusable with any JDK API that accepts Callables .[sentence: 1,-1] For example ,a Func0 can now be submitted directly to an ExecutorService for asynchronous execution .[sentence: 1,-1] It also allows the elimination[-2]of a small amount of redundant[-2]code within RxJava itself .[sentence: 1,-2] [result: max + and - of any sentence]
1	-3	Update SerializedObserver to Not Allow Notification Delay  Unit test showing delays. Fails when MAX_DRAIN_ITERATION set to 1, passes as currently configured. Added a thread starvation unit test and marked as ignored for now. Doesn't pass even with MAX_DRAIN_ITERATION set to 1. Probably needs backpressure solution.	Update SerializedObserver to Not Allow Notification Delay[-2]Unit test showing delays .[sentence: 1,-2] Fails[-3]when MAX _DRAIN _ITERATION set to 1 ,passes as currently configured .[sentence: 1,-3] Added a thread starvation[-2]unit test and marked as ignored for now .[sentence: 1,-2] Doesn't pass even with MAX _DRAIN _ITERATION set to 1 .[sentence: 1,-1] Probably needs backpressure solution .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #996 from rspieldenner/perfshadowjar  Perfshadowjar	Merge pull request #996 from rspieldenner /perfshadowjar Perfshadowjar [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	tabs to spaces	tabs to spaces [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Produce a shadow'd jar for the performance benchmarks	Produce a shadow'd jar for the performance benchmarks [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #995 from benjchristensen/jmh-args  Support Custom JMH Args	Merge pull request #995 from benjchristensen /jmh -args Support[2]Custom JMH Args [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Support Custom JMH Args	Support[2]Custom JMH Args [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	New Implementation of SerializedObserver  #### JMH Benchmarks  0.17.3  Benchmark                                                          (size)   Mode   Samples         Mean   Mean error    Units r.operators.OperatorSerializePerf.noSerializationSingleThreaded      1024   avgt         5       45.504        1.710    ns/op r.operators.OperatorSerializePerf.noSerializationSingleThreaded   1048576   avgt         5       58.600        5.647    ns/op r.operators.OperatorSerializePerf.serializedSingleStream             1024   avgt         5       68.610        4.596    ns/op r.operators.OperatorSerializePerf.serializedSingleStream          1048576   avgt         5       71.313        2.318    ns/op r.operators.OperatorSerializePerf.synchronizedSingleStream           1024   avgt         5       73.322        3.666    ns/op r.operators.OperatorSerializePerf.synchronizedSingleStream        1048576   avgt         5       76.518        1.355    ns/op  0.17.2  Benchmark                                                          (size)   Mode   Samples         Mean   Mean error    Units r.operators.OperatorSerializePerf.noSerializationSingleThreaded      1024   avgt         5       45.790        1.184    ns/op r.operators.OperatorSerializePerf.noSerializationSingleThreaded   1048576   avgt         5       58.518        3.788    ns/op r.operators.OperatorSerializePerf.serializedSingleStream             1024   avgt         5       72.665        7.851    ns/op r.operators.OperatorSerializePerf.serializedSingleStream          1048576   avgt         5       74.788        2.946    ns/op r.operators.OperatorSerializePerf.synchronizedSingleStream           1024   avgt         5       73.661        3.499    ns/op r.operators.OperatorSerializePerf.synchronizedSingleStream        1048576   avgt         5       78.386        5.036    ns/op  #### Manual Benchmarks  /**  * 0.17.3:  *  * Run: 10 - 9,746,505 ops/sec  * Run: 11 - 9,956,019 ops/sec  * Run: 12 - 10,053,770 ops/sec  * Run: 13 - 10,076,958 ops/sec  * Run: 14 - 9,983,319 ops/sec  *  * 0.17.2:  *  * Run: 10 - 9,851,999 ops/sec  * Run: 11 - 9,726,975 ops/sec  * Run: 12 - 9,719,762 ops/sec  * Run: 13 - 9,668,141 ops/sec  * Run: 14 - 9,799,700 ops/sec  *  * @param input  */ public void serializedSingleStream(Input input) {     for (int i = 0; i < reps; i++) {         input.observable.serialize().subscribe(input.subscriber);     } }	New Implementation of SerializedObserver ####JMH Benchmarks 0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 3 Benchmark (size )Mode Samples Mean Mean error[-2]Units r .[sentence: 1,-2] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] noSerializationSingleThreaded 1024 avgt 5 45 .[sentence: 1,-1] 504 1 .[sentence: 1,-1] 710 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] noSerializationSingleThreaded 1048576 avgt 5 58 .[sentence: 1,-1] 600 5 .[sentence: 1,-1] 647 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] serializedSingleStream 1024 avgt 5 68 .[sentence: 1,-1] 610 4 .[sentence: 1,-1] 596 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] serializedSingleStream 1048576 avgt 5 71 .[sentence: 1,-1] 313 2 .[sentence: 1,-1] 318 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] synchronizedSingleStream 1024 avgt 5 73 .[sentence: 1,-1] 322 3 .[sentence: 1,-1] 666 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] synchronizedSingleStream 1048576 avgt 5 76 .[sentence: 1,-1] 518 1 .[sentence: 1,-1] 355 ns /op 0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 2 Benchmark (size )Mode Samples Mean Mean error[-2]Units r .[sentence: 1,-2] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] noSerializationSingleThreaded 1024 avgt 5 45 .[sentence: 1,-1] 790 1 .[sentence: 1,-1] 184 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] noSerializationSingleThreaded 1048576 avgt 5 58 .[sentence: 1,-1] 518 3 .[sentence: 1,-1] 788 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] serializedSingleStream 1024 avgt 5 72 .[sentence: 1,-1] 665 7 .[sentence: 1,-1] 851 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] serializedSingleStream 1048576 avgt 5 74 .[sentence: 1,-1] 788 2 .[sentence: 1,-1] 946 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] synchronizedSingleStream 1024 avgt 5 73 .[sentence: 1,-1] 661 3 .[sentence: 1,-1] 499 ns /op r .[sentence: 1,-1] operators .[sentence: 1,-1] OperatorSerializePerf .[sentence: 1,-1] synchronizedSingleStream 1048576 avgt 5 78 .[sentence: 1,-1] 386 5 .[sentence: 1,-1] 036 ns /op ####Manual Benchmarks /***0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 3 :**Run :10 -9 ,746 ,505 ops /sec *Run :11 -9 ,956 ,019 ops /sec *Run :12 -10 ,053 ,770 ops /sec *Run :13 -10 ,076 ,958 ops /sec *Run :14 -9 ,983 ,319 ops /sec **0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 2 :**Run :10 -9 ,851 ,999 ops /sec *Run :11 -9 ,726 ,975 ops /sec *Run :12 -9 ,719 ,762 ops /sec *Run :13 -9 ,668 ,141 ops /sec *Run :14 -9 ,799 ,700 ops /sec **@param input */public void[-2]serializedSingleStream (Input input ){for (int i =0 ;i <reps ;i ++){input .[sentence: 1,-2] observable .[sentence: 1,-1] serialize ().[sentence: 1,-1] subscribe (input .[sentence: 1,-1] subscriber );}}[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #993 from benjchristensen/perf-tests  JMH Perf Tests	Merge pull request #993 from benjchristensen /perf -tests JMH Perf Tests [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Perf Tests with JMH	Perf Tests with JMH [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	JMH Benchmarks Gradle Config  - this allows running benchmarks - config is hardcoded right now - wasn't able to get uberjar/shadowjar functionality working (https://github.com/Netflix/RxJava/pull/963#issuecomment-38770680)	JMH Benchmarks Gradle Config -this allows running benchmarks -config is hardcoded right now -wasn't able to get uberjar /shadowjar functionality working (https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /963 #issuecomment -38770680 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Change target back to 1.7  doesn't compile b/c channels implement AutoCloseable, added in JDK 7.	Change target back to 1 .[sentence: 1,-1] 7 doesn't compile b /c channels implement AutoCloseable ,added in JDK 7 .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Match updated RxJava API (rx.util.function -> rx.functions etc.)	Match updated RxJava API (rx .[sentence: 1,-1] util .[sentence: 1,-1] function ->rx .[sentence: 1,-1] functions etc .)[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge remote-tracking branch 'upstream/master'	Merge remote -tracking branch 'upstream /master '[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Target Java 1.6	Target Java 1 .6 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Migrate Pre-JMH Tests to rx.archive	Migrate Pre -JMH Tests to rx .[sentence: 1,-1] archive [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #991 from benjchristensen/jmh-build  JMH Benchmark Build Config	Merge pull request #991 from benjchristensen /jmh -build JMH Benchmark Build Config [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	fix jmh build config  This is now working from command-line and Eclipse	fix jmh build config This is now working from command -line and Eclipse [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Use Quasar 0.5.0 release	Use Quasar 0 .[sentence: 1,-1] 5 .[sentence: 1,-1] 0 release [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	0.17.2	0 .[sentence: 1,-1] 17 .2 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.3-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 3 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.2'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 2 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #988 from benjchristensen/issue-969  OnErrorFailedException	Merge pull request #988 from benjchristensen /issue -969 OnErrorFailedException [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OnErrorFailedException  Re-throw when onError throws an Exception. This fixes https://github.com/Netflix/RxJava/issues/969	OnErrorFailedException Re -throw when onError throws an Exception .[sentence: 1,-1] This fixes https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /969 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #987 from benjchristensen/pivot  Fix Non-Deterministic Pivot Test	Merge pull request #987 from benjchristensen /pivot Fix Non -Deterministic Pivot Test [sentence: 1,-1] [result: max + and - of any sentence]
1	-3	Fix Non-Deterministic Pivot Test  This failed on build servers (small, slow, single or dual-core machines).	Fix Non -Deterministic Pivot Test This failed[-3]on build servers (small ,slow ,single or dual -core machines ).[sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Merge pull request #986 from benjchristensen/issue-985  Fix SynchronizedObserver.runConcurrencyTest	Merge pull request #986 from benjchristensen /issue -985 Fix SynchronizedObserver .[sentence: 1,-1] runConcurrencyTest [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix SynchronizedObserver.runConcurrencyTest  It wasn't waiting on all threads before emitting onCompleted.	Fix SynchronizedObserver .[sentence: 1,-1] runConcurrencyTest It wasn't waiting on all threads before emitting onCompleted .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #965 from zsxwing/fix-timeout-unsubscribe  BugFix: Chain Subscription in TimeoutSubscriber and SerializedSubscriber	Merge pull request #965 from zsxwing /fix -timeout -unsubscribe BugFix :Chain Subscription in TimeoutSubscriber and SerializedSubscriber [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #966 from zsxwing/elementAt  Reimplement the ElementAt operator and add it to rxjava-scala	Merge pull request #966 from zsxwing /elementAt Reimplement the ElementAt operator and add it to rxjava -scala [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add marble diagrams to pivot() javadocs	add marble diagrams to pivot ()javadocs [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #984 from benjchristensen/pivot-concurrency  Tests and Javadoc for Pivot	Merge pull request #984 from benjchristensen /pivot -concurrency Tests and Javadoc for Pivot [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add Javadoc to Pivot	Add Javadoc to Pivot [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Pivot Unit Test	Pivot Unit Test [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #982 from benjchristensen/pivot  Pivot Operator	Merge pull request #982 from benjchristensen /pivot Pivot Operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Pivot Operator	Pivot Operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement ElementAt as Operator	Implement ElementAt as Operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add ElementAt and ElementAtOrDefault to rxjava-scala	Add ElementAt and ElementAtOrDefault to rxjava -scala [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Reimplement the ElementAt operator	Reimplement the ElementAt operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Chain Subscription in TimeoutSubscriber and SerializedSubscriber	Chain Subscription in TimeoutSubscriber and SerializedSubscriber [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #977 from benjchristensen/dematerialize  Dematerialize - handle non-materialized terminal events	Merge pull request #977 from benjchristensen /dematerialize Dematerialize -handle non -materialized terminal events [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Dematerialize - handle non-materialized terminal events	Dematerialize -handle non -materialized terminal events [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #976 from benjchristensen/parallel-merge-assertions  parallel-merge unit test assertions	Merge pull request #976 from benjchristensen /parallel -merge -assertions parallel -merge unit test assertions [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	parallel-merge unit test assertions  Using serialize for merge allows less threads to be used under contention instead of blocking and using them all. This changes the assertion to be <= 3 instead of == 3 because of that.	parallel -merge unit test assertions Using serialize for merge allows less threads to be used under contention instead of blocking[-2]and using them all .[sentence: 1,-2] This changes the assertion to be <=3 instead of ==3 because of that .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix Unit Test Assertion	Fix Unit Test Assertion [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Compilation Fix	Compilation Fix [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #975 from benjchristensen/groupBy-fixes  GroupBy & Time Gap Fixes	Merge pull request #975 from benjchristensen /groupBy -fixes GroupBy &Time Gap Fixes [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	GroupBy & Time Gap Fixes  I ran head-on into the "time gap" (https://github.com/Netflix/RxJava/issues/844) issue while working on a stream processing use case (and new 'pivot' operator I'm writing). This is a solution. It's still not ideal as the Javadocs of BufferUntilSubscriber mention, but this is working better than nothing and does not require blocking threads. A better solution will come as part of the back pressure work where BufferUntilSubscriber will evolve to have a bounded buffer.	GroupBy &Time Gap Fixes I ran head -on into the 'time gap '(https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /844 )issue while working on a stream processing use case (and new 'pivot 'operator I'm writing ).[sentence: 1,-1] This is a solution .[sentence: 1,-1] It's still not ideal as the Javadocs of BufferUntilSubscriber mention ,but this is working better than nothing and does not require blocking[-2]threads .[sentence: 1,-2] A better solution will come as part of the back pressure[-2]work where BufferUntilSubscriber will evolve to have a bounded buffer .[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #974 from benjchristensen/testing  TestSubject, TestObserver and TestScheduler Improvements	Merge pull request #974 from benjchristensen /testing TestSubject ,TestObserver and TestScheduler Improvements[2][sentence: 2,-1] [result: max + and - of any sentence]
2	-1	TestSubject, TestObserver and TestScheduler Improvements	TestSubject ,TestObserver and TestScheduler Improvements[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #973 from benjchristensen/merge-handle-bad-observable  Merge with Serialize - Handle Bad Observables	Merge pull request #973 from benjchristensen /merge -handle -bad[-2]-observable Merge with Serialize -Handle Bad[-2]Observables [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge with Serialize  - concurrency unit tests - handle Observable that emits onComplete multiple times	Merge with Serialize -concurrency unit tests -handle Observable that emits onComplete multiple times [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #970 from abersnaze/notification-lite  Notifications for the allocation adverse.	Merge pull request #970 from abersnaze /notification -lite Notifications for the allocation adverse[-2].[sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Notifications for the allocation adverse.	Notifications for the allocation adverse[-2].[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Version 0.17.1	Version 0 .[sentence: 1,-1] 17 .1 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #964 from akarnokd/SubjectSubscriptionManagerFix  SubjectSubscriptionManager fix.	Merge pull request #964 from akarnokd /SubjectSubscriptionManagerFix SubjectSubscriptionManager fix .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	SubjectSubscriptionManager fix.	SubjectSubscriptionManager fix .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #963 from gvsmirnov/master  A more robust JMH benchmarking set-up	Merge pull request #963 from gvsmirnov /master A more robust JMH benchmarking set -up [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Updated ObservableBenchmark to follow better benchmarking practices	Updated ObservableBenchmark to follow better benchmarking practices [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Updated gradle build scripts so there is a separate benchmarks task	Updated gradle build scripts so there is a separate benchmarks task [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.2-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 2 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.1'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 1 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #962 from benjchristensen/serialize-synchronize  Migrate from SynchronizedObserver to SerializedObserver	Merge pull request #962 from benjchristensen /serialize -synchronize Migrate from SynchronizedObserver to SerializedObserver [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Synchronize -> Serialize  - migrate all usage to Serialized instead of Synchronized - remove implementations of SerializedObserver that lost the competition (performance and testing in production)	Synchronize ->Serialize -migrate all usage to Serialized instead of Synchronized -remove implementations of SerializedObserver that lost the competition (performance and testing in production )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	SerializedObserver and SerializedSubscriber  Using the "queue and lock" implementation which won our performance and production testing.	SerializedObserver and SerializedSubscriber Using the 'queue and lock 'implementation which won our performance and production testing .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	queue and lock implementation	queue and lock implementation [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Unlock in finally block	Unlock in finally block[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Unit tests for each	Unit tests for each [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Clarify names during testing	Clarify names during testing [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Experimenting with different implementations and performance	Experimenting with different implementations and performance [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Migrate Merge from Synchronize to Serialize	Migrate Merge from Synchronize to Serialize [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Functional now ... it seems.	Functional now ...[sentence: 1,-1] it seems .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	not quite functional ... and slow	not quite functional ...[sentence: 1,-1] and slow [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OperatorSerialize	OperatorSerialize [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OperationSynchronize -> OperatorSynchronize	OperationSynchronize ->OperatorSynchronize [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #960 from benjchristensen/issue-879-unit-test  Retry Unit Test from #879	Merge pull request #960 from benjchristensen /issue -879 -unit -test Retry Unit Test from #879 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Retry Unit Test from #879  From https://github.com/Netflix/RxJava/issues/879	Retry Unit Test from #879 From https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /879 [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #928 from akarnokd/SubscribeOnBoundedFix  Fix deadlock in SubscribeOnBounded	Merge pull request #928 from akarnokd /SubscribeOnBoundedFix Fix deadlock[-2]in SubscribeOnBounded [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Merge pull request #959 from rickbw/toFuture-cancellation  OperationToFuture must throw CancellationException on get() if cancelled	Merge pull request #959 from rickbw /toFuture -cancellation[-2]OperationToFuture must throw CancellationException[-2]on get ()if cancelled[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #958 from akarnokd/OperatorSkipWhile  OperatorSkipWhile	Merge pull request #958 from akarnokd /OperatorSkipWhile OperatorSkipWhile [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #956 from akarnokd/StringObservableTestFix  Fixed byLine test to use line.separator system property instead of \n.	Merge pull request #956 from akarnokd /StringObservableTestFix Fixed byLine test to use line .[sentence: 1,-1] separator system property instead of \n .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #955 from akarnokd/ReplaySubjectLeakFix  Fixed ReplaySubject leak	Merge pull request #955 from akarnokd /ReplaySubjectLeakFix Fixed ReplaySubject leak[-2][sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Merge pull request #952 from zsxwing/amb  rxjava-scala improvements and reimplemented the `amb` operator	Merge pull request #952 from zsxwing /amb rxjava -scala improvements[2]and reimplemented the `amb `operator [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #938 from soundcloud/operator-weak-binding  OperatorWeakBinding (deprecates OperatorObserveFromAndroidComponent)	Merge pull request #938 from soundcloud /operator -weak[-2]-binding OperatorWeakBinding (deprecates OperatorObserveFromAndroidComponent )[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Rewrite AndroidObservableTest to test the new operator	Rewrite AndroidObservableTest to test the new operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Forward subscription of wrapped subscriber	Forward subscription of wrapped subscriber [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Guard the log calls	Guard the log calls [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Some cleaning up	Some cleaning up [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	OperatorWeakBinding supports predicates now	OperatorWeakBinding supports[2]predicates now [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	merge remote-tracking branch 'netflix/master' into operator-weak-binding	merge remote -tracking branch 'netflix /master 'into operator -weak[-2]-binding [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #930 from mttkay/android-samples  Initial commit of the Android samples module	Merge pull request #930 from mttkay /android -samples Initial commit of the Android samples module [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add sample for binding to list adapters in ListFragment	Add sample for binding to list adapters in ListFragment [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add sample for fragments and connectable observables	Add sample for fragments and connectable observables [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add full example for Activity + retained fragment + cache	Add full example for Activity +retained fragment +cache [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	OperatorSkipWhile	OperatorSkipWhile [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Revert to using the all Gradle wrapper dist type	Revert[-2]to using the all Gradle wrapper dist type [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge remote-tracking branch 'netflix/master' into android-samples	Merge remote -tracking branch 'netflix /master 'into android -samples [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Trigger samples build manually via Gradle build property	Trigger samples build manually via Gradle build property [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Switch to customizable Gradle wrapper	Switch to customizable Gradle wrapper [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Bump Android plugin version to 0.9	Bump Android plugin version to 0 .9 [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	OperationToFuture must throw CancellationException on get() if cancelled.  The documentation for Future.get() requires the method to throw CancellationException if the Future was cancelled before the task completed. The Futures returned by OperationToFuture.toFuture() did not respect this contract. Now they do.	OperationToFuture must throw CancellationException[-2]on get ()if cancelled[-2].[sentence: 1,-2] The documentation for Future .[sentence: 1,-1] get ()requires the method to throw CancellationException[-2]if the Future was cancelled[-2]before the task completed .[sentence: 1,-2] The Futures returned by OperationToFuture .[sentence: 1,-1] toFuture ()did not respect[3][*-0.5 approx. negated multiplier]this contract .[sentence: 1,-2] Now they do .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed byLine test to use line.separator system property instead of \n.	Fixed byLine test to use line .[sentence: 1,-1] separator system property instead of \n .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed ReplaySubject leak	Fixed ReplaySubject leak[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #953 from benjchristensen/observe-on-non-deterministic-test  Make ObserveOnTest.testNonBlockingOuterWhileBlockingOnNext deterministic	Merge pull request #953 from benjchristensen /observe -on -non -deterministic -test Make ObserveOnTest .[sentence: 1,-1] testNonBlockingOuterWhileBlockingOnNext deterministic [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Make OperatorObserveOnTest.testNonBlockingOuterWhileBlockingOnNext deterministic  reported at https://twitter.com/jaceklaskowski/status/443153927069249536	Make OperatorObserveOnTest .[sentence: 1,-1] testNonBlockingOuterWhileBlockingOnNext deterministic reported at https ://twitter .[sentence: 1,-1] com /jaceklaskowski /status /443153927069249536 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update CHANGES.md	Update CHANGES .[sentence: 1,-1] md [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.1-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 1 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.0'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	0.17.0-SNAPSHOT	0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -SNAPSHOT [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update CHANGES.md	Update CHANGES .[sentence: 1,-1] md [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.17.0 Release Notes	Version 0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 Release Notes [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	0.17.0 Release Notes	0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 Release Notes [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.17.0	Version 0 .[sentence: 1,-1] 17 .0 [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #950 from Acardiac/eclipse-pde-support  Add support for Eclipse PDE	Merge pull request #950 from Acardiac /eclipse -pde -support[2]Add support[2]for Eclipse PDE [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Change to a single 'get' call	Change to a single 'get 'call [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix docs	Fix docs [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Rename observer to subscriber and add a special logic to exit the loop	Rename observer to subscriber and add a special[2]logic to exit[-2]the loop [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Rename OperationAmb to OperatorAmb	Rename OperationAmb to OperatorAmb [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	  Reimplement the amb operator	Reimplement the amb operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Add amb, delay and delaySubscription in rxjava-scala	Add amb ,delay[-2]and delaySubscription in rxjava -scala [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	fixing a variety of errors in javadoc generation (syntax errors, misnamed params, etc.)	fixing a variety of errors[-2]in javadoc generation (syntax errors[-2],misnamed params ,etc .)[sentence: 1,-2] [result: max + and - of any sentence]
2	-1	add support for eclipse pde	add support[2]for eclipse pde [sentence: 2,-1] [result: max + and - of any sentence]
1	-2	correcting markup error in javadoc comments	correcting markup error[-2]in javadoc comments [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge branch 'master' of https://github.com/Netflix/RxJava into docs	Merge branch 'master 'of https ://github .[sentence: 1,-1] com /Netflix /RxJava into docs [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #931 from soundcloud/android-operator-improvements  A number of improvements to OperatorObserveFromAndroidComponent	Merge pull request #931 from soundcloud /android -operator -improvements[2]A number of improvements[2]to OperatorObserveFromAndroidComponent [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	startWith(observable) marble diagram	startWith (observable )marble diagram [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.0-RC8-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -RC8 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.0-RC7'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -RC7 '.[sentence: 1,-1] [result: max + and - of any sentence]
3	-3	Changing line 38 to try and fix build  Odd Jenkins build failures even though command-line build works fine:  ``` :rxjava:rxjava-contrib:rxjava-debug:compileJava/mnt/builds/slave/workspace/OSS-RxJava-release/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java:38: ')' expected             sourceFunc = ((DebugHook<C>.DebugOnSubscribe<T>) sourceFunc).getActual();                                        ^ /mnt/builds/slave/workspace/OSS-RxJava-release/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java:38: ')' expected             sourceFunc = ((DebugHook<C>.DebugOnSubscribe<T>) sourceFunc).getActual();                                         ^ /mnt/builds/slave/workspace/OSS-RxJava-release/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java:38: illegal start of expression             sourceFunc = ((DebugHook<C>.DebugOnSubscribe<T>) sourceFunc).getActual();                                                            ^ /mnt/builds/slave/workspace/OSS-RxJava-release/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java:38: not a statement             sourceFunc = ((DebugHook<C>.DebugOnSubscribe<T>) sourceFunc).getActual();                                                              ^ /mnt/builds/slave/workspace/OSS-RxJava-release/rxjava-contrib/rxjava-debug/src/main/java/rx/plugins/DebugNotification.java:38: ';' expected             sourceFunc = ((DebugHook<C>.DebugOnSubscribe<T>) sourceFunc).getActual();                                                                        ^ 5 errors  FAILED ```	Changing line 38 to try and fix build Odd Jenkins build failures[-3]even though command -line build works fine[3]:```:rxjava :rxjava -contrib :rxjava -debug :compileJava /mnt /builds /slave /workspace /OSS -RxJava -release /rxjava -contrib /rxjava -debug /src /main /java /rx /plugins /DebugNotification .[sentence: 3,-3] java :38 :')'expected sourceFunc[-2]=((DebugHook <C >.[sentence: 1,-2] DebugOnSubscribe <T >)sourceFunc[-2]).[sentence: 1,-2] getActual ();^/mnt /builds /slave /workspace /OSS -RxJava -release /rxjava -contrib /rxjava -debug /src /main /java /rx /plugins /DebugNotification .[sentence: 1,-1] java :38 :')'expected sourceFunc[-2]=((DebugHook <C >.[sentence: 1,-2] DebugOnSubscribe <T >)sourceFunc[-2]).[sentence: 1,-2] getActual ();^/mnt /builds /slave /workspace /OSS -RxJava -release /rxjava -contrib /rxjava -debug /src /main /java /rx /plugins /DebugNotification .[sentence: 1,-1] java :38 :illegal[-2]start of expression sourceFunc[-2]=((DebugHook <C >.[sentence: 1,-2] DebugOnSubscribe <T >)sourceFunc[-2]).[sentence: 1,-2] getActual ();^/mnt /builds /slave /workspace /OSS -RxJava -release /rxjava -contrib /rxjava -debug /src /main /java /rx /plugins /DebugNotification .[sentence: 1,-1] java :38 :not a statement sourceFunc[-2]=((DebugHook <C >.[sentence: 1,-2] DebugOnSubscribe <T >)sourceFunc[-2]).[sentence: 1,-2] getActual ();^/mnt /builds /slave /workspace /OSS -RxJava -release /rxjava -contrib /rxjava -debug /src /main /java /rx /plugins /DebugNotification .[sentence: 1,-1] java :38 :';'expected sourceFunc[-2]=((DebugHook <C >.[sentence: 1,-2] DebugOnSubscribe <T >)sourceFunc[-2]).[sentence: 1,-2] getActual ();^5 errors[-2]FAILED[-3]```[sentence: 1,-3] [result: max + and - of any sentence]
1	-2	Ignoring broken unit tests until fixed  /cc @abersnaze	Ignoring broken[-2]unit tests until fixed /cc @abersnaze [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Move state inside Subscriber	Move state inside Subscriber [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #923 from samuelgruetter/scala-additions  Observable creation from Subscriber[T]=>Unit for Scala	Merge pull request #923 from samuelgruetter /scala -additions Observable creation from Subscriber [T ]=>Unit for Scala [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #929 from devisnik/fix_maven_search_link  correct link to maven search	Merge pull request #929 from devisnik /fix _maven _search _link correct link to maven search [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #934 from davidmoten/add-startWith  add Observable.startWith(Observable) method and unit test	Merge pull request #934 from davidmoten /add -startWith add Observable .[sentence: 1,-1] startWith (Observable )method and unit test [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #945 from benjchristensen/merge-940  Manual Merge 940	Merge pull request #945 from benjchristensen /merge -940 Manual Merge 940 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/Observable.java	rxjava -core /src /main /java /rx /Observable .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #944 from benjchristensen/operator-retry  OperationRetry -> OperatorRetry	Merge pull request #944 from benjchristensen /operator -retry OperationRetry ->OperatorRetry [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	OperationRetry -> OperatorRetry  Updated to use "lift" and Subscriber. Fixes https://github.com/Netflix/RxJava/issues/943 Observable.retry() does not unsubscribe from source	OperationRetry ->OperatorRetry Updated to use 'lift 'and Subscriber .[sentence: 1,-1] Fixes https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /943 Observable .[sentence: 1,-1] retry ()does not unsubscribe from source[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #942 from benjchristensen/math-module  MathObservable	Merge pull request #942 from benjchristensen /math -module MathObservable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	math-module  Moving the average/sum/min/max functionality to the MathObservable similar to StringObservable.	math -module Moving the average /sum /min /max functionality to the MathObservable similar to StringObservable .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #936 from Applied-Duality/SkipFixed  Skip fixed	Merge pull request #936 from Applied -Duality /SkipFixed Skip fixed [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	refactor the debug hooks before they become a breaking change.	refactor the debug hooks before they become a breaking change .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	First implementation of OperatorWeakBinding	First implementation of OperatorWeakBinding [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed state capture bug. Added some additional tests	Fixed state capture[-2]bug[-2].[sentence: 1,-2] Added some additional tests [sentence: 1,-1] [result: max + and - of any sentence]
1	-3	Fix project import issue in Android Studio and a compilation failure	Fix project import issue in Android Studio and a compilation failure[-3][sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Simplify version property forwarding	Simplify version property forwarding [sentence: 1,-1] [result: max + and - of any sentence]
1	-3	add space to a comment to force ci rebuild to see if suspected non-deterministic test fails again	add space to a comment to force[-2]ci rebuild to see if suspected non -deterministic test fails[-3]again [sentence: 1,-3] [result: max + and - of any sentence]
2	-2	add Observable.startWith(Observable) method and unit test to avoid breaking method chaining when want to startWith an Observable rather than just an Iterator or specific values.	add Observable .[sentence: 1,-1] startWith (Observable )method and unit test to avoid[-2]breaking method chaining when want to startWith an Observable rather than just an Iterator or specific values[2].[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Implemented Skip using Lift in Observable and OperatorSkip Deleted non-time part from OperationSkip Moved tests to OperatorSkipTest	Implemented Skip using Lift in Observable and OperatorSkip Deleted non -time part from OperationSkip Moved tests to OperatorSkipTest [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Initial commit of the Android samples module  refs https://github.com/soundcloud/RxJava/issues/3	Initial commit of the Android samples module refs https ://github .[sentence: 1,-1] com /soundcloud /RxJava /issues /3 [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	A number of improvements to OperatorObserveFromAndroidComponent  - move the UI thread assert out of the operator and into the helpers; this way, we don't fail the observer anymore with an exception, but the caller. - do not loop unsubscribe through the main thread anymore. This unnecessarily defers releasing the references, and might in fact be processed only after Android creates the component after a rotation change. I had to make the references volatile for this to work. - immediately unsubscribe in case we detect the componentRef has become invalid. This solves the problem that dangling observers would continue to listen to notifications with no observer alive anymore.  refs: https://github.com/Netflix/RxJava/issues/754 https://github.com/Netflix/RxJava/issues/899	A number of improvements[2]to OperatorObserveFromAndroidComponent -move the UI thread assert out of the operator and into the helpers ;this way ,we don't fail[-3][=0 negation]the observer anymore with an exception ,but the caller .[sentence: 2,-1] -do not loop unsubscribe through the main thread anymore .[sentence: 1,-1] This unnecessarily[-2]defers releasing the references ,and might in fact be processed only after Android creates the component after a rotation change .[sentence: 1,-2] I had to make the references volatile[-2]for this to work .[sentence: 1,-2] -immediately unsubscribe in case we detect the componentRef has become invalid[-2].[sentence: 1,-2] This solves the problem[-2]that dangling observers would continue to listen to notifications with no observer alive anymore .[sentence: 1,-2] refs :https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /754 https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /899 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	correct link to maven search	correct link to maven search [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fix deadlock in SubscribeOnBounded	Fix deadlock[-2]in SubscribeOnBounded [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.0-RC7-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -RC7 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.0-RC6'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -RC6 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #927 from benjchristensen/test-subscriber-last-seen-thread  TestSubscriber lastSeenThread	Merge pull request #927 from benjchristensen /test -subscriber -last -seen -thread TestSubscriber lastSeenThread [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	TestSubscriber lastSeenThread	TestSubscriber lastSeenThread [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #926 from benjchristensen/test-subscriber  TestSubscriber: Default onError and Terminal Latch Behavior	Merge pull request #926 from benjchristensen /test -subscriber TestSubscriber :Default[-2]onError and Terminal Latch Behavior [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	TestSubscriber: Default onError and Terminal Latch Behavior	TestSubscriber :Default[-2]onError and Terminal Latch Behavior [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #925 from daveray/rxjava-clojure-bindings-final  Rxjava clojure bindings final	Merge pull request #925 from daveray /rxjava -clojure -bindings -final Rxjava clojure bindings final [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Added BlockingObservable	Added BlockingObservable[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - new version commit:  '0.17.0-RC6-SNAPSHOT'.	[Gradle Release Plugin ]-new version commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -RC6 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	[Gradle Release Plugin] - pre tag commit:  '0.17.0-RC5'.	[Gradle Release Plugin ]-pre tag commit :'0 .[sentence: 1,-1] 17 .[sentence: 1,-1] 0 -RC5 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	seq->o should seq-ify arg	seq ->o should seq -ify arg [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement range	Implement range [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement iterate	Implement iterate [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Remove val-fn version of group-by	Remove val -fn version of group -by [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implemented multi-sequence mapcat	Implemented multi -sequence mapcat [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Eliminated macro version of future stuff based on feedback.	Eliminated macro version of future stuff based on feedback .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Eliminate sorted-list variants and cleanup sort tests	Eliminate[-2]sorted -list variants and cleanup sort tests [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Make catch and finally ->> friendly  Base on @mbossenbroek's feedback. Seems like an improvement.	Make catch and finally ->>friendly[2]Base on @mbossenbroek's feedback .[sentence: 2,-1] Seems like[2]an improvement[2].[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Update generator docstring	Update generator docstring [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Reimplement into without toList	Reimplement into without toList [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	interpose docstring	interpose docstring [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Updates from @mbossenbroek's feedback.	Updates from @mbossenbroek's feedback .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Update merge/merge-delay-error impls.  Split merge into merge/merge* for consistency with other functions that can take one or more observables or observable of observables.	Update merge /merge -delay[-2]-error[-2]impls .[sentence: 1,-2] Split merge into merge /merge *for consistency with other functions that can take one or more observables or observable of observables .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Avoid intermediate toList for blocking/into	Avoid[-2]intermediate toList for blocking[-2]/into [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Implemented partition-all  There isn't really an rxjava impl equivalent to clojure.core/partition, so it's omitted.	Implemented partition[-2]-all There isn't really an rxjava impl equivalent to clojure .[sentence: 1,-2] core /partition[-2],so it's omitted .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Implement interleave and interleave*	Implement interleave and interleave *[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement group-by  Note that since 02ccc4d727a9297f14219549208757c6e0efce2a, the val-fn variant of groupBy is unimplemented so for now an exception is thrown if it's used.	Implement group -by Note that since 02ccc4d727a9297f14219549208757c6e0efce2a ,the val -fn variant of groupBy is unimplemented so for now an exception is thrown if it's used .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	more README	more README [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	deprecate rx.lang.scala.Observable.create[T](Observer[T]=>Subscription)	deprecate rx .[sentence: 1,-1] lang .[sentence: 1,-1] scala .[sentence: 1,-1] Observable .[sentence: 1,-1] create [T ](Observer [T ]=>Subscription )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' of github.com:Netflix/RxJava into scala-additions	Merge branch 'master 'of github .[sentence: 1,-1] com :Netflix /RxJava into scala -additions [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	add Subscriber and Observable creation from `Subscriber[T] => Unit`	add Subscriber and Observable creation from `Subscriber [T ]=>Unit `[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	some RxScalaDemo tweaks	some RxScalaDemo tweaks [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	tweak RxScalaDemo (and Olympics example)	tweak RxScalaDemo (and Olympics example )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Observable.sample(Observable) in Scala	Observable .[sentence: 1,-1] sample (Observable )in Scala [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added ChannelObservable.get	Added ChannelObservable .[sentence: 1,-1] get [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	-	-[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	map Observable.onError(Throwable) to SendPort.close(Throwable) in	map Observable .[sentence: 1,-1] onError (Throwable )to SendPort .[sentence: 1,-1] close (Throwable )in [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	minor fix in classifier	minor fix in classifier [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Use a custom SuspendableClassifier	Use a custom SuspendableClassifier [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added ChannelObservable.subscribe	Added ChannelObservable .[sentence: 1,-1] subscribe [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	tests pass	tests pass [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	initial commit	initial commit [sentence: 1,-1] [result: max + and - of any sentence]
