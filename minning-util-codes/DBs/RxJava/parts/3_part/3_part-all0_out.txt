Positive	Negative	Text	Explanation
1	-1	Make unit test more deterministic	Make unit test more deterministic [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Migrating from 'toObservable' to 'from' and using toBlockingObservable() where needed	Migrating from 'toObservable 'to 'from 'and using toBlockingObservable ()where needed [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Deprecating 'toObservable' duplications of 'from' methods	Deprecating 'toObservable 'duplications of 'from 'methods [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Move blocking operators to BlockingObservable  - see https://github.com/Netflix/RxJava/issues/270 for background	Move blocking[-2]operators to BlockingObservable[-2]-see https ://github .[sentence: 1,-2] com /Netflix /RxJava /issues /270 for background [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Moving "implementation detail" classes out of public API	Moving 'implementation detail 'classes out of public API [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - new version commit:  'rxjava-0.8.5'.	Gradle Release Plugin -new version commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 5 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #269 from benjchristensen/observeOn  Fix concurrency bug in ScheduledObserver	Merge pull request #269 from benjchristensen /observeOn Fix concurrency bug[-2]in ScheduledObserver [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	Fix concurrency bug in ScheduledObserver  This is a followup to https://github.com/Netflix/RxJava/commit/1fa6ae3be23200c787cc1c25c0bb8cac99ae0d17 that fixed one issue (concurrency) and created another (broke Rx contract by allowing concurrent execution of onNext).  I have reverted back to the previous implementatio and then attempted to fix the concurrency issue again.  I think it ended up being a simple fix ��� just re-ordering the `enqueue` method to remove the race-condition between the logic protected by the AtomicInteger and adding to the queue.  It's not an atomic operation (adding then processing) so we need to just add to the queue and treat it as an async data structure and keep the AtomicInteger portion to only protecting the "process or not process" logic.  ```java         // this must happen before 'counter' is used to provide synchronization between threads         queue.offer(notification); ```  This may still have issues but it's now working in all of my concurrency tests (the ones that broken with the original and then my modified version). The tests are not easy to build unit tests out of as they require running for many seconds and non-deterministically causing a race condition so I have not yet spend the time to try and figure out a deterministic unit test hence them not being committed.	Fix concurrency bug[-2]in ScheduledObserver This is a followup to https ://github .[sentence: 1,-2] com /Netflix /RxJava /commit /1fa6ae3be23200c787cc1c25c0bb8cac99ae0d17 that fixed one issue (concurrency )and created another (broke[-2]Rx contract by allowing concurrent execution of onNext ).[sentence: 1,-2] I have reverted[-2]back to the previous implementatio and then attempted to fix the concurrency issue again .[sentence: 1,-2] I think it ended up being a simple fix ���just re -ordering the `enqueue `method to remove the race -condition between the logic protected by the AtomicInteger and adding to the queue .[sentence: 1,-1] It's not an atomic operation (adding then processing )so we need to just add to the queue and treat[2]it as an async data structure and keep the AtomicInteger portion to only protecting the 'process or not process 'logic .[sentence: 2,-1] ```java //this must happen before 'counter 'is used to provide synchronization between threads queue .[sentence: 1,-1] offer (notification );```This may still have issues but it's now working in all of my concurrency tests (the ones that broken[-2]with the original and then my modified version ).[sentence: 1,-2] The tests are not easy to build unit tests out of as they require running for many seconds and non -deterministically causing a race condition so I have not yet spend the time to try and figure out a deterministic unit test hence them not being committed .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - new version commit:  'rxjava-0.8.4'.	Gradle Release Plugin -new version commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 4 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #268 from benjchristensen/observeOn-fixes  Fix concurrency bug in ScheduledObserver	Merge pull request #268 from benjchristensen /observeOn -fixes Fix concurrency bug[-2]in ScheduledObserver [sentence: 1,-2] [result: max + and - of any sentence]
2	-2	fix concurrency bug in ScheduledObserver  - found a concurrency bug while working on https://github.com/Netflix/Hystrix/issues/123 - the following code would lock up occasionally due to onCompleted not being delivered:  ```java public class RunTest {     public static void main(String[] args) {         System.out.println("Starting test...");          final ArrayList<String> strings = new ArrayList<String>(200000);          int num = 10000;         while (true) {             long start = System.currentTimeMillis();             final AtomicInteger count = new AtomicInteger();             for (int i = 0; i < num; i++) {                 new TestService1(2, 5).toObservable().forEach(new Action1<Integer>() {                      @Override                     public void call(Integer v) {                         count.addAndGet(v);                     }                 });                  new TestService2("hello").toObservable().forEach(new Action1<String>() {                      @Override                     public void call(String v) {                         strings.add(v);                     }                  });             }             long time = (System.currentTimeMillis() - start);             long executions = num * 2;             System.out.println("Time: " + time + "ms for " + executions + " executions (" + (time * 1000) / executions + " microseconds)");             System.out.println("   Count: " + count);             System.out.println("   Strings: " + strings.size());             strings.clear();         }     } } ```  - Also made OperationObserveOn not use ScheduledObserver if the `ImmediateScheduler` is chosen to allow an optimization. I believe this optimization is safe because ScheduledObserver does not require knowledge of a Scheduler (such as for now()) and all we do is emit data to the Observer on a scheduler and if we know it's Immediate we can go direct and skip the enqueuing step. This allows shaving off a noticable number of microseconds per execution in the loop above.	fix concurrency bug[-2]in ScheduledObserver -found a concurrency bug[-2]while working on https ://github .[sentence: 1,-2] com /Netflix /Hystrix /issues /123 -the following code would lock up occasionally due to onCompleted not being delivered :```java public class RunTest {public static[-2]void[-2]main (String []args ){System .[sentence: 1,-2] out .[sentence: 1,-1] println ('Starting test ...[sentence: 1,-1] ');final ArrayList <String >strings =new ArrayList <String >(200000 [+0.6 spelling mood emphasis]);int num =10000 [+0.6 spelling mood emphasis];while (true[2]){long start =System .[sentence: 2,-1] currentTimeMillis ();final AtomicInteger count =new AtomicInteger ();for (int i =0 ;i <num ;i ++){new TestService1 (2 ,5 ).[sentence: 1,-1] toObservable ().[sentence: 1,-1] forEach (new Action1 <Integer >(){@Override public void[-2]call (Integer v ){count .[sentence: 1,-2] addAndGet (v );}});new TestService2 ('hello ').[sentence: 1,-1] toObservable ().[sentence: 1,-1] forEach (new Action1 <String >(){@Override public void[-2]call (String v ){strings .[sentence: 1,-2] add (v );}});}long time =(System .[sentence: 1,-1] currentTimeMillis ()-start );long executions =num *2 ;System .[sentence: 1,-1] out .[sentence: 1,-1] println ('Time :'+time +'ms for '+executions +'executions ('+(time *1000 )/executions +'microseconds )');System .[sentence: 1,-1] out .[sentence: 1,-1] println ('Count :'+count );System .[sentence: 1,-1] out .[sentence: 1,-1] println ('Strings :'+strings .[sentence: 1,-1] size ());strings .[sentence: 1,-1] clear ();}}}```-Also made OperationObserveOn not use ScheduledObserver if the `ImmediateScheduler `is chosen to allow an optimization .[sentence: 1,-1] I believe this optimization is safe[2]because ScheduledObserver does not require knowledge of a Scheduler (such as for now ())and all we do is emit data to the Observer on a scheduler and if we know it's Immediate we can go direct and skip the enqueuing step .[sentence: 2,-1] This allows shaving off a noticable number of microseconds per execution in the loop above .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Update README.md	Update README .[sentence: 1,-1] md [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.8.2	Version 0 .[sentence: 1,-1] 8 .2 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - new version commit:  'rxjava-0.8.3'.	Gradle Release Plugin -new version commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 3 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #266 from benjchristensen/junit-dep  change from junit to junit-dep	Merge pull request #266 from benjchristensen /junit -dep change from junit to junit -dep [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	change from junit to junit-dep  - removes Hamcrest dependencies (http://saltnlight5.blogspot.com/2012/10/whats-up-with-junit-and-hamcrest.html) - solves conflicts on our CI server (blocking release to Maven Central)	change from junit to junit -dep -removes Hamcrest dependencies (http ://saltnlight5 .[sentence: 1,-1] blogspot .[sentence: 1,-1] com /2012 /10 /whats -up -with -junit -and -hamcrest .[sentence: 1,-1] html )-solves conflicts[-2]on our CI server (blocking[-2]release to Maven Central )[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #265 from jmhofer/swing  Swing - component event observables and minor cleanup	Merge pull request #265 from jmhofer /swing Swing -component event observables and minor cleanup [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	fixing strange compilation problems by specifying the packages directly	fixing strange compilation problems[-2]by specifying the packages directly [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	a few minor cleanups, renamings, javadoc additions	a few minor cleanups ,renamings ,javadoc additions [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added observables for component events.	Added observables for component events .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - pre tag commit:  'rxjava-0.8.2'.	Gradle Release Plugin -pre tag commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 2 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #264 from benjchristensen/pull-256-merge-BehaviorSubject  Merge BehaviorSubject from Pull 256	Merge pull request #264 from benjchristensen /pull -256 -merge -BehaviorSubject Merge BehaviorSubject from Pull 256 [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Removing SynchronizedObserver usage from Subject implementations.  - We don't need to add synchronization as the subjects can trust their source Observables to comply with the Rx contract. - This optimization follows Rx Design Guidelines 6.8. Avoid serializing operators  This was discussed at https://github.com/Netflix/RxJava/pull/256	Removing SynchronizedObserver usage from Subject implementations .[sentence: 1,-1] -We don't need to add synchronization as the subjects can trust[2]their source[-2]Observables to comply with the Rx contract .[sentence: 2,-2] -This optimization follows Rx Design Guidelines 6 .[sentence: 1,-1] 8 .[sentence: 1,-1] Avoid[-2]serializing operators This was discussed at https ://github .[sentence: 1,-2] com /Netflix /RxJava /pull /256 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'subject-implementations' of git://github.com/michaeldejong/RxJava into pull-256-merge-BehaviorSubject	Merge branch 'subject -implementations 'of git ://github .[sentence: 1,-1] com /michaeldejong /RxJava into pull -256 -merge -BehaviorSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #262 from jmhofer/swing  A few basic Swing observables	Merge pull request #262 from jmhofer /swing A few basic Swing observables [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	moved SwingObservable into the rx.observables package	moved SwingObservable into the rx .[sentence: 1,-1] observables package [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #263 from benjchristensen/publish-replay-cache  Publish, Replay and Cache Operators	Merge pull request #263 from benjchristensen /publish -replay -cache Publish ,Replay and Cache Operators [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	remove debug statements from unit tests	remove debug statements from unit tests [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Re-order count increment to make unit tests deterministic	Re -order count increment to make unit tests deterministic [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Cache operator  Cache operator as discussed in https://github.com/Netflix/RxJava/pull/209  Similar to `replay()` except that this auto-subscribes to the source sequence. This comes with the same cautions as `toList` when dealing with infinite or very large sequences.	Cache operator Cache operator as discussed in https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /209 Similar to `replay ()`except that this auto -subscribes to the source[-2]sequence .[sentence: 1,-2] This comes with the same cautions as `toList `when dealing with infinite or very large sequences .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Replay operator on Observable  https://github.com/Netflix/RxJava/issues/71	Replay operator on Observable https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /71 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Publish operator on Observable  https://github.com/Netflix/RxJava/issues/15	Publish operator on Observable https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /15 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	added a missing license header	added a missing license header [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge pull request #257 from jmhofer/improved-scan  Improved scan, reduce, aggregate	Merge pull request #257 from jmhofer /improved[2]-scan Improved[2]scan ,reduce ,aggregate [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Added basic mouse event observables.	Added basic mouse event observables .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added observable for all currently pressed keys	Added observable for all currently pressed keys [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Merge branch 'improved-scan' into swing	Merge branch 'improved[2]-scan 'into swing [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' into swing	Merge branch 'master 'into swing [sentence: 1,-1] [result: max + and - of any sentence]
3	-1	fixed method signatures and respective javadocs of various aggregate/reduce/scan overloads	fixed method signatures and respective[3]javadocs of various aggregate /reduce /scan overloads [sentence: 3,-1] [result: max + and - of any sentence]
2	-1	Merge branch 'master' into improved-scan	Merge branch 'master 'into improved[2]-scan [sentence: 2,-1] [result: max + and - of any sentence]
2	-1	Improved documentation of the BehaviourSubject.	Improved[2]documentation of the BehaviourSubject .[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #255 from jmhofer/fix-build-warnings  Cleaning up - fixing a lot of build warnings (mostly javadoc)	Merge pull request #255 from jmhofer /fix -build -warnings Cleaning up -fixing a lot of build warnings (mostly javadoc )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #254 from jmhofer/SwingScheduler  Swing scheduler	Merge pull request #254 from jmhofer /SwingScheduler Swing scheduler [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Switched away from using take and skip again due to concurrency issues.	Switched away from using take and skip again due to concurrency issues .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed a typo, added missing error and completion handling	Fixed a typo ,added missing error[-2]and completion handling [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Also added aggregate (alias for reduce, see issue #20).	Also added aggregate (alias for reduce ,see issue #20 ).[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	also adapted type signatures of the reduce methods	also adapted type signatures of the reduce methods [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	found drop (it's called skip here...) - finished with generalizing scan	found drop[-2](it's called skip here ...)[sentence: 1,-2] -finished with generalizing scan [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	trying to generalize scan, however drop is still missing...	trying to generalize scan ,however drop[-2]is still missing ...[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Created the initial implementation of BehaviorSubject	Created the initial implementation of BehaviorSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added filtering for key codes.	Added filtering for key codes .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Added key events as source for Swing observables.	Added key events as source[-2]for Swing observables .[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Removed some unused code, fixed some (Eclipse) warnings	Removed some unused code ,fixed some (Eclipse )warnings [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Cleaned up all empty `@return` tags, too.	Cleaned up all empty `@return `tags ,too .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed everything but empty return tags.	Fixed everything but empty return tags .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed links in the javadocs, mostly.	Fixed links in the javadocs ,mostly .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Moved Swing observables to new subfolder `rxjava-contrib` after merge.	Moved Swing observables to new subfolder `rxjava -contrib `after merge .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'SwingScheduler' into swing	Merge branch 'SwingScheduler 'into swing [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Renamed `extensions` to `rxjava-contrib`.	Renamed `extensions `to `rxjava -contrib `.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added some api documentation.	Added some api documentation .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Refactored implementation out from SwingObservable, as there will probably be lots more methods in the long run.	Refactored implementation out from SwingObservable ,as there will probably be lots more methods in the long run .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Allow creating observables from `AbstractButton`s.	Allow creating observables from `AbstractButton `s .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Increased test delays.	Increased test delays .[sentence: 1,-1] [result: max + and - of any sentence]
1	-3	Tested whether the actions are really executed in the EDT.	Tested whether the actions are really executed[-2][-1 booster word]in the EDT .[sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Created `extensions` subdirectory for non-core additions to RxJava and moved `SwingScheduler` into a new subproject `rxjava-swing`.	Created `extensions `subdirectory for non -core additions to RxJava and moved `SwingScheduler `into a new subproject `rxjava -swing `.[sentence: 1,-1] [result: max + and - of any sentence]
3	-2	Added tests against periodic scheduling. I hope the delays are stable yet fast enough...	Added tests against[-2]periodic scheduling .[sentence: 1,-2] I hope[3]the delays are stable[-2]yet fast enough ...[sentence: 3,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #249 from jmhofer/timestamp  Timestamp operation	Merge pull request #249 from jmhofer /timestamp Timestamp operation [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #248 from jmhofer/sample  Implemented Sample Operation	Merge pull request #248 from jmhofer /sample Implemented Sample Operation [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #253 from Treora/master  Fix multiple subscription bug on operation filter	Merge pull request #253 from Treora /master Fix multiple subscription bug[-2]on operation filter [sentence: 1,-2] [result: max + and - of any sentence]
1	-3	Fix multiple subscription bug on operation filter  A new subscription must be created on every subscribe call, otherwise any subscribe call after the first directly fails.	Fix multiple subscription bug[-2]on operation filter A new subscription must be created on every subscribe call ,otherwise any subscribe call after the first directly fails[-3].[sentence: 1,-3] [result: max + and - of any sentence]
1	-1	Update CHANGES.md	Update CHANGES .[sentence: 1,-1] md [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implemented periodic scheduling, too. Needs testing now.	Implemented periodic scheduling ,too .[sentence: 1,-1] Needs testing now .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' into SwingScheduler	Merge branch 'master 'into SwingScheduler [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added sample methods to observable.	Added sample methods to observable .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' into sample	Merge branch 'master 'into sample [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merged with master from Netflix repo.	Merged with master from Netflix repo .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge remote-tracking branch 'parent/master' into timestamp	Merge remote -tracking branch 'parent /master 'into timestamp [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added `timestamp` method to `Observable`, too.	Added `timestamp `method to `Observable `,too .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.8.1	Version 0 .[sentence: 1,-1] 8 .1 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - new version commit:  'rxjava-0.8.2-SNAPSHOT'.	Gradle Release Plugin -new version commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 2 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - pre tag commit:  'rxjava-0.8.1'.	Gradle Release Plugin -pre tag commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 1 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #250 from michaeldejong/subject-implementations  Initial implementation of AsyncSubject	Merge pull request #250 from michaeldejong /subject -implementations Initial implementation of AsyncSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #252 from benjchristensen/toFuture  Observable.toFuture	Merge pull request #252 from benjchristensen /toFuture Observable .[sentence: 1,-1] toFuture [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #246 from jmhofer/schedulePeriodically  Scheduling actions periodically	Merge pull request #246 from jmhofer /schedulePeriodically Scheduling actions periodically [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #245 from mairbek/multisubscribe  Moved state from Observable to Observer	Merge pull request #245 from mairbek /multisubscribe Moved state from Observable to Observer [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #247 from benjchristensen/flatMap-alias-to-mapMany  Add flatMap alias to mapMany	Merge pull request #247 from benjchristensen /flatMap -alias -to -mapMany Add flatMap alias to mapMany [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Observable.toFuture	Observable .[sentence: 1,-1] toFuture [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Initial implementation of AsyncSubject	Initial implementation of AsyncSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Removed superfluous null check	Removed superfluous[-2]null check [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	added copyright text to Timestamped class, added timestamp operation, reusing mapping	added copyright text to Timestamped class ,added timestamp operation ,reusing mapping [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added toString to Timestamped	Added toString to Timestamped [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Added value class wrapping timestamped values	Added value[2]class wrapping timestamped values[2][sentence: 2,-1] [result: max + and - of any sentence]
1	-2	fixed formatting and removed superfluous checks	fixed formatting and removed superfluous[-2]checks [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	minor renaming and removing unnecessary warning suppression again	minor renaming and removing unnecessary[-2]warning suppression[-2]again [sentence: 1,-2] [result: max + and - of any sentence]
2	-1	Add flatMap alias to mapMany  This is to match with what Java 8 is adding to Stream so we support the duality of Iterable/Collection to Observable.  http://download.java.net/lambda/b86/docs/api/java/util/stream/Stream.html#flatMap(java.util.function.Function)	Add flatMap alias to mapMany This is to match with what Java 8 is adding to Stream so we support[2]the duality of Iterable /Collection to Observable .[sentence: 2,-1] http ://download .[sentence: 1,-1] java .[sentence: 1,-1] net /lambda /b86 /docs /api /java /util /stream /Stream .[sentence: 1,-1] html #flatMap (java .[sentence: 1,-1] util .[sentence: 1,-1] function .[sentence: 1,-1] Function )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Removed unused imports.	Removed unused imports .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	ExecutorScheduler now uses scheduleAtFixedRate instead of recursion when possible.	ExecutorScheduler now uses scheduleAtFixedRate instead of recursion when possible .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	switched OperationInterval implementation over to use periodic scheduling	switched OperationInterval implementation over to use periodic scheduling [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Tested unsubscription, too	Tested unsubscription ,too [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed millisecond/nanosecond confusion in test scheduler, fixed schedulePeriodically to use now() instead of System.nanoTime() and added a test against scheduling periodically	Fixed millisecond /nanosecond confusion[-2]in test scheduler ,fixed schedulePeriodically to use now ()instead of System .[sentence: 1,-2] nanoTime ()and added a test against[-2]scheduling periodically [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Fixed a bug in the test scheduler that happened when advancing time by a too little amount	Fixed a bug[-2]in the test scheduler that happened when advancing time by a too little amount [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/operators/OperatorGroupBy.java	rxjava -core /src /main /java /rx /operators /OperatorGroupBy .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/operators/OperatorGroupBy.java	rxjava -core /src /main /java /rx /operators /OperatorGroupBy .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Fixed scheduler javadoc, and one single unnecessary cast in takeWhile	Fixed scheduler javadoc ,and one single unnecessary[-2]cast in takeWhile [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	adapted SwingScheduler to new Scheduler interface	adapted SwingScheduler to new Scheduler interface [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' into SwingScheduler	Merge branch 'master 'into SwingScheduler [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	added missing linebreak	added missing linebreak [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' into sample	Merge branch 'master 'into sample [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	taken over default recursive implementation	taken over default[-2]recursive implementation [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	fixing the scheduler methods to fit the new pattern	fixing the scheduler methods to fit the new pattern [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	manually merging master in...	manually merging master in ...[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.8.0	Version 0 .[sentence: 1,-1] 8 .0 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - new version commit:  'rxjava-0.8.1-SNAPSHOT'.	Gradle Release Plugin -new version commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 1 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - pre tag commit:  'rxjava-0.8.0'.	Gradle Release Plugin -pre tag commit :'rxjava -0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 0 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	0.8.0-SNAPSHOT	0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 0 -SNAPSHOT [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #244 from benjchristensen/pre-release-changes  Pre 0.8.0 Release Changes	Merge pull request #244 from benjchristensen /pre -release -changes Pre 0 .[sentence: 1,-1] 8 .[sentence: 1,-1] 0 Release Changes [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Rename from Operator* to Operation* to match convention	Rename from Operator *to Operation *to match convention [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Rename DefaultSubject to PublishSubject  - https://github.com/Netflix/RxJava/issues/242	Rename DefaultSubject to PublishSubject -https ://github .[sentence: 1,-1] com /Netflix /RxJava /issues /242 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #241 from benjchristensen/pull-218-merge-replay  ReplaySubject - Manual Merge of Pull 218	Merge pull request #241 from benjchristensen /pull -218 -merge -replay ReplaySubject -Manual Merge of Pull 218 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/subjects/Subject.java  - moved UnsubscribeTester into a package private class as I'm still undecided on long-term placement of this and the OperatorTester class - merged DefaultSubject and PublishedSubject which were the same thing (lots more unit tests though from this pull request) - still not sure what the right name is for DefaultSubject/PublishSubject - renamed RepeatSubject to ReplaySubject to match .Net - tweaked unit tests with InOrder while reviewing them to understand behavior	rxjava -core /src /main /java /rx /subjects /Subject .[sentence: 1,-1] java -moved UnsubscribeTester into a package private class as I'm still undecided on long -term placement of this and the OperatorTester class -merged DefaultSubject and PublishedSubject which were the same thing (lots more unit tests though from this pull request )-still not sure what the right name is for DefaultSubject /PublishSubject -renamed RepeatSubject to ReplaySubject to match .[sentence: 1,-1] Net -tweaked unit tests with InOrder while reviewing them to understand behavior [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #240 from benjchristensen/fix-TestScheduler  Update TestScheduler to match merged Scheduler changes	Merge pull request #240 from benjchristensen /fix -TestScheduler Update TestScheduler to match merged Scheduler changes [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Update TestScheduler to match merged Scheduler changes  - I accidentally merged this code before fixing it to match the changes to AbstractScheduler/Scheduler	Update TestScheduler to match merged Scheduler changes -I accidentally[-2]merged this code before fixing it to match the changes to AbstractScheduler /Scheduler [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #228 from jmhofer/interval  Interval	Merge pull request #228 from jmhofer /interval Interval [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #231 from mairbek/multicast  Multicast	Merge pull request #231 from mairbek /multicast Multicast [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #239 from mairbek/sched-priorityqueue  CurrentThreadScheduler Delayed Execution Fix	Merge pull request #239 from mairbek /sched -priorityqueue CurrentThreadScheduler Delayed Execution Fix [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/concurrency/SleepingAction.java	rxjava -core /src /main /java /rx /concurrency /SleepingAction .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	CurrentThreadScheduler updates.  Unit test that mixes delayed and immediate scheduling. Added counter to resolve conflicts in case in time between enqueueing took less than 1 ms.	CurrentThreadScheduler updates .[sentence: 1,-1] Unit test that mixes delayed and immediate scheduling .[sentence: 1,-1] Added counter to resolve[2]conflicts[-2]in case in time between enqueueing took less than 1 ms .[sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #223 from billyy/concat-merge  Concat merge	Merge pull request #223 from billyy /concat -merge Concat merge [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #238 from benjchristensen/pull-234-merge-ObserveOn  ScheduledObserver/ObserveOn - Manual Merge of Pull 234	Merge pull request #238 from benjchristensen /pull -234 -merge -ObserveOn ScheduledObserver /ObserveOn -Manual Merge of Pull 234 [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	ObserveOn and SubscribeOn concurrency unit tests  - these are very rudimentary and may have a determinism problem due to the Thread.sleep	ObserveOn and SubscribeOn concurrency unit tests -these are very rudimentary and may have a determinism problem[-2]due to the Thread .[sentence: 1,-2] sleep [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Priority of the delayed actions in CurrentThreadScheduler	Priority of the delayed actions in CurrentThreadScheduler [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #236 from mairbek/sleepingfix  Fixed Sleeping Action	Merge pull request #236 from mairbek /sleepingfix Fixed Sleeping Action [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/concurrency/SleepingAction.java	rxjava -core /src /main /java /rx /concurrency /SleepingAction .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Refactor test to use CountDownLatch instead of Thread.sleep	Refactor test to use CountDownLatch instead of Thread .[sentence: 1,-1] sleep [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'schedulerf' of git://github.com/mairbek/RxJava into pull-234-merge-ObserveOn	Merge branch 'schedulerf 'of git ://github .[sentence: 1,-1] com /mairbek /RxJava into pull -234 -merge -ObserveOn [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #235 from benjchristensen/schedulers-pull-229-merge  Schedulers Interface (Merging and Adding to Pull Request 229)	Merge pull request #235 from benjchristensen /schedulers -pull -229 -merge Schedulers Interface (Merging and Adding to Pull Request 229 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement Scheduler method with dueTime  - added method: schedule(T state, Func2<Scheduler, T, Subscription> action, Date dueTime)	Implement Scheduler method with dueTime -added method :schedule (T state ,Func2 <Scheduler ,T ,Subscription >action ,Date dueTime )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge Scheduler/AbstractScheduler  - using abstract class for Scheduler for same reason Observable is concrete - discussed and decided upon at https://github.com/Netflix/RxJava/pull/235	Merge Scheduler /AbstractScheduler -using abstract class for Scheduler for same reason Observable is concrete -discussed and decided upon at https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /235 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed sleeping action	Fixed sleeping action [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add unit tests for recursive scheduler usage  These tests came from @mairbek at https://github.com/Netflix/RxJava/pull/229#issuecomment-16115941	Add unit tests for recursive scheduler usage These tests came from @mairbek at https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /229 #issuecomment -16115941 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Change Scheduler implementations to use primary methods  Work done in https://github.com/Netflix/RxJava/pull/229 added the following methods:  - Subscription schedule(T state, Func2<Scheduler, T, Subscription> action, long delayTime, TimeUnit unit)} - Subscription schedule(T state, Func2<Scheduler, T, Subscription> action)}  These are in fact the primary methods from RxNet (http://msdn.microsoft.com/en-us/library/hh211963(v=vs.103).aspx) and the others are just helper overloads.  It seems it is better to set the precedent to use these 2 methods for actual implementation logic while all other methods are just decorating and forwarding from AbstractScheduler to these methods.  I have updated the various implementations to achieve this.  Unit tests are passing ��� but we don't have enough unit test coverage so I won't be surprised if bugs are found.	Change Scheduler implementations to use primary methods Work done in https ://github .[sentence: 1,-1] com /Netflix /RxJava /pull /229 added the following methods :-Subscription schedule (T state ,Func2 <Scheduler ,T ,Subscription >action ,long delayTime ,TimeUnit unit )}-Subscription schedule (T state ,Func2 <Scheduler ,T ,Subscription >action )}These are in fact the primary methods from RxNet (http ://msdn .[sentence: 1,-1] microsoft .[sentence: 1,-1] com /en -us /library /hh211963 (v =vs .[sentence: 1,-1] 103 ).[sentence: 1,-1] aspx )and the others are just helper overloads .[sentence: 1,-1] It seems it is better to set the precedent to use these 2 methods for actual implementation logic while all other methods are just decorating and forwarding from AbstractScheduler to these methods .[sentence: 1,-1] I have updated the various implementations to achieve this .[sentence: 1,-1] Unit tests are passing ���but we don't have enough unit test coverage so I won't be surprised if bugs are found .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add CompositeSubscription  - also a utility method for creating a Subscription around a Future	Add CompositeSubscription -also a utility method for creating a Subscription around a Future [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'schedulers' of git://github.com/jmhofer/RxJava into pull-229-merge	Merge branch 'schedulers 'of git ://github .[sentence: 1,-1] com /jmhofer /RxJava into pull -229 -merge [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Merge pull request #230 from johngmyers/wrap-unsubscribed  An unsubscribed AtomicObservableSubscription.wrap() unsubscribes its argument	Merge pull request #230 from johngmyers /wrap -unsubscribed An unsubscribed AtomicObservableSubscription .[sentence: 1,-1] wrap ()unsubscribes its argument[-2][sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge pull request #232 from mairbek/naming  Corrected naming	Merge pull request #232 from mairbek /naming Corrected naming [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixing UnitTest	Fixing UnitTest [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Trying to fix a build	Trying to fix a build [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Non-blocking implementation of ScheduledObserver	Non -blocking[-2]implementation of ScheduledObserver [sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Blocking implementation of ScheduledObserver	Blocking[-2]implementation of ScheduledObserver [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Corrected naming Operator -> Operation	Corrected naming Operator ->Operation [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Moved state to Observer from Observable	Moved state to Observer from Observable [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Removed annotation	Removed annotation [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Added support for sever connect method calls	Added support[2]for sever[-2]connect method calls [sentence: 2,-2] [result: max + and - of any sentence]
1	-1	Unit tests for multicast	Unit tests for multicast [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Multicast implemented	Multicast implemented [sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Playing with Subject and ConnectedObservable	Playing[2]with Subject and ConnectedObservable [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	initial attempt at implementing periodic schedulers as discussed in #228, needs some testing next...	initial attempt at implementing periodic schedulers as discussed in #228 ,needs some testing next ...[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Added a unit test against the sample operator	Added a unit test against[-2]the sample operator [sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Switched sample from internal clock to using the interval operator	Switched sample from internal clock to using the interval operator [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'interval' into sample	Merge branch 'interval 'into sample [sentence: 1,-1] [result: max + and - of any sentence]
1	-2	An unsubscribed AtomicObservableSubscription.wrap() unsubscribes its argument.	An unsubscribed AtomicObservableSubscription .[sentence: 1,-1] wrap ()unsubscribes its argument[-2].[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Trying to extend the Scheduler interface according to the comments at #19.	Trying to extend the Scheduler interface according to the comments at #19 .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Added a scheduler for scheduling actions on the Swing event thread.	Added a scheduler for scheduling actions on the Swing event thread .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	First attempt at "sample" operator. Should probably use "interval" operator instead of an internal clock. Also still needs tests!	First attempt at 'sample 'operator .[sentence: 1,-1] Should probably use 'interval 'operator instead of an internal clock .[sentence: 1,-1] Also still needs tests ![+0.6 punctuation mood emphasis][sentence: 2,-1] [result: max + and - of any sentence]
1	-2	Oops, the test scheduler has to go into the main sources.	Oops ,the test scheduler has to go into the main sources[-2].[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Fixed yet more indentation issues.	Fixed yet more indentation issues .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fixed indentation.	Fixed indentation .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	Switched to a default scheduler that actually works together with this operator.	Switched to a default[-2]scheduler that actually works together with this operator .[sentence: 1,-2] [result: max + and - of any sentence]
1	-2	Added a unit test. Fixed the implementation. Maybe still a bit naive when it comes to intervals that are too small to keep up with?	Added a unit test .[sentence: 1,-1] Fixed the implementation .[sentence: 1,-1] Maybe still a bit naive[-2]when it comes to intervals that are too small to keep up with ?[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Added a TestScheduler which collects actions in a queue and has adjustable time.	Added a TestScheduler which collects actions in a queue and has adjustable time .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Initial implementation for interval (#55). Needs a test scheduler...	Initial implementation for interval (#55 ).[sentence: 1,-1] Needs a test scheduler ...[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Version 0.7.0	Version 0 .[sentence: 1,-1] 7 .0 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - new version commit:  'rxjava-0.7.1-SNAPSHOT'.	Gradle Release Plugin -new version commit :'rxjava -0 .[sentence: 1,-1] 7 .[sentence: 1,-1] 1 -SNAPSHOT '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Gradle Release Plugin - pre tag commit:  'rxjava-0.7.0'.	Gradle Release Plugin -pre tag commit :'rxjava -0 .[sentence: 1,-1] 7 .[sentence: 1,-1] 0 '.[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	0.7.0-SNAPSHOT  Bumping to 0.7.0 because Schedulers is a big feature addition.	0 .[sentence: 1,-1] 7 .[sentence: 1,-1] 0 -SNAPSHOT Bumping to 0 .[sentence: 1,-1] 7 .[sentence: 1,-1] 0 because Schedulers is a big feature addition .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Removing Scheduler overloads on operators (for now)  I have some outstanding questions on how these should be implemented (or even why we need them when the 'subscribeOn' operator is far cleaner) so want to remove them for now so they don't make it into the public incorrectly.	Removing Scheduler overloads on operators (for now )I have some outstanding[3][+-1 booster word]questions on how these should be implemented (or even why we need them when the 'subscribeOn 'operator is far cleaner )so want to remove them for now so they don't make it into the public incorrectly .[sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Merge pull request #225 from benjchristensen/schedulers-merge  Schedulers (merge of pull #199)	Merge pull request #225 from benjchristensen /schedulers -merge Schedulers (merge of pull #199 )[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Fix non-deterministic unit test	Fix non -deterministic unit test [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Use long instead of int   ��� considering very long running app with lots of IO events.	Use long instead of int ���considering very long running app with lots of IO events .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Name the NewThreadScheduler threads	Name the NewThreadScheduler threads [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Set threads to daemons so they don't prevent system from exiting  - This applies to any pools RxJava itself creates. It will be up to users to do this for Executors they inject.	Set threads to daemons so they don't prevent system from exiting -This applies to any pools RxJava itself creates .[sentence: 1,-1] It will be up to users to do this for Executors they inject .[sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Scheduler overloads for Subscribe, ToObservable, From, Merge, Empty  - the list of operators to add overloads to was derived from the Rx.Net docs at http://msdn.microsoft.com/en-us/library/hh212048(v=vs.103).aspx	Scheduler overloads for Subscribe ,ToObservable ,From ,Merge ,Empty -the list of operators to add overloads to was derived from the Rx .[sentence: 1,-1] Net docs at http ://msdn .[sentence: 1,-1] microsoft .[sentence: 1,-1] com /en -us /library /hh212048 (v =vs .[sentence: 1,-1] 103 ).[sentence: 1,-1] aspx [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Basic unit tests  - I plan on using this to expand unit testing around various aspects of schedulers - this is not done as an inner-class as it does not correlate with just one class but is cross-functional over many classes thus it fits best here	Basic unit tests -I plan on using this to expand unit testing around various aspects of schedulers -this is not done as an inner -class as it does not correlate with just one class but is cross[-2]-functional over many classes thus it fits best[2]here [sentence: 2,-2] [result: max + and - of any sentence]
2	-1	Tweaks to Executor/ExecutorScheduler/IOScheduler and Javadocs  - added Javadocs - moved some classes to package-private until they are proven necessary for the public API - made ExecutorScheduler support Executor implementations and still work with time delays by using a system-wide scheduler/timer - made IO thread-pool unbounded with a cached thread pool	Tweaks to Executor /ExecutorScheduler /IOScheduler and Javadocs -added Javadocs -moved some classes to package -private until they are proven necessary for the public API -made ExecutorScheduler support[2]Executor implementations and still work with time delays by using a system -wide scheduler /timer -made IO thread -pool unbounded with a cached thread pool [sentence: 2,-1] [result: max + and - of any sentence]
1	-1	Make ForwardingScheduler Internal  Until there is a use case other than unit testing I'm moving this to a non-public role so it's not part of the public API.	Make ForwardingScheduler Internal Until there is a use case other than unit testing I'm moving this to a non -public role so it's not part of the public API .[sentence: 1,-1] [result: max + and - of any sentence]
1	-2	1.  Update javadoc on subscribe() blocking if observables are running on the same thread. 2.  Add test case with infinity observable. 3.  Add test case to unsubscribe() with all observables running in different thread (non-blocking).	1 .[sentence: 1,-1] Update javadoc on subscribe ()blocking[-2]if observables are running on the same thread .[sentence: 1,-2] 2 .[sentence: 1,-1] Add test case with infinity observable .[sentence: 1,-1] 3 .[sentence: 1,-1] Add test case to unsubscribe ()with all observables running in different thread (non -blocking[-2]).[sentence: 1,-2] [result: max + and - of any sentence]
1	-1	Merge branch 'issue202' of https://github.com/abliss/RxJava into concat-merge	Merge branch 'issue202 'of https ://github .[sentence: 1,-1] com /abliss /RxJava into concat -merge [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'master' of git://github.com/Netflix/RxJava into issue202	Merge branch 'master 'of git ://github .[sentence: 1,-1] com /Netflix /RxJava into issue202 [sentence: 1,-1] [result: max + and - of any sentence]
2	-2	Resolve merge conflicts	Resolve[2]merge conflicts[-2][sentence: 2,-2] [result: max + and - of any sentence]
1	-1	rxjava-core/src/main/java/rx/operators/OperationTake.java	rxjava -core /src /main /java /rx /operators /OperationTake .[sentence: 1,-1] java [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Add unit tests to PublishSubject	Add unit tests to PublishSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Beef up UnsubscribeTester some more	Beef up UnsubscribeTester some more [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Beef up UnsubscribeTester	Beef up UnsubscribeTester [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Extract UnsubscribeTester to top level	Extract UnsubscribeTester to top level [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Implement RepeatSubject	Implement RepeatSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Introduce Subject as analogue to RX ISubject	Introduce Subject as analogue to RX ISubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Rename Subject to PublishSubject	Rename Subject to PublishSubject [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Merge branch 'upstream' into issue202	Merge branch 'upstream 'into issue202 [sentence: 1,-1] [result: max + and - of any sentence]
1	-1	Incorporate review feedback.  Also restore the errant change to settings.gradle.	Incorporate review feedback .[sentence: 1,-1] Also restore the errant change to settings .[sentence: 1,-1] gradle .[sentence: 1,-1] [result: max + and - of any sentence]
2	-1	Reimplementation of Concat, improved handling of Observable<Observable<T>>.  The old version required all of the Observable<T>s to be generated and buffered before the concat could begin.  If the outer Observable was asynchronous, items could be dropped (test added).  The new version passes the test, and does the best job I could (after examining several possible strategies) of achieving clear and consistent semantics in accordance with the principle of least surprise.	Reimplementation of Concat ,improved[2]handling of Observable <Observable <T >>.[sentence: 2,-1] The old version required all of the Observable <T >s to be generated and buffered before the concat could begin .[sentence: 1,-1] If the outer Observable was asynchronous ,items could be dropped (test added ).[sentence: 1,-1] The new version passes the test ,and does the best[2]job I could (after examining several possible strategies )of achieving clear and consistent semantics in accordance with the principle of least surprise .[sentence: 2,-1] [result: max + and - of any sentence]
